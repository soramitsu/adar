"use strict";(self.webpackChunkadar=self.webpackChunkadar||[]).push([[2830],{2830:function(t,e,o){o.r(e),o.d(e,{default:function(){return u}});var i=o(60760),s=o(70655),a=o(53545),n=o(8755),r=o(80710),c=o(16546),l=o(74614);let d=class extends((0,a.Wr)(n.tA.TransactionMixin,n.tA.DialogMixin)){constructor(...t){super(...t),(0,i.Z)(this,"slippageTolerance",void 0),(0,i.Z)(this,"fromValue",void 0),(0,i.Z)(this,"toValue",void 0),(0,i.Z)(this,"isExchangeB",void 0),(0,i.Z)(this,"selectedDexId",void 0),(0,i.Z)(this,"minMaxReceived",void 0),(0,i.Z)(this,"liquiditySource",void 0),(0,i.Z)(this,"tokenFrom",void 0),(0,i.Z)(this,"tokenTo",void 0),(0,i.Z)(this,"isInsufficientBalance",void 0)}get formattedFromValue(){return this.formatStringValue(this.fromValue,this.tokenFrom?.decimals)}get formattedToValue(){return this.formatStringValue(this.toValue,this.tokenTo?.decimals)}get formattedMinMaxReceived(){const t=(this.isExchangeB?this.tokenFrom:this.tokenTo)?.decimals;return this.formatCodecNumber(this.minMaxReceived,t)}async handleConfirmSwap(){if(this.isInsufficientBalance)this.$alert(this.t("exchange.insufficientBalance",{tokenSymbol:this.tokenFrom?this.tokenFrom.symbol:""}),{title:this.t("errorText")}),this.$emit("confirm");else try{await this.withNotifications((async()=>await n.hi.swap.execute(this.tokenFrom,this.tokenTo,this.fromValue,this.toValue,this.slippageTolerance,this.isExchangeB,this.liquiditySource,this.selectedDexId))),this.$emit("confirm",!0)}catch(t){this.$emit("confirm")}this.isVisible=!1}};(0,s.__decorate)([l.SB.settings.slippageTolerance],d.prototype,"slippageTolerance",void 0),(0,s.__decorate)([l.SB.swap.fromValue],d.prototype,"fromValue",void 0),(0,s.__decorate)([l.SB.swap.toValue],d.prototype,"toValue",void 0),(0,s.__decorate)([l.SB.swap.isExchangeB],d.prototype,"isExchangeB",void 0),(0,s.__decorate)([l.SB.swap.selectedDexId],d.prototype,"selectedDexId",void 0),(0,s.__decorate)([l.Yn.swap.minMaxReceived],d.prototype,"minMaxReceived",void 0),(0,s.__decorate)([l.Yn.swap.swapLiquiditySource],d.prototype,"liquiditySource",void 0),(0,s.__decorate)([l.Yn.swap.tokenFrom],d.prototype,"tokenFrom",void 0),(0,s.__decorate)([l.Yn.swap.tokenTo],d.prototype,"tokenTo",void 0),(0,s.__decorate)([(0,a.fI)({default:!1,type:Boolean})],d.prototype,"isInsufficientBalance",void 0),d=(0,s.__decorate)([(0,a.wA)({components:{DialogBase:n.wx.DialogBase,TokenLogo:n.wx.TokenLogo,SwapTransactionDetails:(0,r.kF)(c.z8.SwapTransactionDetails)}})],d);var p=d,u=(0,o(1001).Z)(p,(function(){var t=this,e=t.$createElement,o=t._self._c||e;return o("dialog-base",{attrs:{visible:t.isVisible,title:t.t("swap.confirmSwap"),"custom-class":"dialog--confirm-swap"},on:{"update:visible":function(e){t.isVisible=e}},scopedSlots:t._u([{key:"footer",fn:function(){return[o("s-button",{staticClass:"s-typography-button--large",attrs:{type:"primary",disabled:t.loading},on:{click:t.handleConfirmSwap}},[t._v(" "+t._s(t.t("exchange.confirm"))+" ")])]},proxy:!0}])},[o("div",{staticClass:"tokens"},[o("div",{staticClass:"tokens-info-container"},[o("span",{staticClass:"token-value"},[t._v(t._s(t.formattedFromValue))]),t.tokenFrom?o("div",{staticClass:"token"},[o("token-logo",{staticClass:"token-logo",attrs:{token:t.tokenFrom}}),t._v(" "+t._s(t.tokenFrom.symbol)+" ")],1):t._e()]),o("s-icon",{staticClass:"icon-divider",attrs:{name:"arrows-arrow-bottom-24"}}),o("div",{staticClass:"tokens-info-container"},[o("span",{staticClass:"token-value"},[t._v(t._s(t.formattedToValue))]),t.tokenTo?o("div",{staticClass:"token"},[o("token-logo",{staticClass:"token-logo",attrs:{token:t.tokenTo}}),t._v(" "+t._s(t.tokenTo.symbol)+" ")],1):t._e()])],1),o("p",{staticClass:"transaction-message",class:{"transaction-message--min-received":!t.isExchangeB},domProps:{innerHTML:t._s(t.t("swap.swap"+(t.isExchangeB?"Input":"Output")+"Message",{transactionValue:"<span class='transaction-number'>"+t.formattedMinMaxReceived+"</span>"}))}}),o("s-divider"),o("swap-transaction-details")],1)}),[],!1,null,"298c0543",null).exports}}]);