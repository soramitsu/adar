"use strict";(self.webpackChunkadar=self.webpackChunkadar||[]).push([[3877],{13877:function(t,o,e){e.r(o),e.d(o,{default:function(){return u}});var s=e(23166),a=e(97582),i=e(86424),n=e(89445),r=e(68282),c=e(69781),l=e(49053);let d=class extends((0,n.Wr)(i.tA.TransactionMixin,i.tA.DialogMixin)){constructor(...t){super(...t),(0,s.Z)(this,"fromValue",void 0),(0,s.Z)(this,"toValue",void 0),(0,s.Z)(this,"isExchangeB",void 0),(0,s.Z)(this,"minMaxReceived",void 0),(0,s.Z)(this,"tokenFrom",void 0),(0,s.Z)(this,"tokenTo",void 0),(0,s.Z)(this,"isInsufficientBalance",void 0)}get formattedFromValue(){return this.formatStringValue(this.fromValue,this.tokenFrom?.decimals)}get formattedToValue(){return this.formatStringValue(this.toValue,this.tokenTo?.decimals)}get formattedMinMaxReceived(){const t=(this.isExchangeB?this.tokenFrom:this.tokenTo)?.decimals;return this.formatCodecNumber(this.minMaxReceived,t)}async handleConfirm(){this.$emit("confirm"),this.closeDialog()}};(0,a.gn)([l.SB.swap.fromValue],d.prototype,"fromValue",void 0),(0,a.gn)([l.SB.swap.toValue],d.prototype,"toValue",void 0),(0,a.gn)([l.SB.swap.isExchangeB],d.prototype,"isExchangeB",void 0),(0,a.gn)([l.Yn.swap.minMaxReceived],d.prototype,"minMaxReceived",void 0),(0,a.gn)([l.Yn.swap.tokenFrom],d.prototype,"tokenFrom",void 0),(0,a.gn)([l.Yn.swap.tokenTo],d.prototype,"tokenTo",void 0),(0,a.gn)([(0,n.fI)({default:!1,type:Boolean})],d.prototype,"isInsufficientBalance",void 0),d=(0,a.gn)([(0,n.wA)({components:{DialogBase:i.wx.DialogBase,TokenLogo:i.wx.TokenLogo,AccountConfirmationOption:i.wx.AccountConfirmationOption,SwapTransactionDetails:(0,c.kF)(r.z8.SwapTransactionDetails)}})],d);var p=d,u=(0,e(1001).Z)(p,(function(){var t=this,o=t._self._c;t._self._setupProxy;return o("dialog-base",{attrs:{visible:t.isVisible,title:t.t("swap.confirmSwap"),"custom-class":"dialog--confirm-swap","append-to-body":""},on:{"update:visible":function(o){t.isVisible=o}},scopedSlots:t._u([{key:"footer",fn:function(){return[o("account-confirmation-option",{staticClass:"confirmation-option",attrs:{"with-hint":""}}),o("s-button",{staticClass:"s-typography-button--large",attrs:{type:"primary",disabled:t.isInsufficientBalance},on:{click:t.handleConfirm}},[t._v(" "+t._s(t.t("exchange.confirm"))+" ")])]},proxy:!0}])},[o("div",{staticClass:"tokens"},[o("div",{staticClass:"tokens-info-container"},[o("span",{staticClass:"token-value"},[t._v(t._s(t.formattedFromValue))]),t.tokenFrom?o("div",{staticClass:"token"},[o("token-logo",{staticClass:"token-logo",attrs:{token:t.tokenFrom}}),t._v(" "+t._s(t.tokenFrom.symbol)+" ")],1):t._e()]),o("s-icon",{staticClass:"icon-divider",attrs:{name:"arrows-arrow-bottom-24"}}),o("div",{staticClass:"tokens-info-container"},[o("span",{staticClass:"token-value"},[t._v(t._s(t.formattedToValue))]),t.tokenTo?o("div",{staticClass:"token"},[o("token-logo",{staticClass:"token-logo",attrs:{token:t.tokenTo}}),t._v(" "+t._s(t.tokenTo.symbol)+" ")],1):t._e()])],1),o("p",{staticClass:"transaction-message",class:{"transaction-message--min-received":!t.isExchangeB},domProps:{innerHTML:t._s(t.t(`swap.swap${t.isExchangeB?"Input":"Output"}Message`,{transactionValue:`<span class='transaction-number'>${t.formattedMinMaxReceived}</span>`}))}}),o("s-divider"),o("swap-transaction-details")],1)}),[],!1,null,"4e15b0a6",null).exports}}]);