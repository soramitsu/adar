"use strict";(self.webpackChunkadar=self.webpackChunkadar||[]).push([[7443],{37443:function(e,t,d){d.r(t),d.d(t,{default:function(){return p}});var o=d(60760),s=d(70655),i=d(4588),n=d.n(i),r=d(53545),a=d(8755),c=d(80710),l=d(16546),N=d(54643),h=d(74614),u=d(46621),g=d(63390);const v="NodeListView",f="NodeInfoView";let m=class extends((0,r.Wr)(u.Z,a.tA.LoadingMixin)){constructor(...e){super(...e),(0,o.Z)(this,"defaultNodes",void 0),(0,o.Z)(this,"nodeAddressConnecting",void 0),(0,o.Z)(this,"selectNodeDialogVisibility",void 0),(0,o.Z)(this,"nodeConnectionAllowance",void 0),(0,o.Z)(this,"soraNetwork",void 0),(0,o.Z)(this,"nodeList",void 0),(0,o.Z)(this,"connectToNode",void 0),(0,o.Z)(this,"addCustomNode",void 0),(0,o.Z)(this,"updateCustomNode",void 0),(0,o.Z)(this,"removeCustomNode",void 0),(0,o.Z)(this,"currentView",v),(0,o.Z)(this,"selectedNode",{})}get visibility(){return this.selectNodeDialogVisibility}set visibility(e){this.setSelectNodeDialogVisibility(e),e||this.handleBack()}get connectedNodeAddress(){return this.node?.address??""}set connectedNodeAddress(e){if(e===this.node.address)return;const t=this.findNodeInListByAddress(e);this.handleNode(t)}get isSelectedNodeRemovable(){return!this.defaultNodes.find((e=>e.address===this.selectedNode?.address))}get isSelectedNodeLoading(){return!this.nodeConnectionAllowance||this.isConnectingNode(this.selectedNode)}get isSelectedNodeConnected(){return this.isConnectedNodeAddress(this.selectedNode?.address)}get existingNodeIsSelected(){return!!this.findNodeInListByAddress(this.selectedNode?.address??"")}get isNodeListView(){return this.currentView===v}get formattedNodeList(){return this.nodeList.map((e=>this.formatNode(e)))}get dialogCustomClass(){return this.isNodeListView?"":"select-node-dialog--add-node"}async handleNode(e,t=!1){try{await this.setCurrentNode(e,t),this.selectedNode.address===e.address&&this.currentView===f&&this.handleBack()}catch(e){}}async removeNode(e){this.removeCustomNode(e),this.handleBack(),this.isConnectedNodeAddress(e.address)&&await this.setCurrentNode(this.defaultNodes[0])}navigateToNodeInfo(e){this.selectedNode=e||{},this.changeView(f)}handleBack(){this.changeView(v)}getNodePermittedData(e){return n()(Object.keys(g.X))(e)}async setCurrentNode(e,t=!1){const d=this.getNodePermittedData(e);if(t){const e=this.findInList(this.defaultNodes,d.address);if(e){const t=this.formatNode(e),d=new N.x({key:"node.errors.existing",payload:{title:t.title}});return this.handleNodeError(d)}}if(d.address!==this.connectedNodeAddress&&await this.connectToNode({node:d,onError:e=>this.handleNodeError(e,!t),onDisconnect:this.handleNodeDisconnect,onReconnect:this.handleNodeReconnect}),t){const e=this.findNodeInListByAddress(d.address),t=this.selectedNode.address||e?.address;t?this.updateCustomNode({address:t,node:d}):this.addCustomNode(d)}this.selectedNode=this.findNodeInListByAddress(d.address)}formatNode(e){return{...e,title:e.name&&e.chain?this.t("selectNodeDialog.nodeTitle",{chain:e.chain,name:e.name}):e.name||e.chain,connecting:this.isConnectingNode(e)}}changeView(e){this.currentView=e}findInList(e,t){return e.find((e=>e.address===t))}findNodeInListByAddress(e){return this.findInList(this.formattedNodeList,e)}isConnectedNodeAddress(e){return!!this.connectedNodeAddress&&this.connectedNodeAddress===e}isConnectingNode(e){return this.nodeAddressConnecting===e?.address}};(0,s.__decorate)([h.SB.settings.defaultNodes],m.prototype,"defaultNodes",void 0),(0,s.__decorate)([h.SB.settings.nodeAddressConnecting],m.prototype,"nodeAddressConnecting",void 0),(0,s.__decorate)([h.SB.settings.selectNodeDialogVisibility],m.prototype,"selectNodeDialogVisibility",void 0),(0,s.__decorate)([h.SB.settings.nodeConnectionAllowance],m.prototype,"nodeConnectionAllowance",void 0),(0,s.__decorate)([h.SB.wallet.settings.soraNetwork],m.prototype,"soraNetwork",void 0),(0,s.__decorate)([h.Yn.settings.nodeList],m.prototype,"nodeList",void 0),(0,s.__decorate)([h.aD.settings.connectToNode],m.prototype,"connectToNode",void 0),(0,s.__decorate)([h.aD.settings.addCustomNode],m.prototype,"addCustomNode",void 0),(0,s.__decorate)([h.aD.settings.updateCustomNode],m.prototype,"updateCustomNode",void 0),(0,s.__decorate)([h.aD.settings.removeCustomNode],m.prototype,"removeCustomNode",void 0),m=(0,s.__decorate)([(0,r.wA)({components:{DialogBase:a.wx.DialogBase,SelectNode:(0,c.kF)(l.z8.SelectNode),NodeInfo:(0,c.kF)(l.z8.NodeInfo)}})],m);var C=m,p=(0,d(1001).Z)(C,(function(){var e=this,t=e.$createElement,d=e._self._c||t;return d("dialog-base",{class:["select-node-dialog",e.dialogCustomClass],attrs:{visible:e.visibility,title:e.t("selectNodeDialog.title")},on:{"update:visible":function(t){e.visibility=t}}},[e.isNodeListView?d("select-node",{attrs:{nodes:e.formattedNodeList,"handle-node":e.navigateToNodeInfo,environment:e.soraNetwork,"disable-select":!e.nodeConnectionAllowance},model:{value:e.connectedNodeAddress,callback:function(t){e.connectedNodeAddress=t},expression:"connectedNodeAddress"}}):d("node-info",{attrs:{node:e.selectedNode,existing:e.existingNodeIsSelected,loading:e.isSelectedNodeLoading,removable:e.isSelectedNodeRemovable,connected:e.isSelectedNodeConnected,"handle-back":e.handleBack,"handle-node":e.handleNode,"remove-node":e.removeNode}})],1)}),[],!1,null,null,null).exports}}]);