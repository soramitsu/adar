"use strict";(self.webpackChunkadar=self.webpackChunkadar||[]).push([[8727],{78727:function(e,t,i){i.r(t),i.d(t,{default:function(){return h}});var s=i(23166),n=i(97582),r=i(86424),a=i(89445),d=i(89334),o=i(68282),l=i(69781),c=i(49053),p=i(50961);const x="IndexerListView";let u=class extends((0,a.Wr)(d.Z,r.tA.NotificationMixin)){constructor(...e){super(...e),(0,s.Z)(this,"selectIndexerDialogVisibility",void 0),(0,s.Z)(this,"soraNetwork",void 0),(0,s.Z)(this,"indexersData",void 0),(0,s.Z)(this,"indexerType",void 0),(0,s.Z)(this,"ceresFiatValuesUsage",void 0),(0,s.Z)(this,"setSelectIndexerDialogVisibility",void 0),(0,s.Z)(this,"selectIndexer",void 0),(0,s.Z)(this,"useCeresApiForFiatValues",void 0),(0,s.Z)(this,"currentView",x)}get indexers(){return Object.keys(r.WALLET_CONSTS.IndexerType).map((e=>{const t=r.WALLET_CONSTS.IndexerType[e];return{name:(0,p.kC)(t),type:t,endpoint:this.indexersData[t].endpoint,online:this.indexersData[t].status===r.uQ.ConnectionStatus.Available}}))}get indexer(){const e=this.indexers.find((e=>e.type===this.indexerType));if(!e)throw new Error("Unknown indexer type");return e}get visibility(){return this.selectIndexerDialogVisibility}set visibility(e){this.setSelectIndexerDialogVisibility(e),e||this.handleBack()}get useCeresApi(){return this.ceresFiatValuesUsage}set useCeresApi(e){this.useCeresApiForFiatValues(e)}get selectedIndexerType(){return this.indexerType??""}set selectedIndexerType(e){if(e===this.indexerType)return;const t=this.findIndexerInListByType(e);this.handleIndexer(t)}async handleIndexer(e){await this.selectIndexer(e.type),this.indexer.type===e.type&&"IndexerInfoView"===this.currentView&&this.handleBack()}handleBack(){this.changeView(x)}changeView(e){this.currentView=e}findInList(e,t){return e.find((e=>e.type===t))}findIndexerInListByType(e){return this.findInList(this.indexers,e)}};(0,n.gn)([c.SB.settings.selectIndexerDialogVisibility],u.prototype,"selectIndexerDialogVisibility",void 0),(0,n.gn)([c.SB.wallet.settings.soraNetwork],u.prototype,"soraNetwork",void 0),(0,n.gn)([c.SB.wallet.settings.indexers],u.prototype,"indexersData",void 0),(0,n.gn)([c.SB.wallet.settings.indexerType],u.prototype,"indexerType",void 0),(0,n.gn)([c.SB.wallet.account.ceresFiatValuesUsage],u.prototype,"ceresFiatValuesUsage",void 0),(0,n.gn)([c.QF.settings.setSelectIndexerDialogVisibility],u.prototype,"setSelectIndexerDialogVisibility",void 0),(0,n.gn)([c.aD.wallet.settings.selectIndexer],u.prototype,"selectIndexer",void 0),(0,n.gn)([c.aD.wallet.account.useCeresApiForFiatValues],u.prototype,"useCeresApiForFiatValues",void 0),u=(0,n.gn)([(0,a.wA)({components:{DialogBase:r.wx.DialogBase,SelectIndexer:(0,l.kF)(o.z8.SelectIndexer),IndexerInfo:(0,l.kF)(o.z8.IndexerInfo)}})],u);var y=u,h=(0,i(1001).Z)(y,(function(){var e=this,t=e._self._c;e._self._setupProxy;return t("dialog-base",{staticClass:"select-indexer-dialog",attrs:{visible:e.visibility,title:e.t("footer.statistics.dialog.title")},on:{"update:visible":function(t){e.visibility=t}}},[t("select-indexer",{attrs:{indexer:e.selectedIndexerType,ceres:e.useCeresApi,indexers:e.indexers,environment:e.soraNetwork},on:{"update:indexer":function(t){e.selectedIndexerType=t},"update:ceres":function(t){e.useCeresApi=t}}})],1)}),[],!1,null,null,null).exports}}]);