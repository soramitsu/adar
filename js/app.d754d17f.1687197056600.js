!function(){var e,t,s,o,n,a,r,i={44539:function(e){e.exports={functional:!0,render(e,t){const{_c:s,_v:o,data:n,children:a=[]}=t,{class:r,staticClass:i,style:c,staticStyle:d,attrs:l={},...u}=n;return s("svg",{class:["notif-option__bell",r,i],style:[c,d],attrs:Object.assign({width:"28",height:"28",fill:"currentcolor",xmlns:"http://www.w3.org/2000/svg"},l),...u},a.concat([s("path",{attrs:{"fill-rule":"evenodd","clip-rule":"evenodd",d:"M21.221 22H6.78c-2.286 0-3.59-2.299-2.22-3.91a4.57 4.57 0 001.083-2.446L6.2 10.72c.301-2.656 2.284-4.835 4.962-5.752v-.13a2.837 2.837 0 115.674 0v.13c2.678.917 4.661 3.096 4.962 5.752l.56 4.925a4.57 4.57 0 001.081 2.446c1.372 1.611.067 3.91-2.219 3.91zm-3.506 2.59C17.143 25.998 15.695 27 14 27c-1.696 0-3.143-1.001-3.715-2.41a.53.53 0 01.494-.714h6.442a.53.53 0 01.494.713z"}})]))}}},45605:function(e){e.exports={functional:!0,render(e,t){const{_c:s,_v:o,data:n,children:a=[]}=t,{class:r,staticClass:i,style:c,staticStyle:d,attrs:l={},...u}=n;return s("svg",{class:[r,i],style:[c,d],attrs:Object.assign({width:"24",height:"24",fill:"currentColor",xmlns:"http://www.w3.org/2000/svg"},l),...u},a.concat([s("path",{attrs:{"fill-rule":"evenodd","clip-rule":"evenodd",d:"M0 5a4 4 0 014-4h16a4 4 0 014 4v1.25H0V5zm24 5.25v-2.5H0v2.5h24zm0 1.5H0V19a4 4 0 004 4h16a4 4 0 004-4v-7.25zm-18 4.5a.75.75 0 000 1.5h2a.75.75 0 000-1.5H6z",fill:"#F8087B"}})]))}}},20439:function(e,t,s){"use strict";s.d(t,{Np:function(){return n},tQ:function(){return a}});var o=s(36930);o.axiosInstance.defaults.headers.common["Cache-Control"]="no-cache";const n=e=>{if(e&&"hash"===e.mode){const{origin:e,pathname:t}=window.location;return`${e}${t}`}return""},a=e=>{const t=n(e);o.axiosInstance.defaults.baseURL=t};t.ZP=o.axiosInstance},64645:function(e,t,s){"use strict";s.d(t,{T:function(){return r}});var o=s(73318),n=s(32374),a=s(25108);function r(e){try{const t=e.toUpperCase(),s={flag:(0,o.HL)(t),name:""},a=n.ZP.state.settings.displayRegions;if(!a)return s;const r=a.of(t);return r&&(s.name=r),s}catch(e){return a.warn("Unsupported format of location in env.json",e),null}}},46621:function(e,t,s){"use strict";var o=s(60760),n=s(70655),a=s(53545),r=s(8755),i=s(32806),c=s(54643),d=s(85530),l=s(74614);let u=class extends((0,a.Wr)(i.Z,r.tA.NotificationMixin)){constructor(...e){super(...e),(0,o.Z)(this,"node",void 0),(0,o.Z)(this,"nodeIsConnected",void 0),(0,o.Z)(this,"setSelectNodeDialogVisibility",void 0)}async handleNodeError(e,t=!1){const s=e instanceof c.x?e.translationKey:"node.errors.connection",o=e instanceof c.x?e.translationPayload:{},n=this.t(s,o),a=this.node.address?"node.messages.connected":"node.messages.selectNode",r={address:this.node.address},i=this.t(a,r);this.node.address||(this.setSelectNodeDialogVisibility(!0),await this.$nextTick(),await(0,d.gw)(500)),this.nodeIsConnected&&t?this.showAppNotification(i,"success"):this.showAppAlert(n+i,this.t("errorText"))}handleNodeDisconnect(e){this.showAppNotification(this.t("node.warnings.disconnect",{address:e.address}),"warning")}handleNodeReconnect(e){this.showAppNotification(this.t("node.messages.connected",{address:e.address}),"success")}};(0,n.__decorate)([l.SB.settings.node],u.prototype,"node",void 0),(0,n.__decorate)([l.Yn.settings.nodeIsConnected],u.prototype,"nodeIsConnected",void 0),(0,n.__decorate)([l.QF.settings.setSelectNodeDialogVisibility],u.prototype,"setSelectNodeDialogVisibility",void 0),u=(0,n.__decorate)([a.wA],u),t.Z=u},32806:function(e,t,s){"use strict";var o=s(60760),n=s(70655),a=s(53545),r=s(8755),i=s(74614),c=s(16546);const d={en:e=>{const t=+e;if(!Number.isFinite(t)||0===t)return e;const s=t%10;return 1===s?`${t}st`:2===s?`${t}nd`:3===s?`${t}rd`:`${t}th`}},l={...r.it.TranslationConsts,AppName:c.l2.name,APR:"APR",TVL:"TVL",Kusama:"Kusama",Metamask:"MetaMask",Polkaswap:"Polkaswap",ROI:"ROI",bridgeNetwork:{EWC:"Energy Web Chain",private:"Volta Testnet",goerli:"Ethereum Goerli",kovan:"Ethereum Kovan",rinkeby:"Ethereum Rinkeby",ropsten:"Ethereum Ropsten",main:"Ethereum Mainnet"},evmNetwork:{ethereum:"Ethereum",energy:"Energy Web Chain"},mbps:"mbps",online:"Online",offline:"Offline"};let u=class extends((0,a.Wr)(r.tA.TranslationMixin)){constructor(...e){super(...e),(0,o.Z)(this,"language",void 0),(0,o.Z)(this,"TranslationConsts",l)}tOrdinal(e){return d[this.$i18n.locale]?.(e)??e}};(0,n.__decorate)([i.SB.settings.language],u.prototype,"language",void 0),u=(0,n.__decorate)([a.wA],u),t.Z=u},10909:function(e,t,s){"use strict";var o=s(60760),n=s(70655),a=s(53545),r=s(80710),i=s(85530),c=s(16546),d=s(63471),l=s(74614),u=s(32806),p=s(25108);const m="provider.messages.checkExtension",h=e=>{switch(e.code){case-32002:case 4001:return"provider.messages.extensionLogin";default:return m}};let g=class extends((0,a.Wr)(u.Z)){constructor(...e){super(...e),(0,o.Z)(this,"evmAddress",void 0),(0,o.Z)(this,"isSoraAccountConnected",void 0),(0,o.Z)(this,"isExternalAccountConnected",void 0),(0,o.Z)(this,"resetEvmAddress",void 0),(0,o.Z)(this,"resetWeb3Store",void 0),(0,o.Z)(this,"setEvmNetwork",void 0),(0,o.Z)(this,"switchExternalAccount",void 0),(0,o.Z)(this,"connectExternalAccount",void 0),(0,o.Z)(this,"setEvmNetworkType",void 0),(0,o.Z)(this,"getWalletAddress",i.Tu),(0,o.Z)(this,"formatAddress",i.Tg),(0,o.Z)(this,"isExternalWalletConnecting",!1)}get areNetworksConnected(){return this.isSoraAccountConnected&&this.isExternalAccountConnected}connectInternalWallet(){r.ZP.push({name:c.sn.Wallet})}async connectExternalWallet(){const e=d.zt.Metamask;this.isExternalWalletConnecting=!0;try{await this.connectExternalAccount(e)}catch(t){const s=this.t((e=>e===d.zt.Metamask?"provider.metamask":"provider.default")(e)),o=this.te(t.message)?t.message:((e,t)=>e===d.zt.Metamask?h(t):m)(e,t),n=this.t(o,{name:s}),a="provider.messages.installExtension"===o;this.$alert(n,{showCancelButton:a,cancelButtonText:this.t("provider.messages.reloadPage"),callback:e=>{"cancel"===e&&r.ZP.go(0)}})}finally{this.isExternalWalletConnecting=!1}}async changeExternalWallet(e){if(!this.isExternalWalletConnecting){this.isExternalWalletConnecting=!0;try{this.switchExternalAccount(e.address)}catch(e){p.error(e)}finally{this.isExternalWalletConnecting=!1}}}async checkConnectionToExternalAccount(e){await d.ZP.checkAccountIsConnected(this.evmAddress)?await e():await this.connectExternalWallet()}disconnectExternalAccount(){this.resetEvmAddress(),this.resetWeb3Store()}};(0,n.__decorate)([l.SB.web3.evmAddress],g.prototype,"evmAddress",void 0),(0,n.__decorate)([l.Yn.wallet.account.isLoggedIn],g.prototype,"isSoraAccountConnected",void 0),(0,n.__decorate)([l.Yn.web3.isExternalAccountConnected],g.prototype,"isExternalAccountConnected",void 0),(0,n.__decorate)([l.QF.web3.resetEvmAddress],g.prototype,"resetEvmAddress",void 0),(0,n.__decorate)([l.QF.web3.reset],g.prototype,"resetWeb3Store",void 0),(0,n.__decorate)([l.QF.web3.setEvmNetwork],g.prototype,"setEvmNetwork",void 0),(0,n.__decorate)([l.QF.web3.setEvmAddress],g.prototype,"switchExternalAccount",void 0),(0,n.__decorate)([l.aD.web3.connectExternalAccount],g.prototype,"connectExternalAccount",void 0),(0,n.__decorate)([l.aD.web3.setEvmNetworkType],g.prototype,"setEvmNetworkType",void 0),g=(0,n.__decorate)([a.wA],g),t.Z=g},16546:function(e,t,s){"use strict";s.d(t,{ju:function(){return B},z8:function(){return T},xZ:function(){return b},FP:function(){return f},jF:function(){return Z},k5:function(){return O},cj:function(){return _},XQ:function(){return P},SQ:function(){return u},lI:function(){return p},yX:function(){return m},V3:function(){return w},c$:function(){return v},Dm:function(){return y},Bz:function(){return M},u8:function(){return h},sn:function(){return S},id:function(){return I},Bq:function(){return D},Kk:function(){return A},by:function(){return x},CX:function(){return F},AQ:function(){return R},Ap:function(){return N},i7:function(){return l},m8:function(){return g},l2:function(){return d}});var o=s(46031),n=s.n(o),a=s(59739),r=s(52859),i=JSON.parse('{"i8":"1.0.1","cj":{"H":"https://github.com/soramitsu/adar.git"}}'),c=s(50592);const d={version:i.i8,name:"ADAR",email:"jihoon@tutanota.de",title:"ADAR — Pay employees anywhere, instantly"},l={sendAssets:!0,swapAssets:!0};var u;!function(e){e.EN="en"}(u||(u={}));const p=[{key:u.EN,value:"English",name:"English (UK)"}],m={about:{sora:"https://adar.com/",polkadot:"https://medium.com/polkadot-network/polkadot-js-extension-release-update-3b0d2d87edb8"},nodes:{tutorial:"https://medium.com/sora-xor/how-to-run-a-sora-testnet-node-a4d42a9de1af"},faq:"https://wiki.sora.org/polkaswap/polkaswap-faq",terms:"https://wiki.sora.org/polkaswap/terms",privacy:"https://wiki.sora.org/polkaswap/privacy",releaseNotes:i.cj.H.replace(".git","/releases/latest"),demeterFarmingPlatform:"https://farming.deotoken.io/"},h=()=>null,g="0",f="0.5";var y;!function(e){e.SMART="SMART",e.TBC="TBC",e.XYK="XYK"}(y||(y={}));const b=y.SMART,w={[y.SMART]:a.LiquiditySourceTypes.Default,[y.TBC]:a.LiquiditySourceTypes.MulticollateralBondingCurvePool,[y.XYK]:a.LiquiditySourceTypes.XYKPool},v=n()(w);var S,T,A;!function(e){e.About="About",e.Swap="Swap",e.Pool="Pool",e.Stats="Stats",e.Wallet="Wallet",e.PoolContainer="PoolContainer",e.AddLiquidity="AddLiquidity",e.RemoveLiquidity="RemoveLiquidity",e.Farming="Farming",e.Rewards="Rewards",e.ReferralProgram="ReferralProgram",e.RewardsTabs="RewardsTabs",e.ReferralBonding="ReferralBonding",e.ReferralUnbonding="ReferralUnbonding",e.BridgeContainer="BridgeContainer",e.Bridge="Bridge",e.BridgeTransaction="BridgeTransaction",e.BridgeTransactionsHistory="BridgeTransactionsHistory",e.Tokens="Tokens",e.MoonpayHistory="MoonpayHistory",e.StakingContainer="StakingContainer",e.ExploreContainer="Explore/Container",e.ExploreTokens="Explore/Tokens",e.ExploreDemeter="Explore/Demeter",e.ExploreFarming="Explore/Farming",e.ExploreStaking="Explore/Staking",e.ExplorePools="Explore/Pools",e.SoraCard="SoraCard"}(S||(S={})),function(e){e.AppLogoButton="App/Header/AppLogoButton",e.AppMobilePopup="App/MobilePopup",e.AppBrowserNotifsEnableDialog="App/BrowserNotification/BrowserNotifsEnableDialog",e.AppBrowserNotifsBlockedDialog="App/BrowserNotification/BrowserNotifsBlockedDialog",e.SelectLanguageDialog="App/Settings/Language/SelectLanguageDialog",e.AppFooter="App/Footer/AppFooter",e.AppDisclaimer="App/Header/AppDisclaimer",e.StatisticsDialog="App/Footer/StatisticsDialog",e.SelectNodeDialog="App/Footer/SelectNodeDialog",e.SelectNode="App/Footer/Node/SelectNode",e.NodeInfo="App/Footer/Node/NodeInfo",e.SoraCard="SoraCard",e.SoraCardIntroPage="SoraCard/SoraCardIntroPage",e.SoraCardKYC="SoraCard/SoraCardKYC",e.ConfirmationInfo="SoraCard/ConfirmationInfo",e.TermsAndConditions="SoraCard/steps/TermsAndConditions",e.ToSDialog="SoraCard/steps/ToSDialog",e.RoadMap="SoraCard/steps/RoadMap",e.Phone="SoraCard/steps/Phone",e.Email="SoraCard/steps/Email",e.KycView="SoraCard/steps/KycView",e.X1Dialog="X1/X1Dialog",e.PaywingsDialog="SoraCard/Paywings/PaywingsDialog",e.AddLiquidityConfirm="pages/AddLiquidity/Confirm",e.AddLiquidityTransactionDetails="pages/AddLiquidity/TransactionDetails",e.RemoveLiquidityConfirm="pages/RemoveLiquidity/Confirm",e.RemoveLiquidityTransactionDetails="pages/RemoveLiquidity/TransactionDetails",e.BridgeTransactionDetails="pages/Bridge/TransactionDetails",e.BridgeTransferNotification="pages/Bridge/TransferNotification",e.BridgeSelectAsset="pages/Bridge/SelectAsset",e.BridgeSelectNetwork="pages/Bridge/SelectNetwork",e.Moonpay="pages/Moonpay/Moonpay",e.MoonpayNotification="pages/Moonpay/Notification",e.MoonpayConfirmation="pages/Moonpay/Confirmation",e.MoonpayHistoryButton="pages/Moonpay/HistoryButton",e.SwapConfirm="pages/Swap/Confirm",e.SwapChart="pages/Swap/Chart",e.SwapStatusActionBadge="pages/Swap/StatusActionBadge",e.SwapTransactionDetails="pages/Swap/TransactionDetails",e.SwapSettings="pages/Swap/Settings/Settings",e.ReferralsConfirmBonding="pages/Referrals/ConfirmBonding",e.ReferralsConfirmInviteUser="pages/Referrals/ConfirmInviteUser",e.RewardsAmountHeader="pages/Rewards/AmountHeader",e.RewardsAmountTable="pages/Rewards/AmountTable",e.RewardsGradientBox="pages/Rewards/GradientBox",e.WalletAboutNetworkDialog="pages/Wallet/AboutNetworkDialog",e.GenericPageHeader="shared/GenericPageHeader",e.ExternalLink="shared/ExternalLink",e.TokensRow="shared/TokensRow",e.PairTokenLogo="shared/PairTokenLogo",e.PriceChange="shared/PriceChange",e.ValueStatusWrapper="shared/ValueStatusWrapper",e.TransactionDetails="shared/TransactionDetails",e.PoolInfo="shared/PoolInfo",e.Widget="shared/Widget",e.SortButton="shared/Button/SortButton",e.SvgIconButton="shared/Button/SvgIconButton/SvgIconButton",e.TokenInput="shared/Input/TokenInput",e.TokenSelectButton="shared/Input/TokenSelectButton",e.TokenSelectDropdown="shared/Input/TokenSelectDropdown",e.ConfirmBridgeTransactionDialog="shared/Dialog/ConfirmBridgeTransaction",e.NetworkFeeWarningDialog="shared/Dialog/NetworkFeeWarning",e.SelectAssetList="shared/SelectAsset/List",e.SelectToken="shared/SelectAsset/SelectToken",e.SettingsTabs="shared/Settings/Tabs",e.SlippageTolerance="shared/Settings/SlippageTolerance",e.StatsCard="shared/Stats/StatsCard",e.StatsFilter="shared/Stats/StatsFilter",e.ChartSkeleton="shared/Chart/ChartSkeleton"}(T||(T={})),function(e){e.Rewards="Rewards",e.ReferralProgram="ReferralProgram"}(A||(A={}));const k=[{icon:"arrows-arrow-bold-right-24",title:c.bO.RouteAssets},{icon:"arrows-swap-90-24",title:S.Swap,href:"/#/swap"}],C=[{icon:"finance-wallet-24",title:S.Wallet,href:"/#/wallet"}],E=[{icon:"file-file-text-24",title:c.bO.About}],R={AppStore:"https://apps.apple.com/us/app/sora-dae/id1457566711",GooglePlay:"https://play.google.com/store/apps/details?id=jp.co.soramitsu.sora"},N={Terms:"https://soracard.com/terms/en/polkaswap/",Privacy:"https://soracard.com/privacy/en/polkaswap/",getLinks:function(e="light"){return"dark"===e?{Terms:this.Terms.concat("?dark"),Privacy:this.Privacy.concat("?dark")}:{Terms:this.Terms,Privacy:this.Privacy}}},P={icon:"software-terminal-24",title:"faucet"},x=[...k,...C,...E],B=[S.BridgeTransaction,S.BridgeTransactionsHistory],I=[S.AddLiquidity,S.RemoveLiquidity],D=[S.Rewards,S.ReferralProgram,S.ReferralBonding,S.ReferralUnbonding],F=[r.p.Staking],_=[S.ExploreFarming,S.ExploreStaking,S.ExplorePools,S.ExploreTokens];var L;!function(e){e.SwapTokens="SwapTokens",e.PassiveEarning="PassiveEarning",e.AddLiquidity="AddLiquidity",e.PriceFeeds="PriceFeeds"}(L||(L={}));L.SwapTokens,L.PassiveEarning,L.AddLiquidity,L.PriceFeeds;var O;!function(e){e.ETH="ETH",e.VT="VT"}(O||(O={}));const M="0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff",Z="0x0000000000000000000000000000000000000000"},66926:function(e,t,s){"use strict";s.d(t,{BR:function(){return h},Kd:function(){return g},rj:function(){return f},Gm:function(){return y}});var o=s(52612),n=s.n(o),a=s(70538),r=s(17152),i=s(16546),c=s(6029),d=s(82007),l=s(18979),u=s(25108);a.default.use(r.Z);const p=new r.Z({locale:i.SQ.EN,fallbackLocale:i.SQ.EN,messages:{[i.SQ.EN]:{...d,...l}},silentTranslationWarn:!0}),m=[i.SQ.EN],h=e=>(e=>Object.values(i.SQ).includes(e))(e)?e:e.includes("-")?h(n()(e.split("-"))):i.SQ.EN;function g(){const e=c.d.get("language")||navigator.language||navigator.userLanguage;return h(e)}async function f(e){const t=h(e);let o=n()(t.split("-"));switch(o){case"zh":o="zh-cn";break;case"hy":o="hy-am"}try{await s(85994)(`./${o}.js`)}catch(e){u.warn(`[dayjs]: unsupported locale "${o}"`,e)}}async function y(e){const t=h(e);if(!m.includes(t)){const e=t.replace("-","_"),{default:o}=await s(32086)(`./${e}.json`),{default:n}=await s(13081)(`./${e}.json`);p.setLocaleMessage(t,{...o,...n}),m.push(t)}p.locale=t}t.ZP=p},24051:function(e,t,s){"use strict";var o=s(70538),n=s(32374),a=s(74614),r=s(60760),i=s(70655),c=s(53545),d=s(36930),l=s(8755),u=s(46621),p=s(75542),m=s(30273),h=s(37068),g=s(4587),f=s(16546),y=s(20439),b=s(80710),w=s(85530),v=s(66926),S=s(63545);let T=class extends((0,c.Wr)(l.tA.TransactionMixin,u.Z)){constructor(...e){super(...e),(0,r.Z)(this,"menuVisibility",!1),(0,r.Z)(this,"showConfirmInviteUser",!1),(0,r.Z)(this,"showMobilePopup",!1),(0,r.Z)(this,"showNotifsDarkPage",!1),(0,r.Z)(this,"browserNotifPopup",void 0),(0,r.Z)(this,"browserNotifPopupBlocked",void 0),(0,r.Z)(this,"assetsToNotifyQueue",void 0),(0,r.Z)(this,"storageReferrer",void 0),(0,r.Z)(this,"disclaimerVisibility",void 0),(0,r.Z)(this,"pageLoading",void 0),(0,r.Z)(this,"chartsEnabled",void 0),(0,r.Z)(this,"firstReadyTransaction",void 0),(0,r.Z)(this,"isSoraAccountConnected",void 0),(0,r.Z)(this,"libraryTheme",void 0),(0,r.Z)(this,"libraryDesignSystem",void 0),(0,r.Z)(this,"setSoraNetwork",void 0),(0,r.Z)(this,"setSubqueryEndpoint",void 0),(0,r.Z)(this,"setDefaultNodes",void 0),(0,r.Z)(this,"setNetworkChainGenesisHash",void 0),(0,r.Z)(this,"setFaucetUrl",void 0),(0,r.Z)(this,"setFeatureFlags",void 0),(0,r.Z)(this,"setBrowserNotifsPopup",void 0),(0,r.Z)(this,"setBrowserNotifsPopupBlocked",void 0),(0,r.Z)(this,"toggleDisclaimerDialogVisibility",void 0),(0,r.Z)(this,"resetBlockNumberSubscription",void 0),(0,r.Z)(this,"unsubscribeFromInvitedUsers",void 0),(0,r.Z)(this,"setSubNetworks",void 0),(0,r.Z)(this,"resetStorageReferrer",void 0),(0,r.Z)(this,"setApiKeys",void 0),(0,r.Z)(this,"resetNetworkSubscriptions",void 0),(0,r.Z)(this,"resetInternalSubscriptions",void 0),(0,r.Z)(this,"activateNetwokSubscriptions",void 0),(0,r.Z)(this,"connectToNode",void 0),(0,r.Z)(this,"setLanguage",void 0),(0,r.Z)(this,"setBlockNumber",void 0),(0,r.Z)(this,"setSmartContracts",void 0),(0,r.Z)(this,"getReferrer",void 0),(0,r.Z)(this,"notifyOnDeposit",void 0),(0,r.Z)(this,"recipients",void 0),(0,r.Z)(this,"setRecipientStatus",void 0),(0,r.Z)(this,"setRecipientCompleted",void 0),(0,r.Z)(this,"activeTransactions",void 0),(0,r.Z)(this,"setTxInfo",void 0),(0,r.Z)(this,"getBlockNumber",void 0)}handleNotifyOnDeposit(e){e.length&&this.notifyOnDeposit({asset:e[0],message:this.t("assetDeposit")})}handleNotifyAboutTransaction(e,t){this.handleChangeTransactionADAR(e,t),this.handleChangeTransaction(e,t)}updateConnectionSubsriptions(e){e?(this.isWalletLoaded&&this.activateNetwokSubscriptions(),this.setBlockNumber()):this.resetNetworkSubscriptions()}async confirmInviteUserIfConnected(e){e&&await this.confirmInvititation()}async confirmInviteUserIfHasStorage(e){this.isSoraAccountConnected&&e&&await this.confirmInvititation()}async confirmInvititation(){await this.getReferrer(),this.storageReferrer&&(this.storageReferrer===this.account.address?this.resetStorageReferrer():this.withApi((()=>{this.showConfirmInviteUser=!0})))}async created(){(0,w.lk)("element-icons"),(0,y.tQ)(b.ZP),await this.setLanguage((0,v.Kd)()),await this.withLoading((async()=>{const{data:e}=await y.ZP.get("/env.json");if(!e.NETWORK_TYPE)throw new Error("NETWORK_TYPE is not set");await this.setApiKeys(e?.API_KEYS),this.setFeatureFlags({charts:!1,moonpay:!1}),this.setSoraNetwork(e.NETWORK_TYPE),this.setSubqueryEndpoint(e.SUBQUERY_ENDPOINT),this.setDefaultNodes(e?.DEFAULT_NETWORKS),this.setSubNetworks(e.SUB_NETWORKS),await this.setSmartContracts(e.SUB_NETWORKS),e.FAUCET_URL&&this.setFaucetUrl(e.FAUCET_URL),e.CHAIN_GENESIS_HASH&&this.setNetworkChainGenesisHash(e.CHAIN_GENESIS_HASH),await this.runAppConnectionToNode(),(0,w.ue)(),this.showDisclaimer()}))}get isSwapPageWithCharts(){return this.$route.name===f.sn.Swap&&this.chartsEnabled}get isAboutPage(){return this.$route.name===f.sn.About}get isCurrentPageTooWide(){return this.isAboutPage||this.isSwapPageWithCharts||this.$route.name===f.sn.Tokens}get appClasses(){const e="app-main",t=[e];return this.$route.name&&t.push(`app-main--${this.$route.name.toLowerCase()}`),this.isSwapPageWithCharts&&t.push("app-main--has-charts"),t}get showBrowserNotifPopup(){return this.browserNotifPopup}set showBrowserNotifPopup(e){this.setBrowserNotifsPopup(e)}get showBrowserNotifBlockedPopup(){return this.browserNotifPopupBlocked}set showBrowserNotifBlockedPopup(e){this.setBrowserNotifsPopupBlocked(e)}goTo(e){(0,b.WF)(e),this.closeMenu()}goToSwap(){this.goTo(f.sn.Swap)}toggleMenu(){this.menuVisibility=!this.menuVisibility}closeMenu(){this.menuVisibility=!1}setDarkPage(e){this.showNotifsDarkPage=e}showDisclaimer(){l.d5.get("disclaimerApprove")||setTimeout((()=>this.toggleDisclaimerDialogVisibility()),3e3)}handleAppMenuClick(e){!!e.target.closest(".app-sidebar")||this.closeMenu()}openDownloadDialog(){this.showMobilePopup=!0}async beforeDestroy(){await this.resetInternalSubscriptions(),await this.resetNetworkSubscriptions(),this.resetBlockNumberSubscription(),this.unsubscribeFromInvitedUsers(),await d.connection.close()}async runAppConnectionToNode(){try{await this.connectToNode({onError:e=>this.handleNodeError(e,!0),onDisconnect:this.handleNodeDisconnect,onReconnect:this.handleNodeReconnect})}catch(e){}}async handleChangeTransactionADAR(e,t){if(!(e&&e.status&&[d.TransactionStatus.InBlock,d.TransactionStatus.Finalized,d.TransactionStatus.Error].includes(e.status)&&[d.Operation.SwapAndSend,d.Operation.Transfer].includes(e.type)))return;this.getOperationMessage(e,this.shouldBalanceBeHidden);const s=!t||t.id!==e.id,o=this.recipients.filter((t=>t.txId===e.id));if(!(o.length<1))if(e.status===d.TransactionStatus.Error)o.forEach((e=>{this.setRecipientStatus({id:e.id,status:S.p.FAILED})}));else if(e.status===d.TransactionStatus.InBlock){if(s){const{id:t,blockId:s,from:n}=e,a=await this.getBlockNumber(s);this.setTxInfo({txId:t,blockId:s,from:n,blockNumber:a}),o.forEach((e=>{this.setRecipientStatus({id:e.id,status:S.p.PASSED})}))}}else e.status===d.TransactionStatus.Finalized&&o.forEach((e=>{this.setRecipientStatus({id:e.id,status:S.p.SUCCESS}),this.setRecipientCompleted(e.id)}))}get invalidTransaction(){return this.activeTransactions.find((e=>[d.TransactionStatus.Invalid].includes(e.status)))}handleInvalidTransaction(e){if(!e||![d.Operation.SwapAndSend,d.Operation.Transfer].includes(e.type))return;const t=this.recipients.filter((t=>t.txId===e.id));t.forEach((e=>{this.setRecipientStatus({id:e.id,status:S.p.FAILED})})),t.length>0&&this.removeActiveTxs([e.id])}};(0,i.__decorate)([a.SB.settings.browserNotifPopupVisibility],T.prototype,"browserNotifPopup",void 0),(0,i.__decorate)([a.SB.settings.browserNotifPopupBlockedVisibility],T.prototype,"browserNotifPopupBlocked",void 0),(0,i.__decorate)([a.SB.wallet.account.assetsToNotifyQueue],T.prototype,"assetsToNotifyQueue",void 0),(0,i.__decorate)([a.SB.referrals.storageReferrer],T.prototype,"storageReferrer",void 0),(0,i.__decorate)([a.SB.settings.disclaimerVisibility],T.prototype,"disclaimerVisibility",void 0),(0,i.__decorate)([a.SB.router.loading],T.prototype,"pageLoading",void 0),(0,i.__decorate)([a.Yn.settings.chartsEnabled],T.prototype,"chartsEnabled",void 0),(0,i.__decorate)([a.Yn.wallet.transactions.firstReadyTx],T.prototype,"firstReadyTransaction",void 0),(0,i.__decorate)([a.Yn.wallet.account.isLoggedIn],T.prototype,"isSoraAccountConnected",void 0),(0,i.__decorate)([a.Yn.libraryTheme],T.prototype,"libraryTheme",void 0),(0,i.__decorate)([a.Yn.libraryDesignSystem],T.prototype,"libraryDesignSystem",void 0),(0,i.__decorate)([a.QF.wallet.settings.setSoraNetwork],T.prototype,"setSoraNetwork",void 0),(0,i.__decorate)([a.QF.wallet.settings.setSubqueryEndpoint],T.prototype,"setSubqueryEndpoint",void 0),(0,i.__decorate)([a.QF.settings.setDefaultNodes],T.prototype,"setDefaultNodes",void 0),(0,i.__decorate)([a.QF.settings.setNetworkChainGenesisHash],T.prototype,"setNetworkChainGenesisHash",void 0),(0,i.__decorate)([a.QF.settings.setFaucetUrl],T.prototype,"setFaucetUrl",void 0),(0,i.__decorate)([a.QF.settings.setFeatureFlags],T.prototype,"setFeatureFlags",void 0),(0,i.__decorate)([a.QF.settings.setBrowserNotifsPopupEnabled],T.prototype,"setBrowserNotifsPopup",void 0),(0,i.__decorate)([a.QF.settings.setBrowserNotifsPopupBlocked],T.prototype,"setBrowserNotifsPopupBlocked",void 0),(0,i.__decorate)([a.QF.settings.toggleDisclaimerDialogVisibility],T.prototype,"toggleDisclaimerDialogVisibility",void 0),(0,i.__decorate)([a.QF.settings.resetBlockNumberSubscription],T.prototype,"resetBlockNumberSubscription",void 0),(0,i.__decorate)([a.QF.referrals.unsubscribeFromInvitedUsers],T.prototype,"unsubscribeFromInvitedUsers",void 0),(0,i.__decorate)([a.QF.web3.setSubNetworks],T.prototype,"setSubNetworks",void 0),(0,i.__decorate)([a.QF.referrals.resetStorageReferrer],T.prototype,"resetStorageReferrer",void 0),(0,i.__decorate)([a.aD.wallet.settings.setApiKeys],T.prototype,"setApiKeys",void 0),(0,i.__decorate)([a.aD.wallet.subscriptions.resetNetworkSubscriptions],T.prototype,"resetNetworkSubscriptions",void 0),(0,i.__decorate)([a.aD.wallet.subscriptions.resetInternalSubscriptions],T.prototype,"resetInternalSubscriptions",void 0),(0,i.__decorate)([a.aD.wallet.subscriptions.activateNetwokSubscriptions],T.prototype,"activateNetwokSubscriptions",void 0),(0,i.__decorate)([a.aD.settings.connectToNode],T.prototype,"connectToNode",void 0),(0,i.__decorate)([a.aD.settings.setLanguage],T.prototype,"setLanguage",void 0),(0,i.__decorate)([a.aD.settings.setBlockNumber],T.prototype,"setBlockNumber",void 0),(0,i.__decorate)([a.aD.web3.setSmartContracts],T.prototype,"setSmartContracts",void 0),(0,i.__decorate)([a.aD.referrals.getReferrer],T.prototype,"getReferrer",void 0),(0,i.__decorate)([a.aD.wallet.account.notifyOnDeposit],T.prototype,"notifyOnDeposit",void 0),(0,i.__decorate)([(0,c.RL)("assetsToNotifyQueue")],T.prototype,"handleNotifyOnDeposit",null),(0,i.__decorate)([(0,c.RL)("firstReadyTransaction",{deep:!0})],T.prototype,"handleNotifyAboutTransaction",null),(0,i.__decorate)([(0,c.RL)("nodeIsConnected")],T.prototype,"updateConnectionSubsriptions",null),(0,i.__decorate)([(0,c.RL)("isSoraAccountConnected")],T.prototype,"confirmInviteUserIfConnected",null),(0,i.__decorate)([(0,c.RL)("storageReferrer",{immediate:!0})],T.prototype,"confirmInviteUserIfHasStorage",null),(0,i.__decorate)([a.Yn.routeAssets.recipients],T.prototype,"recipients",void 0),(0,i.__decorate)([a.QF.routeAssets.setRecipientStatus],T.prototype,"setRecipientStatus",void 0),(0,i.__decorate)([a.QF.routeAssets.setRecipientCompleted],T.prototype,"setRecipientCompleted",void 0),(0,i.__decorate)([a.Yn.wallet.transactions.activeTxs],T.prototype,"activeTransactions",void 0),(0,i.__decorate)([a.QF.routeAssets.setTxInfo],T.prototype,"setTxInfo",void 0),(0,i.__decorate)([a.aD.routeAssets.getBlockNumber],T.prototype,"getBlockNumber",void 0),(0,i.__decorate)([(0,c.RL)("invalidTransaction",{deep:!0,immediate:!0})],T.prototype,"handleInvalidTransaction",null),T=(0,i.__decorate)([(0,c.wA)({components:{SoraLogo:p.default,AppHeader:m.default,AppFooter:h.default,AppMenu:g.default,AppMobilePopup:(0,b.kF)(f.z8.AppMobilePopup),AppLogoButton:(0,b.kF)(f.z8.AppLogoButton),AppDisclaimer:(0,b.kF)(f.z8.AppDisclaimer),AppBrowserNotifsEnableDialog:(0,b.kF)(f.z8.AppBrowserNotifsEnableDialog),AppBrowserNotifsBlockedDialog:(0,b.kF)(f.z8.AppBrowserNotifsBlockedDialog),ReferralsConfirmInviteUser:(0,b.kF)(f.z8.ReferralsConfirmInviteUser),BridgeTransferNotification:(0,b.kF)(f.z8.BridgeTransferNotification),NotificationEnablingPage:l.wx.NotificationEnablingPage,ConfirmDialog:l.wx.ConfirmDialog}})],T);var A=T,k=(0,s(1001).Z)(A,(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("s-design-system-provider",{staticClass:"app",attrs:{value:e.libraryDesignSystem,id:"app"}},[s("app-header",{attrs:{loading:e.loading},on:{"toggle-menu":e.toggleMenu}}),s("div",{class:e.appClasses},[s("app-menu",{attrs:{visible:e.menuVisibility,"on-select":e.goTo,"is-about-page-opened":e.isAboutPage},on:{"open-download-dialog":e.openDownloadDialog},nativeOn:{click:function(t){return e.handleAppMenuClick.apply(null,arguments)}}},[s("app-logo-button",{staticClass:"app-logo--menu",attrs:{slot:"head",theme:e.libraryTheme},on:{click:e.goToSwap},slot:"head"})],1),s("div",{staticClass:"app-body",class:{"app-body__about":e.isAboutPage}},[s("s-scrollbar",{directives:[{name:"loading",rawName:"v-loading",value:e.pageLoading,expression:"pageLoading"}],staticClass:"app-body-scrollbar"},[s("div",{staticClass:"app-content"},[s("router-view",{attrs:{"parent-loading":e.loading||!e.nodeIsConnected}})],1),s("footer",{staticClass:"app-footer"},[s("div",{staticClass:"sora-logo"},[s("span",{staticClass:"sora-logo__title"},[e._v(e._s(e.t("poweredBy")))]),s("a",{staticClass:"sora-logo__image",attrs:{href:"https://sora.org",title:"Sora",target:"_blank",rel:"nofollow noopener"}},[s("sora-logo",{attrs:{theme:e.libraryTheme}})],1)])])])],1)],1),s("app-footer"),s("referrals-confirm-invite-user",{attrs:{visible:e.showConfirmInviteUser},on:{"update:visible":function(t){e.showConfirmInviteUser=t}}}),s("bridge-transfer-notification"),s("app-mobile-popup",{attrs:{visible:e.showMobilePopup},on:{"update:visible":function(t){e.showMobilePopup=t}}}),s("app-browser-notifs-enable-dialog",{attrs:{visible:e.showBrowserNotifPopup},on:{"update:visible":function(t){e.showBrowserNotifPopup=t},"set-dark-page":e.setDarkPage}}),s("app-browser-notifs-blocked-dialog",{attrs:{visible:e.showBrowserNotifBlockedPopup},on:{"update:visible":function(t){e.showBrowserNotifBlockedPopup=t}}}),e.showNotifsDarkPage?s("notification-enabling-page",[e._v(" "+e._s(e.t("browserNotificationDialog.pointer"))+" ")]):e._e(),s("confirm-dialog")],1)}),[],!1,null,"736ec190",null),C=k.exports;o.default.use(l.ZP,{store:n.ZP});var E=s(29134),R=s(59832),N=s(35633),P=s(86769),x=s.n(P),B=s(16473),I=s.n(B),D=s(30272),F=s.n(D),_=s(41789),L=s(17561),O=s(92485),M=s(74728),Z=s(57341),H=s(38422),q=s(18379),V=s(28791),j=s(97233),U=s(21165),W=s(16901),K=s(52534),G=s(15251),X=s(97700),Y=s(47210),$=s(37178),z=s(85341),Q=s(33986),J=s(30389),ee=s(1832),te=s(7680),se=s(61843),oe=s(72235),ne=s(47886),ae=s(71597),re=s(91084),ie=s(4331),ce=s(80864),de=s(23615),le=s(72974),ue=s(90601),pe=s(49478),me=s(33887),he=s(92629),ge=s(12271),fe=s.n(ge),ye=s(24650),be=s.n(ye),we=s(2881),ve=s.n(we),Se=s(13235),Te=s.n(Se);o.default.use(N.ZP),o.default.use(_.Z,{store:n.ZP.original}),o.default.use(fe()),o.default.use(be()),o.default.use(ve()),o.default.use(Te()),o.default.use(L.Z),o.default.use(O.Z),o.default.use(M.Z),o.default.use(Z.Z),o.default.use(H.Z),o.default.use(q.Z),o.default.use(V.Z),o.default.use(j.Z),o.default.use(U.Z),o.default.use(W.Z),o.default.use(K.Z),o.default.use(G.Z),o.default.use(X.Z),o.default.use(Y.Z),o.default.use($.Z),o.default.use(z.Z),o.default.use(Q.Z),o.default.use(J.Z),o.default.use(ee.Z),o.default.use(te.Z),o.default.use(se.Z),o.default.use(oe.Z),o.default.use(ne.Z),o.default.use(ae.Z),o.default.use(re.Z),o.default.use(ie.ZP),o.default.use(ce.Z),o.default.use(de.Z),o.default.use(le.Z),o.default.use(ue.Z),o.default.use(pe.Z),o.default.use(me.ZP),o.default.use(he.Z),o.default.prototype.$prompt=x().prompt,o.default.prototype.$alert=x().alert,o.default.prototype.$message=I(),o.default.prototype.$notify=({message:e,type:t})=>{F()({message:e,title:"",duration:4500,type:t,customClass:"sora s-flex"});const s=Array.from(document.getElementsByClassName("el-notification")),o=s[s.length-1];document.getElementsByClassName("app-main").item(0).appendChild(o);const n=document.createElement("div");n.className="loader",o.appendChild(n)},(0,R.Dc)(),(0,R.rz)(E.Z.NEUMORPHIC);var Ae=s(69762),ke=s(68023),Ce=s(70012),Ee=s(54377),Re=s(49693),Ne=s(32586),Pe=s(31281),xe=s(17813),Be=s(34584),Ie=s(93450);(0,ke.D)([Ce.N,Ee.N,Re.N,Ne.N,Pe.N,xe.N,Be.N,Ie.N]),o.default.component("v-chart",Ae.ZP);var De=s(40876);/windows/.test(navigator.userAgent.toLowerCase())&&!/firefox/.test(navigator.userAgent.toLowerCase())&&(0,De.Y)(),o.default.config.productionTip=!1,o.default.config.devtools=!1,new o.default({i18n:v.ZP,router:b.ZP,store:n.ZP.original,render:e=>e(C)}).$mount("#app")},50592:function(e,t,s){"use strict";var o,n;s.d(t,{bO:function(){return o},EC:function(){return n},Uc:function(){return a},W2:function(){return i},_g:function(){return c}}),function(e){e.Send="Send",e.KYC="KYC",e.RouteAssets="RouteAssets",e.About="About"}(o||(o={})),function(e){e.RouteAssetsAuthorize="RouteAssets/Stages/Authorize",e.RouteAssetsDone="RouteAssets/Stages/Done",e.RouteAssetsProcessTemplate="RouteAssets/Stages/ProcessTemplate",e.RouteAssetsReviewDetails="RouteAssets/Stages/ReviewDetails",e.RouteAssetsRouting="RouteAssets/Stages/Routing",e.RouteAssetsTransactionOverview="RouteAssets/Stages/TransactionOverview",e.RouteAssetsUploadTemplate="RouteAssets/Stages/UploadTemplate",e.RouteAssetsNavigation="App/Header/RouteAssetsNavigation",e.RouteAssetsFixIssuesDialog="RouteAssets/FixIssuesDialog",e.RouteAssetsSelectInputAssetDialog="RouteAssets/SelectInputAssetDialog",e.RouteAssetsSwapDialog="RouteAssets/SwapDialog",e.RouteAssetsFailedTransactionsDialog="RouteAssets/FailedTransactionsDialog",e.RouteAssetsConfirmFinishRoutingDialog="RouteAssets/ConfirmFinishingRoutingDialog",e.RouteAssetsSelectReportFormatDialog="RouteAssets/SelectReportFormatDialog"}(n||(n={}));const a=[r("Upload template","uploadTemplate"),r("Process template","processTemplate"),r("Transaction Overview","transactionOverview"),r("Review details","reviewDetails"),r("Routing","routing"),r("Done","done")];function r(e,t){return{title:e,component:t}}const i="0.05",c="0.0025"},67748:function(e,t,s){"use strict";s.d(t,{y:function(){return o},s:function(){return n}});const o=e=>()=>s(65493)(`./${e}.vue`),n=e=>()=>s(3181)(`./${e}.vue`)},52859:function(e,t,s){"use strict";var o,n;s.d(t,{p:function(){return o},J:function(){return n}}),function(e){e.Pool="Pool",e.Staking="Staking",e.DataContainer="DataContainer"}(o||(o={})),function(e){e.DialogTitle="DialogTitle",e.StatusBadge="StatusBadge",e.PoolCard="PoolCard",e.StakeDialog="StakeDialog",e.ClaimDialog="ClaimDialog",e.CalculatorDialog="CalculatorDialog",e.CalculatorButton="CalculatorButton"}(n||(n={}))},80710:function(e,t,s){"use strict";s.d(t,{kF:function(){return h},JE:function(){return g},WF:function(){return f}});var o=s(70538),n=s(78345),a=s(53545),r=s(8755),i=s(36930),c=s(32374),d=s(85530),l=s(16546),u=s(50592),p=s(67748);o.default.use(n.ZP),a.wA.registerHooks(["beforeRouteEnter","beforeRouteUpdate","beforeRouteLeave"]);const m=r.it.RouteNames.Wallet,h=e=>()=>s(3457)(`./${e}.vue`),g=e=>()=>s(62513)(`./${e}.vue`);async function f(e){const t=b.currentRoute.name;if(e===l.sn.Wallet&&(c.ZP.getters.wallet.account.isLoggedIn?c.ZP.state.wallet.router.currentRoute!==m&&c.ZP.commit.wallet.router.navigate({name:m}):c.ZP.commit.wallet.router.navigate({name:r.it.RouteNames.WalletConnection})),t!==e)try{c.ZP.commit.router.setLoading(!0),await b.push({name:e})}finally{c.ZP.commit.router.setLoading(!1)}}const y=[{path:"/",redirect:"/swap"},{path:"/swap/:first?/:second?",name:l.sn.Swap,component:g(l.sn.Swap)},{path:"/about",name:u.bO.About,component:(0,p.s)(u.bO.About)},{path:"/wallet",name:l.sn.Wallet,component:g(l.sn.Wallet)},{path:"/route-assets",name:u.bO.RouteAssets,component:(0,p.s)(u.bO.RouteAssets)},{path:"*",redirect:"/swap"}],b=new n.ZP({mode:"hash",routes:y});b.beforeEach(((e,t,s)=>{const o=t.name,n=e.name,a=(t,n=!0)=>{c.ZP.commit.router.setRoute({prev:o,current:t}),s(n?{name:t}:void 0),(0,d.ue)(e)},r=c.ZP.getters.wallet.account.isLoggedIn;if(o!==l.sn.BridgeTransaction&&n===l.sn.BridgeTransactionsHistory&&c.ZP.commit.bridge.setHistoryPage(1),e.matched.some((e=>e.meta.isInvitationRoute))&&(i.api.validateAddress(e.params.referrerAddress)&&c.ZP.commit.referrals.setStorageReferrer(e.params.referrerAddress),r))a(l.sn.ReferralProgram);else{if(e.matched.some((e=>e.meta.requiresAuth))){if(l.ju.includes(n)&&r&&!c.ZP.getters.web3.isExternalAccountConnected)return void a(l.sn.Bridge);if(!r)return void a(l.sn.Wallet)}a(n,!1)}})),t.ZP=b},93034:function(e,t,s){"use strict";var o;s.d(t,{G:function(){return o}}),function(e){e.First="firstTokenValue",e.Second="secondTokenValue"}(o||(o={}))},4762:function(e,t,s){"use strict";s.d(t,{Y:function(){return a},j:function(){return r}});var o=s(8755);const{WalletModules:n}=o.cZ;var a;!function(e){e.Router="router",e.Web3="web3",e.Assets="assets",e.Settings="settings",e.Swap="swap",e.Charts="charts",e.Referrals="referrals",e.Pool="pool",e.Moonpay="moonpay",e.Bridge="bridge",e.AddLiquidity="addLiquidity",e.RemoveLiquidity="removeLiquidity",e.Rewards="rewards",e.DemeterFarming="demeterFarming",e.RouteAssets="routeAssets",e.SoraCard="soraCard"}(a||(a={}));const r=[...Object.values(a),...n]},74614:function(e,t,s){"use strict";s.d(t,{SB:function(){return d},Yn:function(){return l},QF:function(){return u},aD:function(){return p}});var o=s(8755),n=s(32374),a=s(4762);const{VuexOperation:r,createDecoratorsObject:i,attachDecorator:c}=o.cZ,d={},l={},u={},p={};i(n.ZP.state,d,a.j,r.State),i(n.ZP.getters,l,a.j,r.Getter),i(n.ZP.commit,u,a.j,r.Mutation),i(n.ZP.dispatch,p,a.j,r.Action),l.libraryDesignSystem=c(r.Getter,"libraryDesignSystem"),l.libraryTheme=c(r.Getter,"libraryTheme")},32374:function(e,t,s){"use strict";s.d(t,{ZP:function(){return yo},K9:function(){return go},nl:function(){return fo}});var o=s(70538),n=s(20629),a=s(63782),r=s(8755);const i=(0,a.e9)()({setRoute(e,t){e.prev=t.prev,e.current=t.current},setLoading(e,t){e.loading=t}});var c=i;var d={current:null,prev:null,loading:!1};var l=(0,a.b7)({namespaced:!0,state:d,mutations:c}),u=s(4762),p=s(36930),m=s(63471),h=s(28335),g=s(16546);function f(){return{evmAddress:m.ZP.getEvmUserAddress(),evmBalance:g.m8,networkType:null,subNetworks:[],evmNetwork:p.BridgeNetworks.ETH_NETWORK_ID,contractAddress:{[p.BridgeNetworks.ETH_NETWORK_ID]:{XOR:"",VAL:"",OTHER:""},[p.BridgeNetworks.ENERGY_NETWORK_ID]:{OTHER:""}},smartContracts:{[p.BridgeNetworks.ETH_NETWORK_ID]:{XOR:"",VAL:"",OTHER:""},[p.BridgeNetworks.ENERGY_NETWORK_ID]:{OTHER:""}}}}var y=f();const b=(0,a.e9)()({reset(e){const t=["contractAddress","subNetworks","smartContracts"],s=f();Object.keys(s).filter((e=>!t.includes(e))).forEach((t=>{e[t]=s[t]}))},setEvmAddress(e,t){e.evmAddress=t,m.ZP.storeEvmUserAddress(t)},resetEvmAddress(e){e.evmAddress="",m.ZP.removeEvmUserAddress()},setNetworkType(e,t){e.networkType=t},setSubNetworks(e,t){e.subNetworks=t},setEvmNetwork(e,t){e.evmNetwork=t,h.Zc.externalNetwork=t},setEvmBalance(e,t){e.evmBalance=t},setEthSmartContracts(e,{contracts:t,address:s}){o.default.set(e.smartContracts,p.BridgeNetworks.ETH_NETWORK_ID,{XOR:t.XOR,VAL:t.VAL,OTHER:t.OTHER}),o.default.set(e.contractAddress,p.BridgeNetworks.ETH_NETWORK_ID,{XOR:s.XOR,VAL:s.VAL,OTHER:s.OTHER})},setEnergySmartContracts(e,{contracts:t,address:s}){o.default.set(e.smartContracts,p.BridgeNetworks.ENERGY_NETWORK_ID,{OTHER:t.OTHER}),o.default.set(e.contractAddress,p.BridgeNetworks.ENERGY_NETWORK_ID,{OTHER:s.OTHER})}});var w=b;const v=(0,a.h)()({contractAbi:(...e)=>t=>{const{state:s}=x(e);return s.smartContracts[s.evmNetwork][t]},contractAddress:(...e)=>t=>{const{state:s}=x(e);return s.contractAddress[s.evmNetwork][t]},isExternalAccountConnected(...e){const{state:t}=x(e);return!!t.evmAddress&&"undefined"!==t.evmAddress},defaultNetworkType(...e){const{state:t}=x(e);return t.subNetworks?.find((e=>e.id===t.evmNetwork))?.defaultType},isValidNetworkType(...e){const{state:t,getters:s}=x(e);return!!t.networkType&&t.networkType===s.defaultNetworkType}});var S=v,T=s(6044),A=s(77616),k=s(85530),C=s(25108);async function E(e,t){const{commit:s}=B(e),o=await m.ZP.readSmartContract(m.LB.Ethereum,`${m.CH.Internal}/MASTER.json`),n=await m.ZP.readSmartContract(m.LB.Ethereum,`${m.CH.Other}/${m.Gg.Bridge}.json`),a=await m.ZP.readSmartContract(m.LB.Ethereum,`${m.CH.Other}/${m.Gg.ERC20}.json`);s.setEthSmartContracts({address:{XOR:t.CONTRACTS.XOR.MASTER,VAL:t.CONTRACTS.VAL.MASTER,OTHER:t.CONTRACTS.OTHER.MASTER},contracts:{XOR:o,VAL:o,OTHER:{BRIDGE:n,ERC20:a}}})}const R=(0,a.y2)({async connectExternalAccount(e,t){const{commit:s}=B(e),o=await m.ZP.onConnect({provider:t});s.setEvmAddress(o)},async setEvmNetworkType(e,t){const{commit:s}=B(e);let o="";o=t?m.O[t]:await m.ZP.fetchEvmNetworkType(),s.setNetworkType(o)},async setSmartContracts(e,t){for(const s of t)switch(s.id){case p.BridgeNetworks.ETH_NETWORK_ID:await E(e,s);case p.BridgeNetworks.ENERGY_NETWORK_ID:}},async getEvmBalance(e){const{commit:t,state:s}=B(e);let o=g.m8;try{const e=s.evmAddress;if(e){const t=await m.ZP.getEthersInstance(),s=await t.getBalance(e),n=A.dF(s.toString());o=new p.FPNumber(n).toCodecString()}}catch(e){C.error(e)}return t.setEvmBalance(o),o},async getBalanceByEvmAddress(e,t){const{dispatch:s,state:o}=B(e);let n=g.m8,a=18;const r=o.evmAddress;if(!r)return{value:n,decimals:a};try{const e=await m.ZP.getEthersInstance();if((0,k.uc)(t))n=await s.getEvmBalance();else{const s=new T.CH(t,m.dL.balance,e.getSigner()),o=[r],i=await s.balanceOf(...o);a=await s.decimals(),n=p.FPNumber.fromCodecValue(i._hex,+a).toCodecString()}}catch(e){}return{value:n,decimals:a}},async getEvmTokenAddressByAssetId(e,t){const{getters:s}=B(e);try{if(!t)return"";const e=await m.ZP.getEthersInstance(),o=s.contractAbi(m.HR.Other)[m.Gg.Bridge].abi,n=s.contractAddress(m.HR.Other);if(!n||!o)return C.error("Contract address/abi is not found"),"";const a=new T.CH(n,o,e.getSigner()),r=[t];return await a._sidechainTokens(...r)}catch(e){return C.error(e),""}},async getAllowanceByEvmAddress(e,t){const{getters:s,state:o}=B(e);try{const e=s.contractAddress(m.HR.Other),n=await m.ZP.getEthersInstance(),a=new T.CH(t,m.dL.allowance,n.getSigner()),r=[o.evmAddress,e],i=await a.allowance(...r);return p.FPNumber.fromCodecValue(i._hex).toString()}catch(e){throw C.error(e),e}}});var N=R;const P=(0,a.b7)({namespaced:!0,state:y,mutations:w,getters:S,actions:N}),x=e=>fo(e,u.Y.Web3,P),B=e=>go(e,u.Y.Web3,P);var I=P;const D=(0,a.e9)()({setRegisteredAssetsFetching(e,t){e.registeredAssetsFetching=t},setRegisteredAssets(e,t){e.registeredAssets=t,e.registeredAssetsFetching=!1},resetRegisteredAssets(e){e.registeredAssets=[],e.registeredAssetsFetching=!1}});var F=D;var _={registeredAssets:[],registeredAssetsFetching:!1},L=s(82753);const O=(0,a.h)()({whitelistAssets(...e){const{rootState:t,rootGetters:s}=j(e);return t.wallet.account.assets.filter((e=>r.hi.assets.isWhitelist(e,s.wallet.account.whitelist)))},assetsDataTable(...e){const{rootState:t}=j(e);return t.wallet.account.assets.reduce(((e,t)=>({...e,[t.address]:t})),{})},assetDataByAddress(...e){const{getters:t,state:s,rootGetters:o}=j(e);return e=>{if(!e)return;const n=t.assetsDataTable[e];if(!n)return null;const{externalAddress:a,externalBalance:r,externalDecimals:i}=(0,k.U8)(n,s.registeredAssets)||{},{balance:c}=o.wallet.account.accountAssetsAddressTable[n.address]||{};return{...n,balance:c,externalAddress:a,externalBalance:r,externalDecimals:i}}},xor(...e){const{getters:t}=j(e);return t.assetDataByAddress(L.XOR.address)}});var M=O,Z=s(25108);const H=(0,a.y2)({async updateRegisteredAssets(e,t){const{state:s,commit:o,rootDispatch:n}=U(e);if(!s.registeredAssetsFetching){t&&o.resetRegisteredAssets(),o.setRegisteredAssetsFetching(!0);try{const e=await h.Zc.getRegisteredAssets(),t=await Promise.all(e.map((async e=>{const t={...e,externalBalance:g.m8};try{if(t.externalAddress||(t.externalAddress=await n.web3.getEvmTokenAddressByAssetId(e.address)),t.externalAddress){const{value:e,decimals:s}=await n.web3.getBalanceByEvmAddress(t.externalAddress);t.externalBalance=e,t.externalDecimals||(t.externalDecimals=s)}}catch(e){Z.error(e)}return t})));o.setRegisteredAssets(t)}catch(e){Z.error(e),o.resetRegisteredAssets()}}}});var q=H;const V=(0,a.b7)({namespaced:!0,state:_,mutations:F,getters:M,actions:q}),j=e=>fo(e,u.Y.Assets,V),U=e=>go(e,u.Y.Assets,V);var W=V,K=s(6029),G=s(25108);const X=(0,a.e9)()({setNodeRequest(e,{node:t,isReconnection:s=!1}){e.nodeAddressConnecting=t?.address??"",e.nodeConnectionAllowance=s},setNodeSuccess(e,t={}){e.node={...t},e.nodeAddressConnecting="",e.nodeConnectionAllowance=!0,K.d.set("node",JSON.stringify(t))},setNodeFailure(e){e.nodeAddressConnecting="",e.nodeConnectionAllowance=!0},setDefaultNodes(e,t){if(e.defaultNodes=[...t],!e.node)return;const s=e.defaultNodes.find((t=>t.address===e.node.address));s&&(e.node={...s},K.d.set("node",JSON.stringify(e.node)))},setCustomNodes(e,t){e.customNodes=[...t],K.d.set("customNodes",JSON.stringify(t))},resetNode(e){e.node={},K.d.remove("node")},setNetworkChainGenesisHash(e,t){e.chainGenesisHash=t||""},setSlippageTolerance(e,t){e.slippageTolerance=t,K.Z.set("slippageTolerance",t)},setMarketAlgorithm(e,t=g.Dm.SMART){e.marketAlgorithm=t,K.Z.set("marketAlgorithm",t)},setChartsEnabled(e,t){e.сhartsEnabled=t,K.Z.set("сhartsEnabled",t)},setTransactionDeadline(e,t){e.transactionDeadline=t,K.Z.set("transactionDeadline",t)},setFaucetUrl(e,t){e.faucetUrl=t},setSelectNodeDialogVisibility(e,t){e.selectNodeDialogVisibility=t},setSelectLanguageDialogVisibility(e,t){e.selectLanguageDialogVisibility=t},toggleDisclaimerDialogVisibility(e){e.disclaimerVisibility=!e.disclaimerVisibility},setBrowserNotifsPopupEnabled(e,t){e.browserNotifPopupVisibility=t},setBrowserNotifsPopupBlocked(e,t){e.browserNotifPopupBlockedVisibility=t},setBrowserNotifsAgreement(e,t){e.browserNotifsPermission=t},setLanguage(e,t){e.language=t,K.d.set("language",t)},setUserDisclaimerApprove(e){e.userDisclaimerApprove=!0,K.d.set("disclaimerApprove",!0)},updateDisplayRegions(e){try{e.displayRegions=new Intl.DisplayNames([e.language],{type:"region"})}catch(t){G.warn("Intl.DisplayNames issue",t),e.displayRegions=null}},setFeatureFlags(e,t={}){e.featureFlags={...e.featureFlags,...t}},setBlockNumber(e,t){e.blockNumber=t||0},setBlockNumberUpdates(e,t){e.blockNumberUpdates=t},resetBlockNumberSubscription(e){e.blockNumberUpdates?.unsubscribe(),e.blockNumberUpdates=null},setInternetConnectionEnabled(e){e.internetConnection=!0},setInternetConnectionDisabled(e){e.internetConnection=!1},setInternetConnectionSpeed(e){e.internetConnectionSpeed=navigator?.connection?.downlink??0}});var Y=X,$=s(66926);var z=function(){const e=K.d.get("node"),t=K.d.get("customNodes"),s=K.d.get("disclaimerApprove"),o=(K.Z.get("сhartsEnabled"),"Notification"in window);return{featureFlags:{},slippageTolerance:K.Z.get("slippageTolerance")||g.FP,marketAlgorithm:K.Z.get("marketAlgorithm")||g.xZ,"сhartsEnabled":!1,userDisclaimerApprove:!!s&&JSON.parse(s),transactionDeadline:Number(K.Z.get("transactionDeadline"))||20,isBrowserNotificationApiAvailable:o,browserNotifsPermission:o?Notification.permission:"default",node:e?JSON.parse(e):{},language:(0,$.Kd)(),displayRegions:void 0,defaultNodes:[],customNodes:t?JSON.parse(t):[],nodeAddressConnecting:"",nodeConnectionAllowance:!0,chainGenesisHash:"",faucetUrl:"",selectNodeDialogVisibility:!1,selectLanguageDialogVisibility:!1,disclaimerVisibility:!1,browserNotifPopupVisibility:!1,browserNotifPopupBlockedVisibility:!1,blockNumber:0,blockNumberUpdates:void 0,internetConnection:void 0,internetConnectionSpeed:void 0}}();const Q=(0,a.h)()({defaultNodesHashTable(...e){const{state:t}=ce(e);return t.defaultNodes.reduce(((e,t)=>({...e,[t.address]:t})),{})},customNodes(...e){const{state:t,getters:s}=ce(e);return t.customNodes.filter((e=>!(e.address in s.defaultNodesHashTable)))},nodeList(...e){const{state:t,getters:s}=ce(e);return[...t.defaultNodes,...s.customNodes]},nodeIsConnecting(...e){const{state:t}=ce(e);return!!t.nodeAddressConnecting},nodeIsConnected(...e){const{state:t}=ce(e);return!!t.node?.address&&!t.nodeAddressConnecting&&r.ZI.opened},liquiditySource(...e){const{state:t}=ce(e);return g.V3[t.marketAlgorithm]},moonpayApiKey(...e){const{rootState:t}=ce(e);return t.wallet.settings.apiKeys.moonpay},moonpayEnabled(...e){const{state:t,getters:s}=ce(e);return!!s.moonpayApiKey&&!!t.featureFlags.moonpay},chartsFlagEnabled(...e){const{state:t}=ce(e);return!!t.featureFlags.charts},chartsEnabled(...e){const{state:t}=ce(e);return!!t.featureFlags.charts&&t.сhartsEnabled},soraCardEnabled(...e){const{state:t}=ce(e);return t.featureFlags.soraCard},notificationActivated(...e){const{state:t}=ce(e);return"granted"===t.browserNotifsPermission},isInternetConnectionEnabled(...e){const{state:t}=ce(e);return t.internetConnection??navigator.onLine},internetConnectionSpeedMb(...e){const{state:t}=ce(e);return t.internetConnectionSpeed??navigator?.connection?.downlink??0},isInternetConnectionStable(...e){const{getters:t}=ce(e);return t.internetConnectionSpeedMb>=1||!t.internetConnectionSpeedMb}});var J=Q,ee=s(54643),te=s(20439);async function se(e,t,s){const o=(e,t)=>{throw new Error(`${e}: argument ${t} is required`)};if(!e)return o(se.name,"url");if(!t)return o(se.name,"method");const{data:n}=await te.ZP.post(e,{id:1,jsonrpc:"2.0",method:t,params:s});return n.result}var oe=s(25108);async function ne(){const{endpoint:e,opened:t}=r.ZI;e&&t&&(await r.ZI.close(),oe.info("Disconnected from node",e))}const ae=(0,a.y2)({async connectToNode(e,t={}){const{dispatch:s,commit:o,state:n,rootState:a,getters:i}=de(e);if(!n.nodeConnectionAllowance)return;const{node:c,onError:d,currentNodeIndex:l=0,...u}=t,p=i.nodeList[l],m=c||(n.node.address?n.node:p);try{if(await s.setNode({node:m,onError:d,...u}),!a.wallet.settings.isWalletLoaded)try{await(0,r.y2)({permissions:g.i7})}catch(e){throw oe.error(e),e}}catch(e){if(m&&m.address===n.node.address&&o.resetNode(),n.node.address||l!==n.defaultNodes.length-1){const e=m?.address===p.address?l+1:0;await s.connectToNode({onError:d,currentNodeIndex:e,...u})}throw d&&"function"==typeof d&&d(e),e}},async setNode(e,t={}){const{dispatch:s,commit:o,state:n,getters:a}=de(e),{node:i,connectionOptions:c={},onError:d,onDisconnect:l,onReconnect:u}=t,p=i?.address??"",m=p in a.defaultNodesHashTable,h={once:!0,timeout:m?void 0:6e4,...c},g=!h.once,f=()=>p!==n.nodeAddressConnecting,y=async()=>{await ne(),"function"==typeof l&&l(i),s.connectToNode({node:i,onError:d,onDisconnect:l,onReconnect:u,connectionOptions:{...h,once:!1}})},b=()=>{r.ZI.addEventListener("disconnected",y)};try{if(!p)throw new Error("Node address is not set");if(o.setNodeRequest({node:i,isReconnection:g}),oe.info("Connection request to node",p),await ne(),await r.ZI.open(p,{...h,eventListeners:[["ready",b]]}),f())return;oe.info("Connected to node",r.ZI.endpoint);const t=r.ZI.api.genesisHash.toHex();if(m)o.setNetworkChainGenesisHash(t);else if(n.chainGenesisHash||await async function(e){const{commit:t,state:s}=de(e);try{const e=await Promise.any(s.defaultNodes.map((e=>{return se((t=e.address,/^wss:\/\/ws\.(?:.+\.)*sora2\.soramitsu\.co\.jp\/?$/.test(t)?t.replace(/^wss:\/\/ws/,"https://rpc"):t.replace(/^ws(s)?:/,"http$1:")),"chain_getBlockHash",[0]);var t})));t.setNetworkChainGenesisHash(e)}catch(e){oe.error(e)}}(e),t!==n.chainGenesisHash)throw await ne(),new ee.x({key:"node.errors.network",payload:{address:p}},`Chain genesis hash doesn't match: "${t}" received, should be "${n.chainGenesisHash}"`);g&&"function"==typeof u&&u(i),o.setNodeSuccess(i)}catch(e){oe.error(e);const t=e instanceof ee.x?e:new ee.x({key:"node.errors.connection",payload:{address:p}});throw f()||o.setNodeFailure(),t}},async addCustomNode(e,t){const{commit:s,getters:o}=de(e),n=[...o.customNodes,t];s.setCustomNodes(n)},async updateCustomNode(e,{address:t,node:s}){const{commit:o,getters:n}=de(e),a=n.customNodes.filter((e=>e.address!==t));o.setCustomNodes([...a,s])},async removeCustomNode(e,t){const{commit:s,getters:o}=de(e),n=o.customNodes.filter((e=>e.address!==t.address));s.setCustomNodes(n)},async setLanguage(e,t){const{commit:s}=de(e),o=(0,$.BR)(t);await(0,$.rj)(o),await(0,$.Gm)(o),(0,k.ue)(),(0,k.RA)(o),s.setLanguage(o),s.updateDisplayRegions()},async setBlockNumber(e){const{commit:t}=de(e);t.resetBlockNumberSubscription();const s=r.hi.system.getBlockNumberObservable().subscribe((e=>{t.setBlockNumber(e)}));t.setBlockNumberUpdates(s)}});var re=ae;const ie=(0,a.b7)({namespaced:!0,state:z,mutations:Y,getters:J,actions:re}),ce=e=>fo(e,u.Y.Settings,ie),de=e=>go(e,u.Y.Settings,ie);var le=ie,ue=s(76262),pe=s.n(ue),me=s(31840);function he(){return{tokenFromAddress:"",tokenToAddress:"",tokenFromBalance:null,tokenToBalance:null,fromValue:"",toValue:"",amountWithoutImpact:"",liquidityProviderFee:"",isExchangeB:!1,enabledAssets:{lockedSources:[]},rewards:[],route:[],selectedDexId:me.DexId.XOR,dexQuoteData:{}}}var ge=he();const fe=(0,a.e9)()({reset(e){const t=pe()(["tokenFromAddress","tokenToAddress"],he());Object.keys(t).forEach((s=>{e[s]=t[s]}))},setTokenFromAddress(e,t){e.tokenFromAddress=t},resetTokenFromAddress(e){e.tokenFromAddress=""},setTokenFromBalance(e,t){e.tokenFromBalance=t},setTokenToAddress(e,t){e.tokenToAddress=t},resetTokenToAddress(e){e.tokenToAddress=""},setTokenToBalance(e,t){e.tokenToBalance=t},setFromValue(e,t){e.fromValue=t},setToValue(e,t){e.toValue=t},setAmountWithoutImpact(e,t){e.amountWithoutImpact=t},setExchangeB(e,t){e.isExchangeB=t},setLiquidityProviderFee(e,t){e.liquidityProviderFee=t},setPrimaryMarketsEnabledAssets(e,t){e.enabledAssets=Object.freeze({...t})},setRewards(e,t){e.rewards=Object.freeze([...t])},setRoute(e,t){e.route=Object.freeze([...t])},setSubscriptionPayload(e,{dexId:t,payload:s,paths:o,liquiditySources:n}){e.dexQuoteData={...e.dexQuoteData,[t]:Object.freeze({payload:s,paths:o,pairLiquiditySources:n})}},selectDexId(e,t){e.selectedDexId=t}});var ye=fe,be=s(77606),we=s.n(be),ve=s(59739);const Se=(0,a.h)()({tokenFrom(...e){const{state:t,rootGetters:s}=Ie(e),o=s.assets.assetDataByAddress(t.tokenFromAddress),n=t.tokenFromBalance;return n?{...o,balance:n}:o},tokenTo(...e){const{state:t,rootGetters:s}=Ie(e),o=s.assets.assetDataByAddress(t.tokenToAddress),n=t.tokenToBalance;return n?{...o,balance:n}:o},marketAlgorithms(...e){const{state:t}=Ie(e),s=[...new Set(Object.values(t.dexQuoteData).map((e=>e.pairLiquiditySources)).flat())].filter((e=>e!==ve.LiquiditySourceTypes.XYKPool));return Object.keys(g.V3).filter((e=>{const t=g.V3[e];return e===g.Dm.SMART||s.includes(t)}))},marketAlgorithmsAvailable(...e){const{getters:t}=Ie(e);return t.marketAlgorithms.length>1},swapLiquiditySource(...e){const{getters:t,rootGetters:s}=Ie(e);if(t.marketAlgorithmsAvailable&&s.settings.liquiditySource)return s.settings.liquiditySource},isAvailable(...e){const{state:t}=Ie(e),s=t.dexQuoteData?.[t.selectedDexId]?.paths;return!we()(s)&&Object.values(s).every((e=>!we()(e)))},swapMarketAlgorithm(...e){const{getters:t}=Ie(e);return g.c$[t.swapLiquiditySource??""]},price(...e){const{state:t,getters:s}=Ie(e),{tokenFrom:o,tokenTo:n}=s;return o&&n?r.hi.divideAssets(o,n,t.fromValue,t.toValue,!1):g.m8},priceReversed(...e){const{state:t,getters:s}=Ie(e),{tokenFrom:o,tokenTo:n}=s;return o&&n?r.hi.divideAssets(o,n,t.fromValue,t.toValue,!0):g.m8},priceImpact(...e){const{state:t,getters:s}=Ie(e),{fromValue:o,toValue:n,amountWithoutImpact:a,isExchangeB:i}=t,{tokenFrom:c,tokenTo:d}=s;return c&&d?r.hi.swap.getPriceImpact(c,d,o,n,a,i):g.m8},minMaxReceived(...e){const{state:t,getters:s,rootState:o}=Ie(e),{fromValue:n,toValue:a,isExchangeB:i}=t,{tokenFrom:c,tokenTo:d}=s;return c&&d?r.hi.swap.getMinMaxValue(c,d,n,a,i,o.settings.slippageTolerance):g.m8}});var Te,Ae=Se,ke=s(99278),Ce=s(60760);class Ee{constructor(){(0,Ce.Z)(this,"subscriptions",void 0),this.subscriptions=new Map}add(e,{updateBalance:t,token:s}){const o=r.hi.assets.getAssetBalanceObservable(s).subscribe((e=>t(e)));this.subscriptions.set(e,{updateBalance:t,subscription:o})}remove(e){const t=this.subscriptions.get(e);t?.subscription?.unsubscribe(),t?.updateBalance?.(null),this.subscriptions.delete(e)}}!function(e){e.From="from",e.To="to"}(Te||(Te={}));const Re=new Ee;function Ne(e,t){const{getters:s,commit:o,rootGetters:n}=De(e),{tokenFrom:a,tokenTo:r}=s,{setTokenFromBalance:i,setTokenToBalance:c}=o,d=t===Te.From?a:r,l=t===Te.From?i:c,u=e=>l(e);Re.remove(t),n.wallet.account.isLoggedIn&&d?.address&&!(d.address in n.wallet.account.accountAssetsAddressTable)&&Re.add(t,{updateBalance:u,token:d})}const Pe=(0,a.y2)({async setTokenFromAddress(e,t){const{commit:s}=De(e);t?s.setTokenFromAddress(t):s.resetTokenFromAddress(),Ne(e,Te.From)},async setTokenToAddress(e,t){const{commit:s}=De(e);t?s.setTokenToAddress(t):s.resetTokenToAddress(),Ne(e,Te.To)},async switchTokens(e){const{commit:t,state:s}=De(e),{tokenFromAddress:o,tokenToAddress:n,fromValue:a,toValue:r,isExchangeB:i}=s;if(o&&n){const[s,c]=i?[r,""]:["",a];t.setTokenFromAddress(n),t.setTokenToAddress(o),t.setFromValue(s),t.setToValue(c),t.setExchangeB(!i),Ne(e,Te.From),Ne(e,Te.To)}},setSubscriptionPayload(e,{dexId:t,payload:s}){const{state:o,getters:n,commit:a}=De(e),i=n.tokenFrom?.address,c=n.tokenTo?.address;if(!(i&&c&&s))return;const d=t===me.DexId.XOR?o.enabledAssets:{tbc:[],xst:[],lockedSources:[]},l=r.hi.dex.getBaseAssetId(t),u=r.hi.dex.getSyntheticBaseAssetId(t),{paths:p,liquiditySources:m}=(0,ke.getPathsAndPairLiquiditySources)(i,c,s,d,l,u);a.setSubscriptionPayload({dexId:t,liquiditySources:m,paths:p,payload:s})},async updateSubscriptions(e){Ne(e,Te.From),Ne(e,Te.To)},async resetSubscriptions(e){Re.remove(Te.From),Re.remove(Te.To)},async reset(e){const{commit:t,dispatch:s}=De(e);s.resetSubscriptions(),t.reset()}});var xe=Pe;const Be=(0,a.b7)({namespaced:!0,state:ge,mutations:ye,getters:Ae,actions:xe}),Ie=e=>fo(e,u.Y.Swap,Be),De=e=>go(e,u.Y.Swap,Be);var Fe=Be;function _e(){return{referrer:"",referrerSubscription:null,invitedUsers:[],invitedUsersSubscription:null,amount:"",storageReferrer:K.Z.get("storageReferral")||"",isReferrerApproved:!1}}var Le=_e();const Oe=(0,a.e9)()({resetReferrer(e){e.referrer=""},setReferrer(e,t){e.referrer=t},setReferrerSubscription(e,t){e.referrerSubscription=t},resetReferrerSubscription(e){e.referrerSubscription?.unsubscribe(),e.referrerSubscription=null},approveReferrer(e,t){e.isReferrerApproved=t},resetInvitedUsers(e){e.invitedUsers=[]},setInvitedUsers(e,t){e.invitedUsers=t},resetInvitedUsersSubscription(e){e.invitedUsersSubscription?.unsubscribe(),e.invitedUsersSubscription=null},setInvitedUsersSubscription(e,t){e.invitedUsersSubscription=t},resetAmount(e){e.amount=""},setAmount(e,t){e.amount=t},setStorageReferrer(e,t){e.storageReferrer=t,K.Z.set("storageReferral",t)},resetStorageReferrer(e){e.storageReferrer="",K.Z.set("storageReferral","")},reset(e){const t=pe()(["invitedUsers","invitedUsersSubscription"],_e());Object.keys(t).forEach((s=>{e[s]=t[s]}))},unsubscribeFromInvitedUsers(e){e.invitedUsersSubscription?.unsubscribe(),e.invitedUsersSubscription=null,e.invitedUsers=[]}});var Me=Oe;var Ze=(0,a.y2)({async getReferrer(e){const{commit:t}=qe(e);t.resetReferrer();try{const e=await r.hi.referralSystem.getAccountReferrer();t.setReferrer(e)}catch(e){t.resetReferrer()}},async subscribeOnReferrer(e){const{commit:t,rootGetters:s}=qe(e);if(t.resetReferrerSubscription(),!s.wallet.account.isLoggedIn)return;const o=r.hi.referralSystem.subscribeOnReferrer(s.wallet.account.account.address).subscribe((e=>{e&&t.setReferrer(e)}));t.setReferrerSubscription(o)},async subscribeOnInvitedUsers(e){const{commit:t,rootGetters:s}=qe(e);if(t.resetInvitedUsersSubscription(),!s.wallet.account.isLoggedIn)return;const o=r.hi.referralSystem.subscribeOnAccountInvitedUsers().subscribe((e=>{t.setInvitedUsers(e)}));t.setInvitedUsersSubscription(o)}});const He=(0,a.b7)({namespaced:!0,state:Le,mutations:Me,actions:Ze}),qe=e=>go(e,u.Y.Referrals,He);var Ve=He;const je=(0,a.e9)()({setAccountLiquidityList(e,t){e.accountLiquidityList=t},resetAccountLiquidityList(e){e.accountLiquidityList?.unsubscribe(),e.accountLiquidityList=null},setAccountLiquidityUpdates(e,t){e.accountLiquidityUpdates=t},resetAccountLiquidityUpdates(e){e.accountLiquidityUpdates?.unsubscribe(),e.accountLiquidityUpdates=null},setAccountLiquidity(e,t){e.accountLiquidity=Object.freeze([...t])},resetAccountLiquidity(e){e.accountLiquidity=[]},setAccountLockedLiquidity(e,t){e.accountLockedLiquidity=Object.freeze([...t])},setAccountLockedLiquidityUpdates(e,t){e.accountLockedLiquiditySubscription=t},resetAccountLockedLiquidityUpdates(e){e.accountLockedLiquiditySubscription?.unsubscribe(),e.accountLockedLiquiditySubscription=null},setPoolApyObject(e,t){e.poolApyObject=Object.freeze({...t})},resetPoolApyObject(e){e.poolApyObject={}},updatePoolApyObject(e,t){e.poolApyObject=Object.freeze({...e.poolApyObject,...t})},setPoolApySubscription(e,t){e.poolApySubscription=t},resetPoolApySubscription(e){e.poolApySubscription?.(),e.poolApySubscription=null}});var Ue=je;var We={accountLiquidity:[],accountLiquidityList:null,accountLiquidityUpdates:null,poolApyObject:{},poolApySubscription:null,accountLockedLiquidity:[],accountLockedLiquiditySubscription:null};var Ke=(0,a.y2)({async subscribeOnAccountLiquidityList(e){const{commit:t,rootGetters:s}=ze(e);t.resetAccountLiquidityList(),s.wallet.account.isLoggedIn&&await(0,k.BV)((async()=>{const e=r.hi.poolXyk.getUserPoolsSubscription();t.setAccountLiquidityList(e),await r.hi.poolXyk.accountLiquidityLoaded.toPromise()}))},async subscribeOnAccountLiquidityUpdates(e){const{commit:t,rootGetters:s}=ze(e);t.resetAccountLiquidityUpdates(),s.wallet.account.isLoggedIn&&await(0,k.BV)((()=>{const e=r.hi.poolXyk.updated.subscribe((()=>{t.setAccountLiquidity(r.hi.poolXyk.accountLiquidity)}));t.setAccountLiquidityUpdates(e)}))},async subscribeOnAccountLockedLiquidity(e){const{commit:t,rootGetters:s}=ze(e);t.resetAccountLockedLiquidityUpdates(),s.wallet.account.isLoggedIn&&await(0,k.BV)((()=>{const e=r.hi.ceresLiquidityLocker.getLockerDataObservable().subscribe((e=>{t.setAccountLockedLiquidity(e)}));t.setAccountLockedLiquidityUpdates(e)}))},async unsubscribeAccountLiquidityListAndUpdates(e){const{commit:t}=ze(e);t.resetAccountLiquidityList(),t.resetAccountLiquidityUpdates(),t.resetAccountLockedLiquidityUpdates(),t.resetAccountLiquidity(),t.resetPoolApySubscription(),t.resetPoolApyObject(),r.hi.poolXyk.unsubscribeFromAllUpdates()},async getPoolApyObject(e){const{commit:t}=ze(e),s=await r.m5.pool.getPoolsApyObject();s&&t.setPoolApyObject(s)},async subscribeOnPoolsApy(e){const{commit:t,dispatch:s}=ze(e);t.resetPoolApySubscription(),await s.getPoolApyObject();const o=r.m5.pool.createPoolsApySubscription((e=>{t.updatePoolApyObject(e)}),(()=>{t.resetPoolApyObject()}));t.setPoolApySubscription(o)}}),Ge=s(57950);const Xe=(0,a.h)()({getLockedAmount(...e){const{state:t}=Qe(e);return(e,s)=>t.accountLockedLiquidity.reduce(((t,o)=>o.assetA===e&&o.assetB===s?t.add(o.poolTokens):t),Ge.FPNumber.ZERO)}});var Ye=Xe;const $e=(0,a.b7)({namespaced:!0,state:We,mutations:Ue,actions:Ke,getters:Ye}),ze=e=>go(e,u.Y.Pool,$e),Qe=e=>fo(e,u.Y.Pool,$e);var Je=$e;const et=(0,a.e9)()({setPollingTimestamp(e,t=Date.now()){e.pollingTimestamp=t},setDialogVisibility(e,t){e.dialogVisibility=t},setNotificationVisibility(e,t){e.notificationVisibility=t},setNotificationKey(e,t){e.notificationKey=t},setConfirmationVisibility(e,t){e.confirmationVisibility=t},setBridgeTxData(e,{data:t=null,startBridgeButtonVisibility:s=!1}={}){e.bridgeTransactionData=t,e.startBridgeButtonVisibility=s},updateTxsRequest(e,t){t&&(e.transactions=[]),e.transactionsFetching=!0},updateTxsSuccess(e,t){e.transactions=[...t],e.transactionsFetching=!1},updateTxsFailure(e){e.transactions=[],e.transactionsFetching=!1},setCurrencies(e,t){e.currencies=[...t]},resetCurrencies(e){e.currencies=[]}});var tt=et;var st={api:new(s(82344).u),dialogVisibility:!1,notificationVisibility:!1,notificationKey:"",confirmationVisibility:!1,pollingTimestamp:0,transactions:[],transactionsFetching:!1,bridgeTransactionData:null,startBridgeButtonVisibility:!1,currencies:[]},ot=s(16011),nt=s(25108);const at=(0,a.y2)({async getCurrencies(e){const{state:t,commit:s}=ct(e);s.resetCurrencies();try{const e=await t.api.getCurrencies();s.setCurrencies(e)}catch(e){nt.error(e),s.resetCurrencies()}},async getTransactions(e,t=!1){const{state:s,commit:o,rootGetters:n,rootState:a}=ct(e);if(n.wallet.account.isLoggedIn&&!s.transactionsFetching&&s.api.publicKey){o.updateTxsRequest(t);try{const e=await s.api.getTransactionsByExtId(a.wallet.account.address);nt.info("Moonpay: user transactions request"),o.updateTxsSuccess(e)}catch(e){nt.error(e),o.updateTxsFailure()}}},async createTransactionsPolling(e){const{dispatch:t,commit:s}=ct(e);s.setPollingTimestamp();let o=setInterval((()=>t.getTransactions()),15e3);return()=>{null!==o&&(clearInterval(o),s.setPollingTimestamp(0),o=null)}},async getTransactionTranserData(e,t){try{const e=1,s=0,o=await m.ZP.getEthersInstance();nt.info(`Moonpay: found latest moonpay transaction.\nChecking ethereum transaction by hash:\n${t}`),await o.waitForTransaction(t,e,s);const n=await o.getTransaction(t);if(nt.info("Moonpay: ethereum transaction data received:",n),"0x"===n.data){const{to:e="",value:t}=n,s=new p.FPNumber(t).toString();return{amount:s,address:g.jF,to:e}}{const e=["function transfer(address to, uint256 value)"],t=new ot.vU(e).parseTransaction({data:n.data}),s=n.to??"",{value:o,to:a=""}=t.args;return{amount:new p.FPNumber(o).toString(),address:s,to:a}}}catch(e){return nt.error(e),null}},async findRegisteredAssetByExternalAddress(e,t){const{rootState:s,rootDispatch:o}=ct(e);if(!t)return;await o.assets.updateRegisteredAssets();const n=s.assets.registeredAssets,a=t.toLowerCase();return n.find((e=>e.externalAddress.toLowerCase()===a))}});var rt=at;const it=(0,a.b7)({namespaced:!0,state:st,mutations:tt,actions:rt}),ct=e=>go(e,u.Y.Moonpay,it);var dt=it;const lt=(0,a.e9)()({setSoraToEvm(e,t){e.isSoraToEvm=t},setAssetAddress(e,t){e.assetAddress=t||""},setAssetBalance(e,t=null){e.assetBalance=t},setAmount(e,t){e.amount=t||""},getEvmNetworkFeeRequest(e){e.evmNetworkFeeFetching=!0},getEvmNetworkFeeSuccess(e,t){e.evmNetworkFee=t,e.evmNetworkFeeFetching=!1},getEvmNetworkFeeFailure(e){e.evmNetworkFee=g.m8,e.evmNetworkFeeFetching=!1},setHistory(e){e.history=[...h.Zc.historyList]},setHistoryPage(e,t){e.historyPage=t||1},setHistoryId(e,t){e.historyId=t||""},addTxIdInProgress(e,t){e.inProgressIds={...e.inProgressIds,[t]:!0}},removeTxIdFromProgress(e,t){e.inProgressIds=pe()([t],e.inProgressIds)},addTxIdInApprove(e,t){e.waitingForApprove={...e.waitingForApprove,[t]:!0}},removeTxIdFromApprove(e,t){e.waitingForApprove=pe()([t],e.waitingForApprove)},setEvmBlockNumber(e,t){e.evmBlockNumber=t},setHistoryLoading(e,t){e.historyLoading=t},setNotificationData(e,t=null){e.notificationData=t}});var ut=lt;var pt={isSoraToEvm:!0,assetAddress:"",assetBalance:null,amount:"",evmNetworkFee:g.m8,evmNetworkFeeFetching:!1,evmBlockNumber:0,history:[],historyPage:1,historyId:"",historyLoading:!1,waitingForApprove:{},inProgressIds:{},notificationData:null};const mt=(0,a.h)()({asset(...e){const{state:t,rootGetters:s}=At(e),o=s.assets.assetDataByAddress(t.assetAddress),n=t.assetBalance;return n?{...o,balance:n}:o},isRegisteredAsset(...e){const{getters:t}=At(e);return!!t.asset?.externalAddress},soraNetworkFee(...e){const{state:t,rootState:s}=At(e);return t.isSoraToEvm?s.wallet.settings.networkFees[p.Operation.EthBridgeOutgoing]:g.m8},historyItem(...e){const{state:t}=At(e);return t.historyId?t.history.find((e=>e.id===t.historyId))??null:null},isTxEvmAccount(...e){const{getters:t,rootState:s}=At(e),o=t.historyItem?.to,n=s.web3.evmAddress;return!o||m.ZP.addressesAreEqual(o,n)}});var ht=mt,gt=s(4835),ft=s.n(gt),yt=s(25108);const bt=new Ee;function wt(e){const{rootGetters:t}=kt(e);if(!t.web3.isValidNetworkType)throw new Error("Change evm network in Metamask")}const vt=(0,a.y2)({async updateBalanceSubscription(e){const{getters:t,commit:s,rootGetters:o}=kt(e),n=e=>s.setAssetBalance(e);bt.remove("asset"),o.wallet.account.isLoggedIn&&t.asset?.address&&!(t.asset.address in o.wallet.account.accountAssetsAddressTable)&&bt.add("asset",{updateBalance:n,token:t.asset})},async resetBalanceSubscription(e){bt.remove("asset")},async setAssetAddress(e,t){const{commit:s,dispatch:o}=kt(e);s.setAssetAddress(t),o.updateBalanceSubscription()},async resetBridgeForm(e){const{commit:t,dispatch:s}=kt(e);s.resetBalanceSubscription(),t.setAmount(),t.setSoraToEvm(!0)},async updateEvmBlockNumber(e,t){const{commit:s}=kt(e),o=t??await(await m.ZP.getEthersInstance()).getBlockNumber();s.setEvmBlockNumber(o)},async getBridgeHistoryInstance(e){const{rootState:t}=kt(e),s=t.wallet.settings.apiKeys?.etherscan,o=new h.He(s);return await o.init(),o},async updateHistory(e,t=!1){const{commit:s,state:o,dispatch:n,rootState:a,rootGetters:r}=kt(e);if(o.historyLoading)return;s.setHistoryLoading(!0);const i=await n.getBridgeHistoryInstance(),c=a.wallet.account.address,d=r.assets.assetsDataTable,l=a.wallet.settings.networkFees,u=Object.values(m.HR).map((e=>r.web3.contractAddress(e))),p=ft()(u),h=()=>s.setHistory();t&&await i.clearHistory(h),await i.updateAccountHistory(c,d,l,p,h),s.setHistoryLoading(!1)},async getEvmNetworkFee(e){const{getters:t,commit:s,state:o}=kt(e);if(t.asset?.address){s.getEvmNetworkFeeRequest();try{const e=await m.ZP.fetchEvmNetworkFee(t.asset.address,o.isSoraToEvm);s.getEvmNetworkFeeSuccess(e)}catch(e){s.getEvmNetworkFeeFailure()}}},async generateHistoryItem(e,t){const{commit:s}=kt(e),o=function(e,{date:t=Date.now(),step:s=1,payload:o={},...n}={}){const{getters:a,state:r,rootState:i}=kt(e);return{type:n.type??(r.isSoraToEvm?p.Operation.EthBridgeOutgoing:p.Operation.EthBridgeIncoming),amount:n.amount??r.amount,symbol:n.symbol??a.asset?.symbol,assetAddress:n.assetAddress??a.asset?.address,startTime:t,endTime:t,status:"",transactionStep:s,hash:"",ethereumHash:"",transactionState:h.PO.INITIAL,soraNetworkFee:n.soraNetworkFee??a.soraNetworkFee,ethereumNetworkFee:n.ethereumNetworkFee??r.evmNetworkFee,externalNetwork:i.web3.evmNetwork,to:n.to??i.web3.evmAddress,payload:o}}(e,t),n=h.Zc.generateHistoryItem(o);if(!n)throw new Error('[Bridge]: "generateHistoryItem" failed');return s.setHistory(),n},async signEvmTransactionSoraToEvm(e,t){const{getters:s,rootState:o,rootGetters:n}=kt(e),a=h.Zc.getHistory(t);if(!a?.hash)throw new Error("TX ID cannot be empty!");if(!a.amount)throw new Error("TX amount cannot be empty!");if(!a.assetAddress)throw new Error("TX assetAddress cannot be empty!");const r=n.assets.assetDataByAddress(a.assetAddress);if(!r?.externalAddress)throw new Error(`Asset not registered: ${a.assetAddress}`);wt(e);const i=await(0,h.z2)(a);if(!s.isTxEvmAccount)throw new Error(`Change account in MetaMask to ${i.to}`);const c=await m.ZP.getEthersInstance(),d=r.symbol,l=o.web3.evmAddress,u=[m.HR.XOR,m.HR.VAL].includes(d)&&o.web3.evmNetwork===p.BridgeNetworks.ETH_NETWORK_ID,g=u?d:m.HR.Other,f={[m.HR.XOR]:n.web3.contractAbi(m.HR.XOR),[m.HR.VAL]:n.web3.contractAbi(m.HR.VAL),[m.HR.Other]:n.web3.contractAbi(m.HR.Other)}[g],y=f[m.Gg.Bridge]?.abi??f.abi,b=n.web3.contractAddress(g),w=new T.CH(b,y,c.getSigner()),v=u?"mintTokensByPeers":i.currencyType===p.BridgeCurrencyType.TokenAddress?"receiveByEthereumAssetAddress":"receiveBySidechainAssetId",S=[u||i.currencyType===p.BridgeCurrencyType.TokenAddress?r.externalAddress:r.address,new p.FPNumber(a.amount,r.externalDecimals).toCodecString(),l];S.push(...u?[a.hash,i.v,i.r,i.s,i.from]:[i.from,a.hash,i.v,i.r,i.s]),wt(e);const A=await w[v](...S),k=A.gasPrice?m.ZP.calcEvmFee(A.gasPrice.toNumber(),A.gasLimit.toNumber()):void 0;return{hash:A.hash,fee:k}},async signEvmTransactionEvmToSora(e,t){const{commit:s,rootState:o,rootGetters:n,rootDispatch:a}=kt(e),r=h.Zc.getHistory(t);if(!r?.id)throw new Error("TX cannot be empty!");if(!r.amount)throw new Error("TX amount cannot be empty!");if(!r.assetAddress)throw new Error("TX assetAddress cannot be empty!");const i=n.assets.assetDataByAddress(r.assetAddress);if(!i?.externalAddress)throw new Error(`Asset not registered: ${r.assetAddress}`);wt(e);try{const t=n.web3.contractAbi(m.HR.Other),c=o.web3.evmAddress;if(!await m.ZP.checkAccountIsConnected(c))throw new Error("Connect account in Metamask");const d=await m.ZP.getEthersInstance(),l=n.web3.contractAddress(m.HR.Other),u=(0,k.uc)(i.externalAddress);if(!u){const o=await a.web3.getAllowanceByEvmAddress(i.externalAddress);if(p.FPNumber.lte(new p.FPNumber(o),new p.FPNumber(r.amount))){s.addTxIdInApprove(r.id);const o=new T.CH(i.externalAddress,t[m.Gg.ERC20].abi,d.getSigner()),n=[l,g.Bz];wt(e);const a=await o.approve(...n);s.removeTxIdFromApprove(r.id),await(0,h.pM)(a.hash)}}const f=o.wallet.account.address,y=await m.ZP.accountAddressToHex(f),b=new T.CH(l,t[m.Gg.Bridge].abi,d.getSigner()),w=u?void 0:await(async()=>{const e=new T.CH(i.externalAddress,m.dL.balance,d.getSigner());return+await e.decimals()})(),v=new p.FPNumber(r.amount,w).toCodecString(),S=u?"sendEthToSidechain":"sendERC20ToSidechain",A=u?[y]:[y,v,i.externalAddress],C=u?{value:v}:{};wt(e);const E=await b[S](...A,C),R=E.gasPrice?m.ZP.calcEvmFee(E.gasPrice.toNumber(),E.gasLimit.toNumber()):void 0;return{hash:E.hash,fee:R}}catch(e){throw s.removeTxIdFromApprove(r.id),yt.error(e),e}},async handleBridgeTx(e,t){const{commit:s}=kt(e);s.addTxIdInProgress(t),await h.je.handleTransaction(t),s.removeTxIdFromProgress(t)}});var St=vt;const Tt=(0,a.b7)({namespaced:!0,state:pt,mutations:ut,getters:ht,actions:St}),At=e=>fo(e,u.Y.Bridge,Tt),kt=e=>go(e,u.Y.Bridge,Tt);var Ct=Tt;const Et=(0,a.e9)()({setFocusedField(e,t){e.focusedField=t},setFirstTokenAddress(e,t){e.firstTokenAddress=t||""},setSecondTokenAddress(e,t){e.secondTokenAddress=t||""},setFirstTokenValue(e,t){e.firstTokenValue=t||""},setSecondTokenValue(e,t){e.secondTokenValue=t||""},setFirstTokenBalance(e,t){e.firstTokenBalance=t??null},setSecondTokenBalance(e,t){e.secondTokenBalance=t??null},setReserve(e,t){e.reserve=t},setReserveSubscription(e,t){e.reserveSubscription=t},resetReserveSubscription(e){e.reserveSubscription?.unsubscribe(),e.reserveSubscription=null},setAvailability(e,t){e.isAvailable=t},setAvailabilitySubscription(e,t){e.availabilitySubscription=t},resetAvailabilitySubscription(e){e.availabilitySubscription?.unsubscribe(),e.availabilitySubscription=null},setTotalSupply(e,t){e.totalSupply=t},setTotalSupplySubscription(e,t){e.totalSupplySubscription=t},resetTotalSupplySubscription(e){e.totalSupplySubscription?.unsubscribe(),e.totalSupplySubscription=null}});var Rt=Et;var Nt={firstTokenAddress:"",secondTokenAddress:"",firstTokenValue:"",secondTokenValue:"",firstTokenBalance:null,secondTokenBalance:null,focusedField:null,minted:g.m8,reserve:null,reserveSubscription:null,totalSupply:g.m8,totalSupplySubscription:null,isAvailable:!1,availabilitySubscription:null};const Pt=(0,a.h)()({firstToken(...e){const{state:t,rootGetters:s}=Ot(e),o=s.assets.assetDataByAddress(t.firstTokenAddress),n=t.firstTokenBalance;return n?{...o,balance:n}:o},secondToken(...e){const{state:t,rootGetters:s}=Ot(e),o=s.assets.assetDataByAddress(t.secondTokenAddress),n=t.secondTokenBalance;return n?{...o,balance:n}:o},liquidityInfo(...e){const{state:t,rootState:s}=Ot(e),{firstTokenAddress:o,secondTokenAddress:n}=t;if(o&&n)return s.pool.accountLiquidity.find((e=>e.firstAddress===o&&e.secondAddress===n))},reserveA(...e){const{state:t}=Ot(e);return t.reserve?t.reserve[0]:g.m8},reserveB(...e){const{state:t}=Ot(e);return t.reserve?t.reserve[1]:g.m8},isAvailable(...e){const{state:t}=Ot(e);return t.isAvailable&&!!t.reserve?.length},isNotFirstLiquidityProvider(...e){const{state:t,getters:s}=Ot(e);return!!t.reserve?.length&&0!=+s.reserveA&&0!=+s.reserveB},minted(...e){const{state:t,getters:s}=Ot(e);if(!s.firstToken||!s.secondToken)return g.m8;const[o]=r.hi.poolXyk.estimatePoolTokensMinted(s.firstToken,s.secondToken,t.firstTokenValue,t.secondTokenValue,s.reserveA,s.reserveB,t.totalSupply);return o},totalSupply(...e){const{state:t}=Ot(e);return t.totalSupply||g.m8},shareOfPool(...e){const{getters:t}=Ot(e),s=p.FPNumber.HUNDRED,o=p.FPNumber.fromCodecValue(t.minted),n=p.FPNumber.fromCodecValue(t.totalSupply),a=p.FPNumber.fromCodecValue(t.liquidityInfo?.balance??0);return n.isZero()&&o.isZero()?s.toLocaleString():o.add(a).div(n.add(o)).mul(s).toLocaleString()||g.m8},price(...e){const{state:t,getters:s}=Ot(e),{firstToken:o,secondToken:n}=s;return o&&n?r.hi.divideAssets(o,n,t.firstTokenValue,t.secondTokenValue,!1):g.m8},priceReversed(...e){const{state:t,getters:s}=Ot(e),{firstToken:o,secondToken:n}=s;return o&&n?r.hi.divideAssets(o,n,t.firstTokenValue,t.secondTokenValue,!0):g.m8}});var xt=Pt,Bt=s(93034);const It=new Ee;function Dt(e,t){const{getters:s,commit:o,rootGetters:n}=Mt(e),{firstToken:a,secondToken:r}=s,{setFirstTokenBalance:i,setSecondTokenBalance:c}=o,d=t===Bt.G.First,l=d?a:r,u=d?i:c,p=e=>u(e);It.remove(t),n.wallet.account.isLoggedIn&&l?.address&&!(l.address in n.wallet.account.accountAssetsAddressTable)&&It.add(t,{updateBalance:p,token:l})}const Ft=(0,a.y2)({async setFirstTokenAddress(e,t){const{commit:s,dispatch:o}=Mt(e);s.setFirstTokenAddress(t),s.setFirstTokenValue(),s.setSecondTokenValue(),Dt(e,Bt.G.First),o.subscribeOnAvailability(),o.subscribeOnReserves(),o.subscribeOnTotalSupply()},async setSecondTokenAddress(e,t){const{commit:s,dispatch:o}=Mt(e);s.setSecondTokenAddress(t),s.setFirstTokenValue(),s.setSecondTokenValue(),Dt(e,Bt.G.Second),o.subscribeOnAvailability(),o.subscribeOnReserves(),o.subscribeOnTotalSupply()},async setFirstTokenValue(e,t){const{commit:s,dispatch:o}=Mt(e);s.setFocusedField(Bt.G.First),s.setFirstTokenValue(t),o.updateValues()},async setSecondTokenValue(e,t){const{commit:s,dispatch:o}=Mt(e);s.setFocusedField(Bt.G.Second),s.setSecondTokenValue(t),o.updateValues()},async addLiquidity(e){const{getters:t,state:s,rootState:o}=Mt(e),{firstToken:n,secondToken:a}=t,{isAvailable:i,firstTokenValue:c,secondTokenValue:d}=s;n&&a&&(i?await r.hi.poolXyk.add(n,a,c,d,o.settings.slippageTolerance):await r.hi.poolXyk.create(n,a,c,d,o.settings.slippageTolerance))},async setDataFromLiquidity(e,{firstAddress:t,secondAddress:s}){const{dispatch:o}=Mt(e),n=async e=>(await r.hi.assets.getAssetInfo(e))?.address??"";let[a,i]=await Promise.all([n(t),n(s)]);a===L.XSTUSD.address&&i===L.XOR.address&&(a=L.XOR.address,i=L.XSTUSD.address),await o.setFirstTokenAddress(a),await o.setSecondTokenAddress(i)},async updateSubscriptions(e){const{dispatch:t}=Mt(e);Dt(e,Bt.G.First),Dt(e,Bt.G.Second),t.subscribeOnAvailability(),t.subscribeOnReserves(),t.subscribeOnTotalSupply()},async resetSubscriptions(e){const{commit:t}=Mt(e);It.remove(Bt.G.First),It.remove(Bt.G.Second),t.resetAvailabilitySubscription(),t.resetReserveSubscription(),t.resetTotalSupplySubscription()},async resetData(e){const{commit:t,dispatch:s}=Mt(e);s.resetSubscriptions(),t.setFirstTokenAddress(),t.setSecondTokenAddress(),t.setFirstTokenValue(),t.setSecondTokenValue()},subscribeOnAvailability(e){const{commit:t,getters:s}=Mt(e),{firstToken:o,secondToken:n}=s;if(t.resetAvailabilitySubscription(),o&&n){const e=r.hi.poolXyk.getPoolPropertiesObservable(o.address,n.address).subscribe((e=>{t.setAvailability(!!e)}));t.setAvailabilitySubscription(e)}},subscribeOnReserves(e){const{commit:t,dispatch:s,getters:o}=Mt(e),{firstToken:n,secondToken:a}=o;if(t.resetReserveSubscription(),n&&a){const e=r.hi.poolXyk.getReservesObservable(n.address,a.address).subscribe((e=>{t.setReserve(e),s.updateValues()}));t.setReserveSubscription(e)}},subscribeOnTotalSupply(e){const{commit:t,getters:s}=Mt(e),{firstToken:o,secondToken:n}=s;if(t.resetTotalSupplySubscription(),o&&n){const e=r.hi.poolXyk.getTotalSupplyObservable(o.address,n.address).subscribe((e=>{t.setTotalSupply(e??g.m8)}));t.setTotalSupplySubscription(e)}},updateValues(e){const{state:t}=Mt(e);t.focusedField===Bt.G.Second?function(e){const{getters:t,commit:s,state:o}=Mt(e),n=o.secondTokenValue;t.isNotFirstLiquidityProvider&&(n?s.setFirstTokenValue(new p.FPNumber(n).mul(p.FPNumber.fromCodecValue(t.reserveA)).div(p.FPNumber.fromCodecValue(t.reserveB)).toString()):s.setFirstTokenValue())}(e):function(e){const{getters:t,commit:s,state:o}=Mt(e),n=o.firstTokenValue;t.isNotFirstLiquidityProvider&&(n?s.setSecondTokenValue(new p.FPNumber(n).mul(p.FPNumber.fromCodecValue(t.reserveB)).div(p.FPNumber.fromCodecValue(t.reserveA)).toString()):s.setSecondTokenValue())}(e)}});var _t=Ft;const Lt=(0,a.b7)({namespaced:!0,state:Nt,mutations:Rt,getters:xt,actions:_t}),Ot=e=>fo(e,u.Y.AddLiquidity,Lt),Mt=e=>go(e,u.Y.AddLiquidity,Lt);var Zt=Lt;const Ht=(0,a.e9)()({setAddresses(e,{firstAddress:t,secondAddress:s}){e.firstTokenAddress=t,e.secondTokenAddress=s},setRemovePart(e,t){e.removePart=t||""},setLiquidityAmount(e,t){e.liquidityAmount=t||""},setFirstTokenAmount(e,t){e.firstTokenAmount=t||""},setSecondTokenAmount(e,t){e.secondTokenAmount=t||""},setFocusedField(e,t){e.focusedField=t},resetFocusedField(e){e.focusedField=null}});var qt=Ht;var Vt={firstTokenAddress:"",secondTokenAddress:"",removePart:"",liquidityAmount:"",firstTokenAmount:"",secondTokenAmount:"",focusedField:null};const jt=(0,a.h)()({liquidity(...e){const{state:t,rootState:s}=Yt(e),{firstTokenAddress:o,secondTokenAddress:n}=t;if(o&&n)return s.pool.accountLiquidity.find((e=>e.firstAddress===o&&e.secondAddress===n))},totalSupply(...e){const{getters:t}=Yt(e);return t.liquidity?.totalSupply??g.m8},reserveA(...e){const{getters:t}=Yt(e);return t.liquidity?.reserveA??g.m8},reserveB(...e){const{getters:t}=Yt(e);return t.liquidity?.reserveB??g.m8},liquidityBalanceFull(...e){const{getters:t}=Yt(e);return t.liquidity?.balance?p.FPNumber.fromCodecValue(t.liquidity.balance):p.FPNumber.ZERO},demeterLockedBalance(...e){const{getters:t,rootGetters:s}=Yt(e);if(!t.liquidity||!s.demeterFarming)return p.FPNumber.ZERO;const o=t.liquidity.firstAddress,n=t.liquidity.secondAddress,a=t.liquidityBalanceFull,r=s.demeterFarming.getLockedAmount(o,n,!0);return p.FPNumber.min(a,r)},ceresLockedBalance(...e){const{getters:t,rootGetters:s}=Yt(e);if(!t.liquidity)return p.FPNumber.ZERO;const o=t.liquidity.firstAddress,n=t.liquidity.secondAddress,a=t.liquidityBalanceFull,r=s.pool.getLockedAmount(o,n);return p.FPNumber.min(a,r)},liquidityBalance(...e){const{getters:t}=Yt(e),s=t.liquidityBalanceFull,o=t.demeterLockedBalance,n=t.ceresLockedBalance,a=p.FPNumber.max(o,n);return s.sub(a)},firstToken(...e){const{getters:t,rootGetters:s}=Yt(e),o=t.liquidity?.firstAddress;return o?s.assets.assetDataByAddress(o):null},secondToken(...e){const{getters:t,rootGetters:s}=Yt(e),o=t.liquidity?.secondAddress;return o?s.assets.assetDataByAddress(o):null},firstTokenBalance(...e){const{getters:t}=Yt(e);if(!t.liquidity?.firstBalance)return p.FPNumber.ZERO;return p.FPNumber.fromCodecValue(t.liquidity.firstBalance,t.firstToken?.decimals).mul(t.liquidityBalance).div(t.liquidityBalanceFull)},secondTokenBalance(...e){const{getters:t}=Yt(e);if(!t.liquidity?.secondBalance)return p.FPNumber.ZERO;return p.FPNumber.fromCodecValue(t.liquidity.secondBalance,t.secondToken?.decimals).mul(t.liquidityBalance).div(t.liquidityBalanceFull)},shareOfPool(...e){const{state:t,getters:s}=Yt(e),o=s.liquidityBalanceFull,n=new p.FPNumber(t.liquidityAmount??0),a=p.FPNumber.fromCodecValue(s.totalSupply),r=a.sub(n);return o.isZero()||a.isZero()||r.isZero()?g.m8:o.sub(n).div(r).mul(p.FPNumber.HUNDRED).toLocaleString()||g.m8},price(...e){const{getters:t}=Yt(e),{firstToken:s,secondToken:o,liquidity:n}=t;return n&&s&&o?r.hi.divideAssets(s,o,n.firstBalance,n.secondBalance,!1):g.m8},priceReversed(...e){const{getters:t}=Yt(e),{firstToken:s,secondToken:o,liquidity:n}=t;return n&&s&&o?r.hi.divideAssets(s,o,n.firstBalance,n.secondBalance,!0):g.m8}});var Ut=jt,Wt=s(42140);const Kt=(0,a.y2)({async setRemovePart(e,t){const{commit:s}=$t(e);s.setFocusedField(Wt.G.Percent),s.setRemovePart(t),function(e){const{state:t,commit:s,getters:o}=$t(e),n=new p.FPNumber(t.removePart).div(p.FPNumber.HUNDRED);n.isZero()?(s.setLiquidityAmount(),s.setFirstTokenAmount(),s.setSecondTokenAmount()):(s.setLiquidityAmount(n.mul(o.liquidityBalance).toString()),s.setFirstTokenAmount(n.mul(o.firstTokenBalance).toString()),s.setSecondTokenAmount(n.mul(o.secondTokenBalance).toString()))}(e)},async setFirstTokenAmount(e,t){const{commit:s}=$t(e);s.setFocusedField(Wt.G.First),s.setFirstTokenAmount(t),function(e){const{state:t,commit:s,getters:o}=$t(e),n=t.firstTokenAmount;if(n&&Number.isFinite(+n)){const e=Number.isFinite(+n)?new p.FPNumber(n).div(o.firstTokenBalance):p.FPNumber.ZERO;s.setRemovePart(Math.round(e.mul(p.FPNumber.HUNDRED).toNumber()).toString()),s.setLiquidityAmount(e.mul(o.liquidityBalance).toString()),s.setSecondTokenAmount(e.mul(o.secondTokenBalance).toString())}else s.setRemovePart(),s.setLiquidityAmount(),s.setSecondTokenAmount()}(e)},async setSecondTokenAmount(e,t){const{commit:s}=$t(e);s.setFocusedField(Wt.G.Second),s.setSecondTokenAmount(t),function(e){const{state:t,commit:s,getters:o}=$t(e),n=t.secondTokenAmount;if(n&&Number.isFinite(+n)){const e=new p.FPNumber(n).div(o.secondTokenBalance);s.setRemovePart(Math.round(e.mul(p.FPNumber.HUNDRED).toNumber()).toString()),s.setLiquidityAmount(e.mul(o.liquidityBalance).toString()),s.setFirstTokenAmount(e.mul(o.firstTokenBalance).toString())}else s.setRemovePart(),s.setLiquidityAmount(),s.setFirstTokenAmount()}(e)},async removeLiquidity(e){const{state:t,getters:s,rootState:o}=$t(e),{firstToken:n,secondToken:a}=s;n&&a&&await r.hi.poolXyk.remove(n,a,t.liquidityAmount,s.reserveA,s.reserveB,s.totalSupply,o.settings.slippageTolerance)},async resetData(e){const{commit:t}=$t(e);t.setRemovePart(),t.setLiquidityAmount(),t.setFirstTokenAmount(),t.setSecondTokenAmount(),t.resetFocusedField()}});var Gt=Kt;const Xt=(0,a.b7)({namespaced:!0,state:Vt,mutations:qt,getters:Ut,actions:Gt}),Yt=e=>fo(e,u.Y.RemoveLiquidity,Xt),$t=e=>go(e,u.Y.RemoveLiquidity,Xt);var zt=Xt;var Qt={fee:"",feeFetching:!1,externalRewards:[],internalRewards:null,vestedRewards:null,crowdloanRewards:{},selectedInternal:null,selectedExternal:[],selectedVested:null,selectedCrowdloan:{},rewardsFetching:!1,rewardsClaiming:!1,receivedRewards:[],transactionError:!1,transactionStep:1,signature:"",liquidityProvisionRewardsSubscription:null,vestedRewardsSubscription:null,crowdloanRewardsSubscription:null};const Jt=(0,a.e9)()({reset(e){const t=pe()(["liquidityProvisionRewardsSubscription","vestedRewardsSubscription","crowdloanRewardsSubscription"],{fee:"",feeFetching:!1,externalRewards:[],internalRewards:null,vestedRewards:null,crowdloanRewards:{},selectedInternal:null,selectedExternal:[],selectedVested:null,selectedCrowdloan:{},rewardsFetching:!1,rewardsClaiming:!1,receivedRewards:[],transactionError:!1,transactionStep:1,signature:"",liquidityProvisionRewardsSubscription:null,vestedRewardsSubscription:null,crowdloanRewardsSubscription:null});Object.keys(t).forEach((s=>{e[s]=t[s]}))},setTxStep(e,t){e.transactionStep=t},setRewardsClaiming(e,t){e.rewardsClaiming=t},setTxError(e,t){e.transactionError=t},setRewardsReceived(e,t){e.receivedRewards=t},setSignature(e,t){e.signature=t},setRewards(e,t){Object.assign(e,t)},setSelectedRewards(e,t){Object.assign(e,t)},getFeeRequest(e){e.feeFetching=!0},getFeeSuccess(e,t){e.fee=t,e.feeFetching=!1},getFeeFailure(e){e.feeFetching=!1},setLiquidityProvisionRewardsUpdates(e,t){e.liquidityProvisionRewardsSubscription=t},resetLiquidityProvisionRewardsUpdates(e){e.liquidityProvisionRewardsSubscription?.unsubscribe(),e.liquidityProvisionRewardsSubscription=null,e.internalRewards=null},setVestedRewardsUpdates(e,t){e.vestedRewardsSubscription=t},resetVestedRewardsUpdates(e){e.vestedRewardsSubscription?.unsubscribe(),e.vestedRewardsSubscription=null,e.vestedRewards=null},setCrowdloanRewardsUpdates(e,t){e.crowdloanRewardsSubscription=t},resetCrowdloanRewardsUpdates(e){e.crowdloanRewardsSubscription?.unsubscribe(),e.crowdloanRewardsSubscription=null,e.crowdloanRewards={}}});var es=Jt;const ts=(0,a.h)()({claimableRewards(...e){const{state:t}=ps(e),s=[...t.selectedExternal,...Object.values(t.selectedCrowdloan).flat(1)];return t.selectedInternal&&s.push(t.selectedInternal),t.selectedVested&&s.push(t.selectedVested),s},rewardsAvailable(...e){const{getters:t}=ps(e);return 0!==t.claimableRewards.length},internalRewardsAvailable(...e){const{state:t}=ps(e);return!(0,k.yA)(t.internalRewards?.amount)},vestedRewardsAvailable(...e){const{state:t}=ps(e);return!(0,k.yA)(t.vestedRewards?.limit)},externalRewardsAvailable(...e){const{state:t}=ps(e);return 0!==t.externalRewards.length},crowdloanRewardsAvailable(...e){const{state:t}=ps(e);return Object.entries(t.crowdloanRewards).reduce(((e,[t,s])=>(s.some((e=>!(0,k.yA)(e.amount)))&&e.push(t),e)),[])},externalRewardsSelected(...e){const{state:t}=ps(e);return 0!==t.selectedExternal.length},rewardsByAssetsList(...e){const{getters:t}=ps(e);return t.rewardsAvailable?(0,r.fG)([...t.claimableRewards]):[{asset:L.KnownAssets.get(L.KnownSymbols.PSWAP),symbol:L.KnownSymbols.PSWAP,amount:""}]}});var ss=ts,os=s(38197),ns=s(93286),as=s(25108);async function rs(e){const{commit:t,dispatch:s,getters:o}=ms(e),n=await r.hi.rewards.getCrowdloanRewardsSubscription();let a;return await new Promise((e=>{a=n.subscribe((n=>{if(t.setRewards({crowdloanRewards:n}),!Qt.crowdloanRewardsSubscription&&o.crowdloanRewardsAvailable.length){const e=o.crowdloanRewardsAvailable.reduce(((e,t)=>(e[t]=Qt.crowdloanRewards[t],e)),{});s.setSelectedRewards({selectedCrowdloan:e})}if(Object.keys(Qt.selectedCrowdloan)){const e=Object.entries(Qt.selectedCrowdloan).reduce(((e,[t,s])=>(o.crowdloanRewardsAvailable.includes(t)&&(e[t]=s),e)),{});s.setSelectedRewards({selectedCrowdloan:e})}e()}))})),a}async function is(e){const{commit:t,dispatch:s,getters:o}=ms(e);let n;return await new Promise((e=>{n=r.hi.rewards.getVestedRewardsSubscription().subscribe((n=>{t.setRewards({vestedRewards:n}),!Qt.vestedRewardsSubscription&&o.vestedRewardsAvailable&&s.setSelectedRewards({selectedVested:n}),Qt.selectedVested&&!o.vestedRewardsAvailable&&s.setSelectedRewards({selectedVested:null}),e()}))})),n}async function cs(e){const{commit:t,dispatch:s,getters:o}=ms(e);let n;return await new Promise((e=>{n=r.hi.rewards.getLiquidityProvisionRewardsSubscription().subscribe((n=>{t.setRewards({internalRewards:n}),!Qt.liquidityProvisionRewardsSubscription&&o.internalRewardsAvailable&&s.setSelectedRewards({selectedInternal:n}),Qt.selectedInternal&&!o.internalRewardsAvailable&&s.setSelectedRewards({selectedInternal:null}),e()}))})),n}const ds=(0,a.y2)({async subscribeOnRewards(e){const{commit:t,dispatch:s,rootGetters:o}=ms(e);s.unsubscribeFromRewards(),o.wallet.account.isLoggedIn&&await(0,k.BV)((async()=>{const[s,o,n]=await Promise.all([cs(e),is(e),rs(e)]);t.setLiquidityProvisionRewardsUpdates(s),t.setVestedRewardsUpdates(o),t.setCrowdloanRewardsUpdates(n)}))},unsubscribeFromRewards(e){const{commit:t}=ms(e);t.resetLiquidityProvisionRewardsUpdates(),t.resetVestedRewardsUpdates(),t.resetCrowdloanRewardsUpdates()},async getNetworkFee(e){const{commit:t,getters:s}=ms(e);t.getFeeRequest();try{const e=s.claimableRewards,o=await r.hi.rewards.getNetworkFee(e);t.getFeeSuccess(o)}catch(e){as.error(e),t.getFeeFailure()}},async setSelectedRewards(e,t){const{commit:s,dispatch:o}=ms(e);s.setSelectedRewards(t),await o.getNetworkFee()},async getExternalRewards(e,t){const{commit:s,dispatch:o}=ms(e);try{const e=t?await r.hi.rewards.checkForExternalAccount(t):[];s.setRewards({externalRewards:e}),await o.setSelectedRewards({selectedExternal:e})}catch(e){as.error(e),s.setRewards({externalRewards:[]})}},async claimRewards(e,{internalAddress:t="",externalAddress:s=""}={}){const{commit:o,getters:n,state:a,rootState:i}=ms(e);if(t)try{const{externalRewardsSelected:e,claimableRewards:c,rewardsByAssetsList:d}=n,l=[...d];if(e&&!s)return;if(o.setRewardsClaiming(!0),o.setTxError(!1),e&&1===a.transactionStep){const e=await m.ZP.getEthersInstance(),s=await m.ZP.accountAddressToHex(t),n=os.w(s),a=ns.lE(n),r=await e.getSigner().signMessage(a);o.setSignature(r),o.setTxStep(2)}(!e||2===a.transactionStep&&a.signature)&&(await r.hi.rewards.claim(c,a.signature,a.fee,s),i.web3.evmAddress===s&&(o.setTxStep(1),o.setRewardsReceived(l),o.setRewardsClaiming(!1)))}catch(e){throw o.setTxError(!0),o.setRewardsClaiming(!1),e}}});var ls=ds;const us=(0,a.b7)({namespaced:!0,state:Qt,mutations:es,getters:ss,actions:ls}),ps=e=>fo(e,u.Y.Rewards,us),ms=e=>go(e,u.Y.Rewards,us);var hs=us;const gs=(0,a.e9)()({setPools(e,t){e.pools=Object.freeze([...t])},setPoolsUpdates(e,t){e.poolsUpdates=t},resetPoolsUpdates(e){e.poolsUpdates?.unsubscribe(),e.poolsUpdates=null},setTokens(e,t){e.tokens=Object.freeze([...t])},setTokensUpdates(e,t){e.tokensUpdates=t},resetTokensUpdates(e){e.tokensUpdates?.unsubscribe(),e.tokensUpdates=null},setAccountPools(e,t){e.accountPools=Object.freeze([...t])},setAccountPoolsUpdates(e,t){e.accountPoolsUpdates=t},resetAccountPoolsUpdates(e){e.accountPoolsUpdates?.unsubscribe(),e.accountPoolsUpdates=null}});var fs=gs;var ys={pools:[],poolsUpdates:null,tokens:[],tokensUpdates:null,accountPools:[],accountPoolsUpdates:null};const bs=(0,a.y2)({async subscribeOnPools(e){const{commit:t}=ks(e);t.resetPoolsUpdates();const s=await r.hi.demeterFarming.getPoolsObservable();if(!s)return;let o;await new Promise((e=>{o=s.subscribe((s=>{t.setPools(s),e()}))})),t.setPoolsUpdates(o)},async subscribeOnTokens(e){const{commit:t}=ks(e);t.resetTokensUpdates();const s=await r.hi.demeterFarming.getTokenInfosObservable();if(!s)return;let o;await new Promise((e=>{o=s.subscribe((s=>{t.setTokens(s),e()}))})),t.setTokensUpdates(o)},async subscribeOnAccountPools(e){const{commit:t,rootGetters:s}=ks(e);if(t.resetAccountPoolsUpdates(),!s.wallet.account.isLoggedIn)return;await(0,k.BV)();const o=r.hi.demeterFarming.getAccountPoolsObservable();let n;await new Promise((e=>{n=o.subscribe((s=>{t.setAccountPools(s),e()}))})),t.setAccountPoolsUpdates(n)},unsubscribeUpdates(e){const{commit:t}=ks(e);t.resetPoolsUpdates(),t.resetTokensUpdates(),t.resetAccountPoolsUpdates(),t.setPools([]),t.setTokens([]),t.setAccountPools([])},async deposit(e,t){const{rootGetters:s}=ks(e),{assetsDataTable:o}=s.assets,{baseAsset:n,poolAsset:a,rewardAsset:i,isFarm:c}=t.pool,d=o[n],l=o[a],u=o[i],p=t.value.toString();c?await r.hi.demeterFarming.depositLiquidity(p,l,u,d):await r.hi.demeterFarming.stake(l,u,p)},async withdraw(e,t){const{rootGetters:s}=ks(e),{assetsDataTable:o}=s.assets,{baseAsset:n,poolAsset:a,rewardAsset:i,isFarm:c}=t.pool,d=o[n],l=o[a],u=o[i],p=t.value.toString();c?await r.hi.demeterFarming.withdrawLiquidity(p,l,u,d):await r.hi.demeterFarming.unstake(l,u,p)},async claimRewards(e,t){const{rootGetters:s}=ks(e),{assetsDataTable:o}=s.assets,{baseAsset:n,poolAsset:a,rewardAsset:i,isFarm:c,rewards:d}=t,l=o[n],u=o[a],p=o[i],m=d.toString();await r.hi.demeterFarming.getRewards(c,u,p,l,m)}});var ws=bs;const vs=(0,a.h)()({getLockedAmount(...e){const{state:t}=As(e);return(e,s,o=!0)=>t.accountPools.reduce(((t,n)=>n.baseAsset===e&&n.poolAsset===s&&n.isFarm===o?Ge.FPNumber.max(t,n.pooledTokens):t),Ge.FPNumber.ZERO)}});var Ss=vs;const Ts=(0,a.b7)({namespaced:!0,state:ys,mutations:fs,actions:ws,getters:Ss}),As=e=>fo(e,u.Y.DemeterFarming,Ts),ks=e=>go(e,u.Y.DemeterFarming,Ts);var Cs=Ts;const Es=(0,a.e9)()({setData(e,{file:t,recipients:s}){e.file=t,e.recipients=s},clearData(e){e.file=null,e.recipients=[],e.processingState.currentStageIndex=0,e.processingState.inputToken=L.XOR,e.processingState.txInfo=void 0,e.processingState.datetime=void 0},setSubscriptions(e,t=[]){e.subscriptions=t},addSubscription(e,t){e.subscriptions.push(t)},addSubscribeObjectToSubscription(e,{reservesSubscribe:t,outputAssetId:s}){const o=e.subscriptions.find((e=>e.assetAddress===s));o&&(o.liquidityReservesSubscription=t)},addPathsAndPayloadToSubscription(e,{outputAssetId:t,paths:s,payload:o,dexId:n,liquiditySources:a}){const r=e.subscriptions.find((e=>e.assetAddress===t));r&&(r.paths=s,r.liquiditySources=a,r.payload=o,r.dexId=n,r.dexQuoteData={...r.dexQuoteData,[n]:Object.freeze({payload:o,paths:s,pairLiquiditySources:a})})},setEnabledAssetsSubscription(e,t){e.enabledAssetsSubscription=t},cleanEnabledAssetsSubscription(e){e.enabledAssetsSubscription?.unsubscribe(),e.enabledAssetsSubscription=null},setRecipientStatus(e,{id:t,status:s}){const o=e.recipients.find((e=>e.id===t));o&&(o.status=s)},setRecipientTxId(e,{id:t,txId:s}){const o=e.recipients.find((e=>e.id===t));o&&(o.txId=s)},setRecipientCompleted(e,t){const s=e.recipients.find((e=>e.id===t));s&&(s.isCompleted=!0)},setRecipientTokenAmount(e,{id:t,amount:s}){const o=e.recipients.find((e=>e.id===t));o&&(o.amount=s)},setRecipientExchangeRate(e,{id:t,rate:s}){const o=e.recipients.find((e=>e.id===t));o&&(o.exchangeRate=s)},setInputToken(e,t){e.processingState.inputToken=t},editRecipient(e,{id:t,name:s,wallet:o,usd:n,amount:a,asset:r}){const i=e.recipients.find((e=>e.id===t));i&&(i.name=s,i.wallet=o,i.usd=n,i.amount=a,i.asset=r)},deleteRecipient(e,t){const s=e.recipients.findIndex((e=>e.id===t));e.recipients.splice(s,1)},setCurrentStageIndex(e,t){e.processingState.currentStageIndex=t},progressCurrentStageIndex(e,t){const s=e.processingState.currentStageIndex+t;e.processingState.currentStageIndex=s<0?0:s},setTokensRouted(e,t){e.processingState.tokensRouted=t.maps((e=>({token:e,amount:0})))},setTxInfo(e,t){e.processingState.txInfo=t},setTxDatetime(e,t){e.processingState.datetime=t},setPrimaryMarketsEnabledAssets(e,t){e.enabledAssets=Object.freeze({...t})}});var Rs=Es;var Ns={recipients:[],file:null,subscriptions:[],enabledAssetsSubscription:null,enabledAssets:{lockedSources:[]},processingState:{currentStageIndex:0,inputToken:L.XOR}},Ps=s(50592);const xs=(0,a.h)()({recipients(...e){const{state:t}=Gs(e);return t.recipients},validRecipients(...e){const{state:t}=Gs(e);return t.recipients.filter((e=>r.hi.validateAddress(e.wallet)))},completedRecipients(...e){const{state:t}=Gs(e);return t.recipients.filter((e=>e.isCompleted))},incompletedRecipients(...e){const{state:t}=Gs(e);return t.recipients.filter((e=>!e.isCompleted))},subscriptions(...e){const{state:t}=Gs(e);return t.subscriptions},enabledAssetsSubscription(...e){const{state:t}=Gs(e);return t.enabledAssetsSubscription},currentStageIndex(...e){const{state:t}=Gs(e);return t.processingState.currentStageIndex},currentStageComponentName(...e){const{state:t}=Gs(e);return Ps.Uc[t.processingState.currentStageIndex].component},currentStageComponentTitle(...e){const{state:t}=Gs(e);return Ps.Uc[t.processingState.currentStageIndex].title},inputToken(...e){const{state:t}=Gs(e);return t.processingState.inputToken},file(...e){const{state:t}=Gs(e);return t.file},recipientsTokens(...e){const{getters:t,rootGetters:s}=Gs(e),o=s.assets.assetsDataTable;return[...new Set(t.recipients.map((e=>e.asset.address)))].map((e=>o[e]))},batchTxInfo(...e){const{state:t}=Gs(e);return t.processingState.txInfo},batchTxDatetime(...e){const{state:t}=Gs(e);return t.processingState.datetime}});var Bs=xs,Is=(s(69810),s(38012),s(57460)),Ds=s.n(Is),Fs=s(63545),_s=s(96486),Ls=s(65111),Os=s(79705),Ms=s(9195),Zs=s(25108);const Hs=(0,a.y2)({processingNextStage(e){const{commit:t}=Xs(e);t.progressCurrentStageIndex(1)},processingPreviousStage(e){const{commit:t}=Xs(e);t.progressCurrentStageIndex(-1)},setInputToken(e,t){const{commit:s,dispatch:o}=Xs(e);s.setInputToken(t),o.subscribeOnReserves()},cancelProcessing(e){const{commit:t,dispatch:s}=Xs(e);s.cleanSwapReservesSubscription(),t.clearData()},async updateRecipients(e,t){const{commit:s,dispatch:o,rootState:n}=Xs(e);if(!t)return void s.clearData();const a=n.wallet.account.whitelistArray,i=[],c=n.wallet.account.fiatPriceObject;return new Promise(((e,n)=>{Ds().parse(t,{header:!1,skipEmptyLines:!0,comments:"//",step:(e,t)=>{try{const t=e.data[2]?.replace(/,/g,""),o=(s=e.data[3],a.find((e=>e.symbol===s.toUpperCase()))),n=Number(t)/Number((0,Ms.R_)(o,c));i.push({name:e.data[0],wallet:e.data[1],usd:t,asset:o,amount:n,status:r.hi.validateAddress(e.data[1])?Fs.p.ADDRESS_VALID:Fs.p.ADDRESS_INVALID,id:crypto.randomUUID(),isCompleted:!1})}catch(e){t.abort()}var s},complete:({errors:a})=>{a.length<1?(e(),s.setData({file:t,recipients:i}),o.subscribeOnReserves()):n(new Error("Parcing failed"))}})}))},editRecipient(e,{id:t,name:s,wallet:o,usd:n,asset:a}){const{commit:r,rootState:i}=Xs(e),c=i.wallet.account.fiatPriceObject,d=Number(n)/Number((0,Ms.R_)(a,c));r.editRecipient({id:t,name:s,wallet:o,usd:n,amount:d,asset:a})},deleteRecipient(e,t){const{commit:s}=Xs(e);s.deleteRecipient(t)},subscribeOnReserves(e,t=L.XOR){const{commit:s,rootGetters:o,getters:n,dispatch:a}=Xs(e),i=o.swap.swapLiquiditySource,c=n.inputToken,d=[...new Set(n.recipients.filter((e=>e.asset)).map((e=>e.asset)))].map((e=>e?.address)).filter((e=>e!==c.address));if(!d||d.length<1)return;a.cleanSwapReservesSubscription();const l=r.hi.swap.subscribeOnPrimaryMarketsEnabledAssets().subscribe((e=>{s.setPrimaryMarketsEnabledAssets(e),d.forEach((t=>{const o={liquidityReservesSubscription:null,payload:null,paths:null,liquiditySources:null,assetAddress:t};s.addSubscription(o);const n=r.hi.swap.subscribeOnAllDexesReserves(c.address,t,e,i).subscribe((e=>{e.forEach((e=>a.setSubscriptionPayload({data:e,inputAssetId:c.address,outputAssetId:t})))}));s.addSubscribeObjectToSubscription({reservesSubscribe:n,tokenAddress:t})}))}));s.setEnabledAssetsSubscription(l)},async setSubscriptionPayload(e,{data:t,inputAssetId:s,outputAssetId:o}){const{state:n,dispatch:a,commit:i}=Xs(e),{dexId:c,payload:d}=t;if(!(s&&o&&d))return;const l=c===me.DexId.XOR?n.enabledAssets:{tbc:[],xst:[],lockedSources:[]},u=r.hi.dex.getBaseAssetId(c),p=r.hi.dex.getSyntheticBaseAssetId(c),{paths:m,liquiditySources:h}=(0,ke.getPathsAndPairLiquiditySources)(s,o,d,l,u,p);i.addPathsAndPayloadToSubscription({outputAssetId:o,paths:m,payload:d,dexId:c,liquiditySources:h}),a.updateTokenAmounts()},updateTokenAmounts(e){const{state:t,rootState:s,getters:o,commit:n}=Xs(e),a=s.wallet.account.fiatPriceObject;o.recipients.forEach((e=>{const t=Number(e.usd)/Number((0,Ms.R_)(e.asset,a));n.setRecipientTokenAmount({id:e.id,amount:t})}))},async repeatTransaction(e,t){const{getters:s,commit:o,rootCommit:n}=Xs(e),a=s.inputToken,r=s.recipients.find((e=>e.id===t));if(!r)return Promise.reject(new Error("Cant find transaction by this Id"));o.setRecipientStatus({id:r.id,status:Fs.p.PENDING});const i=qs(e,a,r);if(!i)return Promise.reject(new Error("Cant find transaction by this Id"));const c=i.action;try{if(!c)throw new Error("Cant get transfer params");const e=Date.now();await c().then((async()=>{const t=await Vs(e);n.wallet.transactions.addActiveTx(t.id),o.setRecipientTxId({id:r.id,txId:t.id})})).catch((()=>(o.setRecipientStatus({id:r.id,status:Fs.p.FAILED}),Promise.reject(new Error("Transaction failed")))))}catch(e){return o.setRecipientStatus({id:r.id,status:Fs.p.FAILED}),Promise.reject(new Error("Transaction failed"))}},async runAssetsRouting(e){const{getters:t,commit:s}=Xs(e),o=t.inputToken,n=t.incompletedRecipients.map((t=>(s.setRecipientStatus({id:t.id,status:Fs.p.PENDING}),qs(e,o,t))));await async function(e,t){const{commit:s,getters:o,rootCommit:n,rootState:a}=Xs(e),i=o.inputToken,c=t.map((e=>{const t=e.swapAndSendData.targetAmount.toCodecString();return{accountId:e.swapAndSendData.address,targetAmount:t,assetAddress:e.swapAndSendData.asset.address,recipientId:e.recipient.id,usd:e.recipient.usd}})),d=Object.entries((0,_s.groupBy)(c,"assetAddress")),l=a.wallet.account.whitelistArray,u=e=>l.find((t=>t.address===e));let m=p.FPNumber.ZERO;const h=d.map((t=>{const[s,o]=t,n=o.reduce(((e,t)=>e.add(new p.FPNumber(t.usd))),p.FPNumber.ZERO),a=Us(e,i,u(s),n.toString());m=m.add(a?.amountFrom);const r=a?.bestDexId;return{outcomeAssetId:s,receivers:o,dexId:r}})),g=m.add(m.mul(new p.FPNumber(Ps.W2))).toCodecString(),f=function(e,t,s=ve.LiquiditySourceTypes.Default){(0,Os.hu)(r.hi.account,Ls.Messages.connectWallet);const o=e.decimals,n=p.FPNumber.fromCodecValue(t,o).toCodecString(),a=s?[s]:[];return{args:[e.address,n,a,s===ve.LiquiditySourceTypes.Default?"Disabled":"AllowSelected"]}}(i,g,void 0);await async function(e){js=!0;try{return await e()}catch(e){throw Zs.error(e),e}finally{js=!1}}((async()=>{try{const e=Date.now();await r.hi.submitExtrinsic(r.hi.api.tx.liquidityProxy.swapTransferBatch(h,...f.args),r.hi.account.pair,{symbol:i.symbol,assetAddress:i.address,to:r.hi.account.pair.address,type:p.Operation.SwapAndSend}).then((async()=>{const t=await Vs(e);n.wallet.transactions.addActiveTx(t.id),s.setTxInfo({txId:t.id,blockId:t.blockId,from:t.from}),s.setTxDatetime(new Date),h.forEach((e=>{e.receivers.forEach((e=>{s.setRecipientTxId({id:e.recipientId,txId:t.id})}))}))})).catch((e=>{Zs.dir(e),h.forEach((e=>{e.receivers.forEach((e=>{s.setRecipientStatus({id:e.recipientId,status:Fs.p.FAILED})}))}))}))}catch(e){Zs.dir(e),h.forEach((e=>{e.receivers.forEach((e=>{s.setRecipientStatus({id:e.recipientId,status:Fs.p.FAILED})}))}))}}))}(e,n)},cleanSwapReservesSubscription(e){const{state:t,commit:s}=Xs(e);t.subscriptions.forEach((e=>{e.liquidityReservesSubscription?.unsubscribe()})),s.setSubscriptions([]),s.cleanEnabledAssetsSubscription()},async getBlockNumber(e,t){const s=await r.hi.api.at(t);return(await s.query.system.number()).toString()}});function qs(e,t,s){const{rootState:o,commit:n}=Xs(e);if(s.asset.address===t.address){const e=o.wallet.account.fiatPriceObject,t=(0,Ms.b8)(e,s.asset,s.usd),a=(0,Ms.R_)(s.asset,e);return n.setRecipientExchangeRate({id:s.id,rate:a?.toFixed()}),{action:async()=>await r.hi.transfer(s.asset,s.wallet,t.toString()),recipient:s,swapAndSendData:{address:s.wallet,targetAmount:t,asset:s.asset}}}try{const o=Us(e,t,s.asset,s.usd);if(!o)return null;const{amountFrom:a,amountTo:i,exchangeRate:c,bestDexId:d}=o;return n.setRecipientExchangeRate({id:s.id,rate:c?.toFixed()}),{action:async()=>await r.hi.swap.executeSwapAndSend(s.wallet,t,s.asset,a.toString(),i.toString(),void 0,!0,void 0,d),swapAndSendData:{address:s.wallet,targetAmount:i,amountFrom:a,asset:s.asset,dexId:d},recipient:s,assetAddress:s.asset.address}}catch(e){throw new Error(e)}}async function Vs(e){const t=(0,_s.findLast)(r.hi.historyList,(t=>Number(t.startTime)>e));return t||(await(0,k.gw)(),await Vs(e))}let js=!1;function Us(e,t,s,o){const{rootState:n,getters:a,rootGetters:i,state:c}=Xs(e),d=n.wallet.account.fiatPriceObject,l=(0,Ms.b8)(d,s,o),u=(0,Ms.R_)(s,d);if(t.address===s.address)return{amountFrom:l,amountTo:l,exchangeRate:u,bestDexId:0};const m=a.subscriptions.find((e=>e.assetAddress===s.address));if(!m)throw new Error("Subscription did not found");const{paths:h,payload:g,liquiditySources:f,dexQuoteData:y}=m,b=r.hi.dex.dexList,w=c.enabledAssets,v=b.reduce(((e,{dexId:o})=>({...e,[o]:r.hi.swap.getResult(t,s,l.toString(),!0,[i.swap.swapLiquiditySource].filter(Boolean),w,y[o].paths,y[o].payload,o)})),{});let S=me.DexId.XOR;for(const e in v){const t=p.FPNumber.fromCodecValue(v[e].amount),s=p.FPNumber.fromCodecValue(v[S].amount);t.isZero()||p.FPNumber.isLessThan(t,s)&&(S=+e)}const{amount:T,amountWithoutImpact:A,fee:k,rewards:C}=v[S];return{amountFrom:p.FPNumber.fromCodecValue(T),amountTo:l,exchangeRate:u,bestDexId:S,allDexes:v}}var Ws=Hs;const Ks=(0,a.b7)({namespaced:!0,state:Ns,mutations:Rs,getters:Bs,actions:Ws}),Gs=e=>fo(e,u.Y.RouteAssets,Ks),Xs=e=>go(e,u.Y.RouteAssets,Ks);var Ys=Ks;const $s=(0,a.e9)()({setXorPriceToDeposit(e,t){e.xorToDeposit=t},setEuroBalance(e,t){e.euroBalance=t},setEuroBalanceLoaded(e,t){e.wasEuroBalanceLoaded=t},setTotalXorBalance(e,t){e.totalXorBalance=t},setTotalXorBalanceUpdates(e,t){e.totalXorBalanceUpdates=t},resetTotalXorBalanceUpdates(e){e.totalXorBalanceUpdates?.unsubscribe(),e.totalXorBalanceUpdates=null},setKycStatus(e,t){e.kycStatus=t},setVerificationStatus(e,t){e.verificationStatus=t},setPayWingsAuthSdk(e,t){e.authLogin=t},setHasKycAttempts(e,t){e.hasFreeAttempts=t},setWillToPassKycAgain(e,t){e.wantsToPassKycAgain=t},setRejectReason(e,t){e.rejectReason=t}});var zs=$s;var Qs={kycStatus:void 0,verificationStatus:void 0,euroBalance:g.m8,wasEuroBalanceLoaded:!1,totalXorBalance:p.FPNumber.ZERO,xorToDeposit:p.FPNumber.ZERO,totalXorBalanceUpdates:null,authLogin:null,hasFreeAttempts:null,wantsToPassKycAgain:!1,rejectReason:null},Js=s(21251);const eo=(0,a.h)()({accountAddress(...e){const{rootState:t}=io(e);return t.wallet.account.address},isEuroBalanceEnough(...e){const{state:t}=io(e);return parseInt(t.euroBalance,10)>=95},currentStatus(...e){const{state:t}=io(e),{kycStatus:s,verificationStatus:o}=t;return[s,o].includes(Js.$.Rejected)?Js.$.Rejected:s&&o?s===Js.a.Started?null:[Js.a.Completed,Js.a.Successful].includes(s)&&o===Js.$.Pending?Js.$.Pending:[Js.a.Completed,Js.a.Successful].includes(s)&&o===Js.$.Accepted?Js.$.Accepted:void 0:null}});var to=eo,so=s(43479),oo=s(18139);const no=(0,a.y2)({calculateXorRestPrice(e,t){const{state:s,commit:o}=co(e),{totalXorBalance:n}=s,a=p.FPNumber.HUNDRED.add(p.FPNumber.ONE).sub(n.mul(t)).div(t);o.setXorPriceToDeposit(a.dp(3))},async calculateXorBalanceInEuros(e,{xorPerEuro:t,xorTotalBalance:s}){const{commit:o,dispatch:n}=co(e);try{const e=p.FPNumber.fromNatural(t),a=s.mul(e).toNumber();o.setEuroBalance(a.toString()),a<100&&n.calculateXorRestPrice(e)}catch{}},async subscribeToTotalXorBalance(e){const{commit:t,rootGetters:s,dispatch:o}=co(e);if(t.resetTotalXorBalanceUpdates(),!s.wallet.account.isLoggedIn)return;const n=await(0,so.id)();await(0,k.BV)((async()=>{await new Promise((e=>{const s=r.hi.assets.getTotalXorBalanceObservable().subscribe((async s=>{t.setTotalXorBalance(s),await o.calculateXorBalanceInEuros({xorPerEuro:n,xorTotalBalance:s}),e()}));t.setTotalXorBalanceUpdates(s)})),t.setEuroBalanceLoaded(!0)}))},async unsubscribeFromTotalXorBalance(e){const{commit:t}=co(e);t.resetTotalXorBalanceUpdates()},async getUserStatus(e){const{commit:t}=co(e),{kycStatus:s,verificationStatus:o,rejectReason:n}=await(0,so.C8)();t.setKycStatus(s),t.setVerificationStatus(o),n&&t.setRejectReason(n)},async initPayWingsAuthSdk(e){const{commit:t,rootState:s}=co(e),o=s.wallet.settings.soraNetwork||r.it.SoraNetwork.Test,{authService:n}=(0,so.It)(o);await(0,oo.td)(n.sdkURL).catch((()=>{})),await(0,oo.ve)(n.sdkURL).then((()=>{const e=Paywings.WebSDK.create({Domain:"soracard.com",UnifiedLoginApiKey:n.apiKey,env:n.env,AccessTokenTypeID:1,UserTypeID:2,ClientDescription:"Auth"});t.setPayWingsAuthSdk(e)}))},async getUserKycAttempt(e){const{commit:t}=co(e),s=await(0,so.MJ)();t.setHasKycAttempts(s)}});var ao=no;const ro=(0,a.b7)({namespaced:!0,state:Qs,getters:to,mutations:zs,actions:ao}),io=e=>fo(e,u.Y.SoraCard,ro),co=e=>go(e,u.Y.SoraCard,ro);var lo=ro;o.default.use(n.ZP);const uo={wallet:r.cZ.walletModules.wallet,router:l,web3:I,assets:W,settings:le,swap:Fe,referrals:Ve,pool:Je,moonpay:dt,bridge:Ct,addLiquidity:Zt,removeLiquidity:zt,rewards:hs,demeterFarming:Cs,routeAssets:Ys,soraCard:lo},{store:po,rootGetterContext:mo,rootActionContext:ho}=(0,a.yZ)({modules:uo,strict:!1}),go=(e,t,s)=>{const{rootCommit:o,rootDispatch:n,rootGetters:a,rootState:r}=ho(e);return{state:r[t],getters:a[t],commit:o[t],dispatch:n[t],rootState:r,rootGetters:a,rootCommit:o,rootDispatch:n}},fo=(e,t,s)=>{const[,,o,n]=e,{rootGetters:a,rootState:r}=mo([o,n]);return{state:r[t],getters:a[t],rootState:r,rootGetters:a}};var yo=po},42140:function(e,t,s){"use strict";var o;s.d(t,{G:function(){return o}}),function(e){e.First="firstTokenAmount",e.Second="secondTokenAmount",e.Percent="removePart"}(o||(o={}))},63545:function(e,t,s){"use strict";var o;s.d(t,{p:function(){return o}}),function(e){e.PENDING="Pending",e.FAILED="Failed",e.PASSED="Passed",e.ADDRESS_INVALID="Address invalid",e.ADDRESS_VALID="Address valid",e.SUCCESS="Success"}(o||(o={}))},9195:function(e,t,s){"use strict";s.d(t,{b8:function(){return a},R_:function(){return r}});var o=s(8755),n=s(36930);function a(e,t,s){return new n.FPNumber(s).div(n.FPNumber.fromCodecValue(e[t.address],t.decimals))}function r(e,t){return e?n.FPNumber.fromCodecValue(t[e.address],e.decimals):null}t.ZP={validate(e){return this.wallet(e.wallet)&&this.asset(e.asset)&&this.usd(e.usd)&&this.amount(e.amount)},name:e=>e,wallet:e=>o.hi.validateAddress(e),asset:e=>e,usd:e=>e&&!isNaN(e),amount:e=>e&&!isNaN(e)&&Number.isFinite(e)}},21251:function(e,t,s){"use strict";var o,n;s.d(t,{a:function(){return o},$:function(){return n}}),function(e){e.Started="Started",e.Completed="Completed",e.Failed="Failed",e.Rejected="Rejected",e.Successful="Successful"}(o||(o={})),function(e){e.Pending="Pending",e.Accepted="Accepted",e.Rejected="Rejected",e.None="None"}(n||(n={}))},28335:function(e,t,s){"use strict";s.d(t,{He:function(){return P},PO:function(){return u},je:function(){return D},Zc:function(){return l},mW:function(){return b},gR:function(){return h},rz:function(){return g},z2:function(){return w},pM:function(){return S}});var o=s(60760),n=s(52612),a=s.n(n),r=s(36930),i=s(80711),c=s(32374),d=s(8755);const l=d.hi.bridge;var u;!function(e){e.INITIAL="INITIAL",e.SORA_SUBMITTED="SORA_SUBMITTED",e.SORA_PENDING="SORA_PENDING",e.SORA_REJECTED="SORA_REJECTED",e.SORA_COMMITED="SORA_COMMITED",e.EVM_SUBMITTED="EVM_SUBMITTED",e.EVM_PENDING="EVM_PENDING",e.EVM_REJECTED="EVM_REJECTED",e.EVM_COMMITED="EVM_COMMITED"}(u||(u={}));var p=s(85530),m=s(63471);const h=e=>e.type===r.Operation.EthBridgeOutgoing?!e.blockId&&!e.txId:e.type!==r.Operation.EthBridgeIncoming||!e.ethereumHash,g=e=>e.type===r.Operation.EthBridgeOutgoing?!e.ethereumHash:e.type!==r.Operation.EthBridgeIncoming,f=e=>{const t=l.getHistory(e);if(!t)throw new Error(`[Bridge]: Transaction is not exists: ${e}`);return t},y=async(e,t={})=>{const s=f(e);l.saveHistory({...s,...t})},b=e=>e?.type===r.Operation.EthBridgeOutgoing,w=async e=>{if(!e.hash)throw new Error("[Bridge]: Tx hash cannot be empty");if(!Number.isFinite(e.externalNetwork))throw new Error(`[Bridge]: Tx externalNetwork should be a number, ${e.externalNetwork} received`);let t;return await new Promise(((s,o)=>{t=l.subscribeOnRequestStatus(e.hash).subscribe((e=>{switch(e){case r.BridgeTxStatus.Failed:case r.BridgeTxStatus.Frozen:o(new Error("[Bridge]: Transaction was failed or canceled"));break;case r.BridgeTxStatus.Ready:s()}}))})),t.unsubscribe(),l.getApprovedRequest(e.hash)},v=async e=>{const t=f(e);if(t.hash)return t.hash;const s=t.blockId,o=await d.hi.system.getExtrinsicsFromBlock(s);if(o.length){const e=await d.hi.system.getBlockEvents(s),n=o.findIndex((e=>{const{signer:s,method:{method:o,section:n}}=e;return s.toString()===t.from&&"transferToSidechain"===o&&"ethBridge"===n}));if(!Number.isFinite(n))throw new Error("[Bridge]: Transaction was failed");const a=e.find((({phase:e,event:t})=>e.isApplyExtrinsic&&e.asApplyExtrinsic.eq(n)&&"ethBridge"===t.section&&"RequestRegistered"===t.method));if(!a)throw new Error("[Bridge]: Transaction was failed");return a.event.data[0].toString()}return await(0,p.gw)(6e3),await v(e)},S=async(e,t)=>{if(!e)throw new Error("[Bridge]: evm hash cannot be empty!");await(async(e,t,s)=>{const o=await m.ZP.getEthersInstance();try{const t=1,s=0,n=await o.getBlockNumber()-20,{data:a,from:r,nonce:i,to:c,value:d}=await o.getTransaction(e);await o._waitForTransaction(e,t,s,{data:a,from:r,nonce:i,to:c??"",value:d,startBlock:n})}catch(e){e.code===i.jK.TRANSACTION_REPLACED&&("repriced"===e.reason||"replaced"===e.reason?t(e.replacement.hash):"canceled"===e.reason&&s(e.replacement.hash))}})(e,(async e=>{t?.(e),await S(e,t)}),(e=>{throw new Error(`[Bridge]: The transaction was canceled by the user [${e}]`)}))},T=async e=>{try{const{from:t,effectiveGasPrice:s,gasUsed:o,blockNumber:n}=await m.ZP.getEvmTransactionReceipt(e);return{ethereumNetworkFee:m.ZP.calcEvmFee(s.toNumber(),o.toNumber()),blockHeight:n,from:t}}catch(e){return null}};var A=s(23902),k=s.n(A),C=s(52151),E=s.n(C),R=s(52490),N=s(16546);class P{constructor(e){(0,o.Z)(this,"externalNetwork",r.BridgeNetworks.ETH_NETWORK_ID),(0,o.Z)(this,"ethAccountTransactionsMap",{}),(0,o.Z)(this,"ethBlockLogsMap",{}),(0,o.Z)(this,"ethStartBlock",{}),(0,o.Z)(this,"etherscanApiKey",void 0),(0,o.Z)(this,"etherscanInstance",void 0),(0,o.Z)(this,"outgoingTopic","0x0ce781a18c10c8289803c7c4cfd532d797113c4b41c9701ffad7d0a632ac555b"),this.etherscanApiKey=e}get historySyncTimestamp(){return+(l.accountStorage.get("bridgeHistorySyncTimestamp")||0)}set historySyncTimestamp(e){l.accountStorage.set("bridgeHistorySyncTimestamp",e)}async init(){const e=await m.ZP.getEthersInstance(),t=await e.getNetwork();this.etherscanInstance=new R.A(t,this.etherscanApiKey)}async getEthStartBlock(e){const t=Math.round(e/1e3);return this.ethStartBlock[t]||(this.ethStartBlock[t]=+await this.etherscanInstance.fetch("block",{action:"getblocknobytime",closest:"before",timestamp:t})),this.ethStartBlock[t]}async getEthAccountTransactions(e,t,s){const o=e.toLowerCase(),n=(s||[]).map((e=>e.toLowerCase()));if(!this.ethAccountTransactionsMap[o]){const a=await this.getEthStartBlock(t),r=(await this.etherscanInstance.getHistory(e,a)).reduce(((e,t)=>((!s||t.to&&n.includes(t.to.toLowerCase()))&&(e[t.hash]=t),e)),{});this.ethAccountTransactionsMap[o]=r}return this.ethAccountTransactionsMap[o]}async getBlockLogsMap(e,t){return this.ethBlockLogsMap[e]||(this.ethBlockLogsMap[e]=this.getLogsMap([t],this.outgoingTopic,e)),await this.ethBlockLogsMap[e]}async getLogsMap(e,t,s){const o=await m.ZP.getEthersInstance();return k()(await Promise.all(e.map((e=>{return n=e,o.getLogs({topics:[t],blockHash:s,address:n});var n})))).reduce(((e,{data:t})=>(e[t]=!0,e)),{})}async getFromTimestamp(e){const t=E()(e);if(t.module===d.OY.ModuleNames.BridgeMultisig){const e=await d.hi.system.getBlockHash(1);return await d.hi.system.getBlockTimestamp(e)}return 1e3*t.timestamp}async findEthTxBySoraHash(e,t,s,o){if(!e||!t)return null;const n=await this.getEthAccountTransactions(e,s,o);try{return await Promise.any(Object.values(n).map((async e=>{const s=await this.getBlockLogsMap(e.blockHash,e.to);if(t in s)return e;throw new Error})))}catch(e){return null}}async findEthTxByEthereumHash(e){for(const t in this.ethAccountTransactionsMap)if(e in this.ethAccountTransactionsMap[t])return this.ethAccountTransactionsMap[t][e];return await m.ZP.getEvmTransaction(e)}async fetchHistoryElements(e,t=0,s){const o=[r.Operation.EthBridgeOutgoing,r.Operation.EthBridgeIncoming],n=(0,d.ir)({address:e,operations:o,timestamp:t,ids:s}),a=[];let i=!0,c="";do{const e={after:c,filter:n,first:100},t=await d.m5.account.getHistory(e);if(!t)return a;i=!!t.pageInfo?.hasNextPage,c=t.pageInfo?.endCursor??"",a.push(...t.nodes)}while(i);return a}async clearHistory(e){this.historySyncTimestamp=0,l.clearHistory(),await(e?.())}async updateAccountHistory(e,t,s,o,n){const i=l.historyList,c=await this.fetchHistoryElements(e,this.historySyncTimestamp);if(!c.length)return;const{externalNetwork:p}=this,h=await this.getFromTimestamp(c),g=a()(c)?.timestamp;for(const a of c){const c=a.module===d.OY.ModuleNames.BridgeMultisig?r.Operation.EthBridgeIncoming:r.Operation.EthBridgeOutgoing,g=b({type:c}),f=a.data,y=f.requestHash,w=i.find((e=>e.txId===a.id||(g?e.hash===y:e.ethereumHash===y)));if(w?.status===r.BridgeTxStatus.Done)continue;const v=g?y:await l.getSoraHashByEthereumHash(y),S=f.amount,A=f.assetId,k=e,C=t[A]?.symbol,E=a.blockHash,R=a.id,P=g?s[r.Operation.EthBridgeOutgoing]:N.m8,x=1e3*a.timestamp,B=!g||(!!v&&await l.getRequestStatus(v))===r.BridgeTxStatus.Ready,I=B?2:1,D=g?B?await this.findEthTxBySoraHash(f.sidechainAddress,v,h,o):null:await this.findEthTxByEthereumHash(y),F=D?.hash??"",_=F?await T(F):null,L=g?f.sidechainAddress:_?.from,O=_?.ethereumNetworkFee,M=D?String(D.blockNumber):void 0,Z=D?.timestamp?1e3*D.timestamp:D?.blockNumber?1e3*(await m.ZP.getBlock(D.blockNumber)).timestamp:Date.now(),[H,q]=g?[x,Z]:[Z,x],V=g?F?u.EVM_COMMITED:B?u.EVM_REJECTED:v?u.SORA_PENDING:u.SORA_REJECTED:u.SORA_COMMITED,j={txId:R,type:c,blockId:E,blockHeight:M,from:k,amount:S,symbol:C,assetAddress:A,startTime:H,endTime:q,status:g?F?r.BridgeTxStatus.Done:B?r.BridgeTxStatus.Failed:v?r.BridgeTxStatus.Pending:r.BridgeTxStatus.Failed:r.BridgeTxStatus.Done,transactionStep:I,hash:v,ethereumHash:F,soraNetworkFee:P,ethereumNetworkFee:O,transactionState:V,externalNetwork:p,to:L};w?l.saveHistory({...w,...j}):l.generateHistoryItem(j),await(n?.())}this.historySyncTimestamp=g}}var x=s(25108);class B{constructor({signEvm:e,updateHistory:t,showNotification:s,getAssetByAddress:n,getActiveHistoryItem:a,getBridgeHistoryInstance:r}){(0,o.Z)(this,"signEvm",void 0),(0,o.Z)(this,"updateHistory",void 0),(0,o.Z)(this,"showNotification",void 0),(0,o.Z)(this,"getAssetByAddress",void 0),(0,o.Z)(this,"getActiveHistoryItem",void 0),(0,o.Z)(this,"getBridgeHistoryInstance",void 0),this.signEvm=e,this.updateHistory=t,this.showNotification=s,this.getAssetByAddress=n,this.getActiveHistoryItem=a,this.getBridgeHistoryInstance=r}async handleState(e,{status:t,nextState:s,rejectState:o,handler:n}){try{const o=f(e);if(o.status===r.BridgeTxStatus.Done)return;t&&o.status!==t&&this.updateTransactionParams(e,{status:t}),"function"==typeof n&&await n(e),this.updateTransactionParams(e,{transactionState:s})}catch(t){x.error(t);const s=f(e),n=s.status===r.BridgeTxStatus.Failed;this.updateTransactionParams(e,{status:r.BridgeTxStatus.Failed,transactionState:o,endTime:n?s.endTime:Date.now()})}}updateTransactionParams(e,t={}){y(e,t),this.updateHistory()}onComplete(e){this.updateTransactionParams(e,{endTime:Date.now()});const t=f(e),{type:s,assetAddress:o}=t;if(s===r.Operation.EthBridgeIncoming&&o){c.ZP.getters.wallet.account.accountAssetsAddressTable[o]||c.ZP.dispatch.wallet.account.addAsset(o)}this.showNotification(t)}updateTransactionStep(e){this.updateTransactionParams(e,{transactionStep:2})}async beforeSubmit(e){const t=this.getActiveHistoryItem();if(!t||t.id!==e)throw new Error(`[Bridge]: Transaction ${e} stopped, user should sign transaction in ui`)}async onEvmPending(e){await(async e=>{const t=f(e);await S(t.ethereumHash,(t=>y(e,{ethereumHash:t})))})(e);const t=f(e),{ethereumNetworkFee:s,blockHeight:o}=await T(t.ethereumHash)||{};if(!s||!o)throw this.updateTransactionParams(e,{ethereumHash:void 0,ethereumNetworkFee:void 0}),new Error(`[Bridge]: Ethereum transaction not found, hash: ${t.ethereumHash}. 'ethereumHash' is reset`);this.updateTransactionParams(e,{ethereumNetworkFee:s,blockHeight:o})}async onEvmSubmitted(e){this.updateTransactionParams(e,{transactionState:u.EVM_PENDING});const t=f(e);if(!t.ethereumHash){await this.beforeSubmit(e);try{const{hash:s,fee:o}=await this.signEvm(e);this.updateTransactionParams(e,{ethereumHash:s,ethereumNetworkFee:o??t.ethereumNetworkFee})}catch(s){if(s.code===i.jK.UNPREDICTABLE_GAS_LIMIT){const{to:s,hash:o,startTime:n}=t,a=await this.getBridgeHistoryInstance(),r=await a.findEthTxBySoraHash(s,o,n);if(r)return void this.updateTransactionParams(e,{ethereumHash:r.hash})}throw s}}}}class I{constructor({sign:e,...t}){(0,o.Z)(this,"reducers",void 0),this.reducers=Object.entries(I.OPERATION_REDUCERS).reduce(((s,[o,n])=>{if(!(o in s)){const a=new n({...t,signEvm:e[o]});s[o]=a}return s}),{})}async handleTransaction(e){const t=f(e),{type:s}=t;if(!(s in this.reducers))throw new Error(`[Bridge]: Unsupported operation '${s}'`);const o=this.reducers[s];await this.process(t,o)}async process(e,t){await t.changeState(e);const s=f(e.id);[r.BridgeTxStatus.Done,r.BridgeTxStatus.Failed].includes(s.status)||await this.process(s,t)}}(0,o.Z)(I,"OPERATION_REDUCERS",{[r.Operation.EthBridgeOutgoing]:class extends B{async changeState(e){if(!e.id)throw new Error("[Bridge]: TX ID cannot be empty");switch(e.transactionState){case u.INITIAL:return await this.handleState(e.id,{status:r.BridgeTxStatus.Pending,nextState:u.SORA_SUBMITTED,rejectState:u.SORA_REJECTED});case u.SORA_SUBMITTED:return await this.handleState(e.id,{status:r.BridgeTxStatus.Pending,nextState:u.SORA_PENDING,rejectState:u.SORA_REJECTED,handler:async e=>{await this.beforeSubmit(e),this.updateTransactionParams(e,{transactionState:u.SORA_PENDING});const{txId:t,blockId:s,to:o,amount:n,assetAddress:r}=f(e);if(!n)throw new Error('[Bridge]: TX "amount" cannot be empty');if(!r)throw new Error('[Bridge]: TX "assetAddress" cannot be empty');if(!o)throw new Error('[Bridge]: TX "to" cannot be empty');const i=this.getAssetByAddress(r);if(!i||!i.externalAddress)throw new Error(`[Bridge]: TX asset is not registered: ${r}`);if(t||await l.transferToEth(i,o,n,e),t&&!s){const s=l.formatAddress(l.account.pair.address),o=await this.getBridgeHistoryInstance(),n=a()(await o.fetchHistoryElements(s,0,[t]));if(!n)throw new Error(`[Bridge]: Can not restore TX from Subquery: ${t}`);this.updateTransactionParams(e,{blockId:n.blockHash,hash:n.data.requestHash})}}});case u.SORA_PENDING:return await this.handleState(e.id,{nextState:u.SORA_COMMITED,rejectState:u.SORA_REJECTED,handler:async e=>{const t=await v(e);this.updateTransactionParams(e,{hash:t});const s=f(e),{to:o}=await w(s);this.updateTransactionParams(e,{to:o})}});case u.SORA_COMMITED:return await this.handleState(e.id,{nextState:u.EVM_SUBMITTED,rejectState:u.SORA_REJECTED,handler:async e=>this.updateTransactionStep(e)});case u.SORA_REJECTED:return await this.handleState(e.id,{status:r.BridgeTxStatus.Pending,nextState:u.SORA_SUBMITTED,rejectState:u.SORA_REJECTED});case u.EVM_SUBMITTED:return await this.handleState(e.id,{status:r.BridgeTxStatus.Pending,nextState:u.EVM_PENDING,rejectState:u.EVM_REJECTED,handler:async e=>await this.onEvmSubmitted(e)});case u.EVM_PENDING:return await this.handleState(e.id,{nextState:u.EVM_COMMITED,rejectState:u.EVM_REJECTED,handler:async e=>await this.onEvmPending(e)});case u.EVM_COMMITED:return await this.handleState(e.id,{status:r.BridgeTxStatus.Done,nextState:u.EVM_COMMITED,rejectState:u.EVM_REJECTED,handler:async e=>this.onComplete(e)});case u.EVM_REJECTED:return await this.handleState(e.id,{status:r.BridgeTxStatus.Pending,nextState:u.EVM_SUBMITTED,rejectState:u.EVM_REJECTED})}}},[r.Operation.EthBridgeIncoming]:class extends B{async changeState(e){if(!e.id)throw new Error("[Bridge]: TX ID cannot be empty");switch(e.transactionState){case u.INITIAL:return await this.handleState(e.id,{status:r.BridgeTxStatus.Pending,nextState:u.EVM_SUBMITTED,rejectState:u.EVM_REJECTED});case u.EVM_SUBMITTED:return await this.handleState(e.id,{status:r.BridgeTxStatus.Pending,nextState:u.EVM_PENDING,rejectState:u.EVM_REJECTED,handler:async e=>await this.onEvmSubmitted(e)});case u.EVM_PENDING:return await this.handleState(e.id,{nextState:u.EVM_COMMITED,rejectState:u.EVM_REJECTED,handler:async e=>await this.onEvmPending(e)});case u.EVM_COMMITED:return await this.handleState(e.id,{nextState:u.SORA_SUBMITTED,rejectState:u.EVM_REJECTED,handler:async e=>this.updateTransactionStep(e)});case u.EVM_REJECTED:return await this.handleState(e.id,{status:r.BridgeTxStatus.Pending,nextState:u.EVM_SUBMITTED,rejectState:u.EVM_REJECTED});case u.SORA_SUBMITTED:return await this.handleState(e.id,{status:r.BridgeTxStatus.Pending,nextState:u.SORA_PENDING,rejectState:u.SORA_REJECTED});case u.SORA_PENDING:return await this.handleState(e.id,{nextState:u.SORA_COMMITED,rejectState:u.SORA_REJECTED,handler:async e=>{const t=f(e),{hash:s,blockId:o}=await(async e=>{if(!e.ethereumHash)throw new Error("[Bridge]: ethereumHash cannot be empty!");if(!Number.isFinite(e.externalNetwork))throw new Error(`[Bridge]: Tx externalNetwork should be a number, ${e.externalNetwork} received`);let t;return await new Promise(((s,o)=>{t=l.subscribeOnRequest(e.ethereumHash).subscribe((e=>{if(e)switch(e.status){case r.BridgeTxStatus.Failed:case r.BridgeTxStatus.Frozen:o(new Error("[Bridge]: Transaction was failed or canceled"));break;case r.BridgeTxStatus.Done:s()}}))})),t.unsubscribe(),{hash:await l.getSoraHashByEthereumHash(e.ethereumHash),blockId:await l.getSoraBlockHashByRequestHash(e.ethereumHash)}})(t);this.updateTransactionParams(e,{hash:s,blockId:o})}});case u.SORA_COMMITED:return await this.handleState(e.id,{status:r.BridgeTxStatus.Done,nextState:u.SORA_COMMITED,rejectState:u.SORA_REJECTED,handler:async e=>this.onComplete(e)});case u.SORA_REJECTED:return await this.handleState(e.id,{status:r.BridgeTxStatus.Pending,nextState:u.SORA_SUBMITTED,rejectState:u.SORA_REJECTED})}}}});const D=new I({sign:{[r.Operation.EthBridgeIncoming]:e=>c.ZP.dispatch.bridge.signEvmTransactionEvmToSora(e),[r.Operation.EthBridgeOutgoing]:e=>c.ZP.dispatch.bridge.signEvmTransactionSoraToEvm(e)},updateHistory:()=>c.ZP.commit.bridge.setHistory(),showNotification:e=>c.ZP.commit.bridge.setNotificationData(e),getAssetByAddress:e=>c.ZP.getters.assets.assetDataByAddress(e),getActiveHistoryItem:()=>c.ZP.getters.bridge.historyItem,getBridgeHistoryInstance:()=>c.ZP.dispatch.bridge.getBridgeHistoryInstance()})},43479:function(e,t,s){"use strict";s.d(t,{C8:function(){return l},id:function(){return m},MJ:function(){return h},G5:function(){return g},ZR:function(){return f},It:function(){return b}});var o=s(96245),n=s(8755),a=s(32374),r=s(21251),i=s(48764).Buffer,c=s(25108);const d=e=>e===n.it.SoraNetwork.Prod?{referenceNumberEndpoint:"",lastKycStatusEndpoint:"",kycAttemptCountEndpoint:"",newAccessTokenEndpoint:""}:{referenceNumberEndpoint:"https://backend.dev.sora-card.tachi.soramitsu.co.jp/get-reference-number",lastKycStatusEndpoint:"https://backend.dev.sora-card.tachi.soramitsu.co.jp/kyc-last-status",kycAttemptCountEndpoint:"https://backend.dev.sora-card.tachi.soramitsu.co.jp/kyc-attempt-count",newAccessTokenEndpoint:"https://api-auth-test.soracard.com/RequestNewAccessToken"};async function l(){const e=localStorage.getItem("PW-refresh-token");let t=localStorage.getItem("PW-token");if(!t||!e)return y();if(p(t)){const s=await u(e);if(!s)return y();t=s}const{kycStatus:s,verificationStatus:o,rejectReason:i}=await async function(e){if(!e)return y();const t=a.ZP.state.wallet.settings.soraNetwork||n.it.SoraNetwork.Test;try{const s=await fetch(d(t).lastKycStatusEndpoint,{method:"GET",headers:{Authorization:`Bearer ${e}`}}),o=await s.json();if(!o)return y();const n=o.verification_status,a=o.kyc_status,i=o.additional_description;return Object.keys(r.$).includes(n)&&Object.keys(r.a).includes(a)?{verificationStatus:n,kycStatus:a,rejectReason:i}:y()}catch(e){return c.error("[SoraCard]: Error while getting KYC and verification statuses",e),y()}}(t);return{kycStatus:s,verificationStatus:o,rejectReason:i}}async function u(e){const t=a.ZP.state.wallet.settings.soraNetwork||n.it.SoraNetwork.Test,{apiKey:s}=b(t).authService,o=i.from(s);try{const s=await fetch(d(t).newAccessTokenEndpoint,{method:"POST",headers:{Authorization:`Basic ${o.toString("base64")}, Bearer ${e}`}});if(200===s.status&&!0===s.ok){const e=s.headers.get("accesstoken");return e&&localStorage.setItem("PW-token",e),e}}catch(e){c.error("[SoraCard]: Error while getting new JWT pair",e)}return null}const p=e=>{try{const t=(0,o.Z)(e);return!(t.exp&&Date.now()<=1e3*t.exp)}catch{return!0}},m=async()=>{try{const e=await fetch("https://backend.dev.sora-card.tachi.soramitsu.co.jp/prices/xor_euro");return(await e.json()).price}catch(e){c.error(e)}},h=async()=>{const e=localStorage.getItem("PW-refresh-token");let t=localStorage.getItem("PW-token");if(!t||!e)return null;if(p(t)){const s=await u(e);if(!s)return null;t=s}const s=a.ZP.state.wallet.settings.soraNetwork||n.it.SoraNetwork.Test;try{const e=await fetch(d(s).kycAttemptCountEndpoint,{method:"GET",headers:{Authorization:`Bearer ${t}`}}),{free_attempt:o}=await e.json();return o}catch(e){c.error("[SoraCard]: Error while getting KYC attempt",e)}},g=()=>{localStorage.removeItem("PW-token"),localStorage.removeItem("PW-refresh-token")},f=()=>{localStorage.removeItem("PW-ProcessID"),localStorage.removeItem("PW-conf"),localStorage.removeItem("PW-Country"),localStorage.removeItem("PW-PhoneNumber"),localStorage.removeItem("PW-PhoneNumberValid"),localStorage.removeItem("PW-Email"),localStorage.removeItem("PW-AuthUserID"),localStorage.removeItem("PW-DocumentSubtype"),localStorage.removeItem("PW-KycReferenceID"),localStorage.removeItem("PW-KycStart"),localStorage.removeItem("PW-otpID"),localStorage.removeItem("PW-OTPLength"),localStorage.removeItem("PW-FirstName"),localStorage.removeItem("PW-MiddleName"),localStorage.removeItem("PW-LastName"),localStorage.removeItem("PW-Check"),localStorage.removeItem("PW-WhitelabelReferenceID"),localStorage.removeItem("PW-KycReferenceID"),localStorage.removeItem("PW-documents"),localStorage.removeItem("PW-document"),localStorage.removeItem("PW-VideoID"),localStorage.removeItem("PW-Authorization"),localStorage.removeItem("PW-retry"),localStorage.removeItem("PW-AppReferenceID")},y=()=>({verificationStatus:void 0,kycStatus:void 0});function b(e){const t=(e=>{const t={sdkURL:"https://auth-test.soracard.com/WebSDK/WebSDK.js",apiKey:"6974528a-ee11-4509-b549-a8d02c1aec0d",env:n.it.SoraNetwork.Test},s={sdkURL:"",apiKey:"",env:n.it.SoraNetwork.Prod};return e===n.it.SoraNetwork.Prod?s:t})(e),s=(e=>{const t={sdkURL:"https://kyc-test.soracard.com/web/v2/webkyc.js",username:"E7A6CB83-630E-4D24-88C5-18AAF96032A4",pass:"75A55B7E-A18F-4498-9092-58C7D6BDB333",env:n.it.SoraNetwork.Test,unifiedApiKey:"6974528a-ee11-4509-b549-a8d02c1aec0d"},s={sdkURL:"",username:"",pass:"",env:n.it.SoraNetwork.Prod,unifiedApiKey:""};return e===n.it.SoraNetwork.Prod?s:t})(e);return{authService:t,kycService:s,soraProxy:d(e)}}},54643:function(e,t,s){"use strict";s.d(t,{x:function(){return n}});var o=s(60760);class n extends Error{constructor({key:e="",payload:t={}}={},...s){super(...s),(0,o.Z)(this,"translationKey",void 0),(0,o.Z)(this,"translationPayload",void 0),this.name="AppHandledError",this.translationKey=e,this.translationPayload=t}}},63471:function(e,t,s){"use strict";s.d(t,{HR:function(){return v},dL:function(){return T},qc:function(){return E},LB:function(){return R},CH:function(){return N},Gg:function(){return P},zt:function(){return x},O:function(){return B}});var o=s(15166),n=s(93286),a=s(97363),r=s(92003),i=s.n(r),c=s(87632),d=s(36930),l=s(82753),u=s(20439),p=s(6029),m=s(25108);const h=7e4,g=86e3,f=5e4,y=255e3,b=25e4,w=255e3;var v;!function(e){e.VAL="VAL",e.XOR="XOR",e.Other="OTHER"}(v||(v={}));const S=[{[l.XOR.address]:h+g,[l.KnownAssets.get(l.KnownSymbols.VAL).address]:h+g,[l.KnownAssets.get(l.KnownSymbols.PSWAP).address]:h+g,[l.KnownAssets.get(l.KnownSymbols.ETH).address]:f,[v.Other]:h+g},{[l.XOR.address]:y,[l.KnownAssets.get(l.KnownSymbols.VAL).address]:y,[l.KnownAssets.get(l.KnownSymbols.PSWAP).address]:w,[l.KnownAssets.get(l.KnownSymbols.ETH).address]:b,[v.Other]:b}],T={balance:[{constant:!0,inputs:[{internalType:"address",name:"who",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[],name:"decimals",outputs:[{name:"",type:"uint8"}],type:"function"}],allowance:[{constant:!0,inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"}]};let A=null,k=null;var C,E,R,N,P,x;!function(e){e.Ethereum="ethereum",e.Energy="energy"}(C||(C={})),function(e){e.Mainnet="main",e.Ropsten="ropsten",e.Kovan="kovan",e.Rinkeby="rinkeby",e.Goerli="goerli",e.Private="private",e.EWC="EWC",e.Sepolia="sepolia"}(E||(E={})),function(e){e.Ethereum="ethereum",e.Other="other"}(R||(R={})),function(e){e.Internal="internal",e.Other="other"}(N||(N={})),function(e){e.Bridge="BRIDGE",e.ERC20="ERC20"}(P||(P={})),function(e){e[e.Metamask=0]="Metamask",e[e.WalletConnect=1]="WalletConnect"}(x||(x={}));const B={"0x1":E.Mainnet,"0x3":E.Ropsten,"0x2a":E.Kovan,"0x4":E.Rinkeby,"0x5":E.Goerli,"0x12047":E.Private,"0xaa36a7":E.Sepolia};async function I(){const e=await F();await e.send("eth_requestAccounts",[]);return e.getSigner().getAddress()}function D(e,t){return e.toLowerCase()===t.toLowerCase()}async function F(){if(A||(A=await i()({timeout:0})),!A)throw new Error("No ethereum provider instance!");return k||(k=new o.Q(A,"any")),k}function _(e,t){return d.FPNumber.fromCodecValue(e).mul(new d.FPNumber(t)).toCodecString()}t.ZP={onConnect:async function(e){return e.provider===x.Metamask?async function(){if(A=await i()({timeout:0}),!A)throw new Error("provider.messages.installExtension");return I()}():async function(e="https://cloudflare-eth.com"){return A=new a.Z({rpc:{1:e}}),await A.enable(),I()}(e.url)},getAccount:I,checkAccountIsConnected:async function(e){if(!e)return!1;const t=await I();return!!t&&D(t,e)},storeEvmUserAddress:function(e){p.Z.set("evmAddress",e)},getEvmUserAddress:function(){return p.Z.get("evmAddress")||""},fetchEvmNetworkType:async function(){const e=await F(),t=await e.getNetwork(),s=n.$P(t.chainId);return B[s]},getEthersInstance:F,removeEvmUserAddress:function(){p.Z.remove("evmAddress")},watchEthereum:async function(e){await F();const t=window.ethereum;return t&&(t.on("accountsChanged",e.onAccountChange),t.on("chainChanged",e.onNetworkChange),t.on("disconnect",e.onDisconnect)),function(){t&&(t.removeListener("accountsChanged",e.onAccountChange),t.removeListener("chainChanged",e.onNetworkChange),t.removeListener("disconnect",e.onDisconnect))}},readSmartContract:async function(e,t){try{const{data:s}=await u.ZP.get(`/abi/${e}/${t}`);return s}catch(e){m.error(e)}},accountAddressToHex:async function(e){return n.Dv(Array.from((0,c.m)(e).values()))},addressesAreEqual:D,fetchEvmNetworkFee:async function(e,t){try{const s=await F(),o=(await s.getGasPrice()).toNumber(),n=S[+t],a=n[e in n?e:v.Other];return _(o,a)}catch(e){throw m.error(e),e}},calcEvmFee:_,getEvmTransaction:async function(e){const t=await F();return await t.getTransaction(e)},getEvmTransactionReceipt:async function(e){const t=await F();return await t.getTransactionReceipt(e)},getBlock:async function(e){const t=await F();return await t.getBlock(e)},addToken:async function(e,t,s,o){const n=window.ethereum;try{await n.request({method:"wallet_watchAsset",params:{type:"ERC20",options:{address:e,symbol:t,decimals:s,image:o}}})}catch(e){m.error(e)}}}},85530:function(e,t,s){"use strict";s.d(t,{vQ:function(){return m},Tg:function(){return h},AN:function(){return g},uc:function(){return f},oI:function(){return y},MN:function(){return w},Vl:function(){return v},LG:function(){return S},lV:function(){return T},Tu:function(){return A},gw:function(){return k},yA:function(){return C},rh:function(){return E},SL:function(){return R},U8:function(){return N},_1:function(){return P},RA:function(){return x},ue:function(){return B},lk:function(){return I},y_:function(){return D},UK:function(){return F},BV:function(){return _},mY:function(){return L},_Q:function(){return O},kF:function(){return M},Gc:function(){return Z}});var o=s(23279),n=s.n(o),a=s(8755),r=s(36930),i=s(82753),c=s(80710),d=s(66926),l=s(16546),u=s(6029),p=s(25108);const m=async e=>{try{return navigator.clipboard.writeText(e)}catch(e){p.error("Could not copy text: ",e)}},h=(e,t=e.length/2)=>`${e.slice(0,t/2)}...${e.slice(-t/2)}`,g=e=>!!e&&e.address===i.XOR.address,f=e=>{const t=e.replace(/^0x/,"");return 0===parseInt(t,16)},y=(e,t,s,o,n,a=!1,i=!1)=>{if(!t||!e||!n||C(E(t,{parseAsLiquidity:a})))return!1;const c=new r.FPNumber(s,t.decimals),d=b(t,o,!1,a);return!r.FPNumber.eq(d,c)&&!S(n,o,i)},b=(e,t,s=!1,o=!1,n=!1)=>{const a=E(e,{internal:!s,parseAsLiquidity:o,isBondedBalance:n}),i=e[s?"externalDecimals":"decimals"];if(C(a))return r.FPNumber.ZERO;let c=r.FPNumber.fromCodecValue(a,i);if(!C(t)&&(!s&&g(e)||s&&f(e.externalAddress))&&!n){const e=r.FPNumber.fromCodecValue(t);c=c.sub(e)}return r.FPNumber.lt(c,r.FPNumber.ZERO)?r.FPNumber.ZERO:c},w=(e,t,s=!1,o=!1)=>b(e,t,s,!1,o).toString(),v=(e,t,s,o=!1,n=!1)=>{const a=new r.FPNumber(t,e.decimals),i=b(e,s,o,!1,n);return r.FPNumber.lt(i,a)},S=(e,t,s=!1)=>{if(!e)return!0;if(C(t))return!1;const o=e.decimals,n=E(e),a=r.FPNumber.fromCodecValue(n,o),i=r.FPNumber.fromCodecValue(t,o);return r.FPNumber.lt(a,i)&&!s},T=(e,t)=>{if(!t)return!1;const s=r.FPNumber.fromCodecValue(e),o=r.FPNumber.fromCodecValue(t);return r.FPNumber.lt(s,o)},A=()=>u.Z.get("address");async function k(e=50){await new Promise((t=>setTimeout(t,e)))}const C=e=>!Number.isFinite(+e)||0==+e,E=(e,{internal:t=!0,parseAsLiquidity:s=!1,isBondedBalance:o=!1}={})=>e?t?s?e?.balance:o?e?.balance?.bonded:e?.balance?.transferable:e?.externalBalance:l.m8,R=(e,{internal:t=!0,parseAsLiquidity:s=!1,formattedZero:o="",showZeroBalance:n=!0,isBondedBalance:a=!1}={})=>{if(!e)return o;const i=E(e,{internal:t,parseAsLiquidity:s,isBondedBalance:a});if(!i||!n&&C(i))return o;const c=((e,{internal:t=!0}={})=>{if(e)return t?e.decimals:e.externalDecimals})(e,{internal:t});return r.FPNumber.fromCodecValue(i,c).toLocaleString()},N=(e,t)=>{if(Array.isArray(t)&&e?.address)return t.find((t=>t.address===e.address))},P=(e,t=500,s={leading:!0})=>n()(e,t,s),x=e=>{"0"!==Number(1e4).toLocaleString(e).substring(2,3)&&(r.FPNumber.DELIMITERS_CONFIG.thousand=Number(12345).toLocaleString(e).substring(2,3)),r.FPNumber.DELIMITERS_CONFIG.decimal=Number(1.2).toLocaleString(e).substring(1,2)},B=e=>{const t=(e??c.ZP.currentRoute)?.name;t&&d.ZP.te(`pageTitle.${t}`)?document.title=`${d.ZP.t(`pageTitle.${t}`)} - ${l.l2.name}`:document.title=l.l2.title},I=async e=>{try{await document.fonts.load(`1em ${e}`)}catch(e){p.error(e)}},D=e=>getComputedStyle(document.documentElement).getPropertyValue(e).trim(),F=e=>Object.entries(e).map((([e,t])=>`${e}=${encodeURIComponent(t)}`)).join("&"),_=async e=>a.hi.accountPair?e?.():(await k(),await _(e)),L=(e,t="Sora",s=10)=>{const o=document.createElement("canvas").getContext("2d");if(!o)return 0;o.font=`${s}px ${t}`;return Math.ceil(o.measureText(e).width)},O=(e,t)=>t.isZero()?r.FPNumber.gt(e,r.FPNumber.ZERO)?r.FPNumber.HUNDRED:r.FPNumber.ZERO:e.sub(t).div(t).mul(r.FPNumber.HUNDRED),M=(e,t=2)=>{const s=e.toNumber(),o=e=>new r.FPNumber(e).toLocaleString();if(Math.trunc(s/1e9)>0){return{amount:o((s/1e9).toFixed(t)),suffix:"B"}}if(Math.trunc(s/1e6)>0){return{amount:o((s/1e6).toFixed(t)),suffix:"M"}}if(Math.trunc(s/1e3)>0){return{amount:o((s/1e3).toFixed(t)),suffix:"K"}}return{amount:o(s.toFixed(t)),suffix:""}},Z=(e,t=!1)=>`${new r.FPNumber(e.toFixed(2)).toLocaleString()}${t?"%":""}`},82344:function(e,t,s){"use strict";s.d(t,{D:function(){return o},u:function(){return c}});var o,n=s(60760),a=s(20439),r=s(8755),i=s(85530);!function(e){e.Completed="completed",e.Failed="failed"}(o||(o={}));class c{constructor(){(0,n.Z)(this,"publicKey",""),(0,n.Z)(this,"soraNetwork","")}static getWidgetBaseUrl(e){return e===r.it.SoraNetwork.Prod?"https://buy.moonpay.com":"https://buy-staging.moonpay.com"}get requiredParams(){return{apiKey:this.publicKey}}createWidgetUrl(e,t){const s=t||c.getWidgetBaseUrl(this.soraNetwork),o={...this.requiredParams,...e};return`${s}?${(0,i.UK)(o)}`}async getTransactionsByExtId(e){try{const t=`${c.apiUrl}/v1/transactions/ext/${e}`;return await this.apiRequest(t)}catch(e){return[]}}async getCurrencies(){try{const e=`${c.apiUrl}/v3/currencies`;return await this.apiRequest(e)}catch(e){return[]}}async apiRequest(e,t={}){const s={params:{...this.requiredParams,...t}},{data:o}=await a.ZP.get(e,s);return o}}(0,n.Z)(c,"apiUrl","https://api.moonpay.com")},6029:function(e,t,s){"use strict";s.d(t,{d:function(){return o.d5}});var o=s(8755);t.Z=o.tO},37068:function(e,t,s){"use strict";s.r(t),s.d(t,{default:function(){return b}});var o=s(60760),n=s(70655),a=s(53545),r=s(8755),i=s(36930),c=s(48243),d=s(32806),l=s(74238),u=s(84281),p=s(64645),m=s(74614),h=s(80710),g=s(16546);let f=class extends((0,a.Wr)(d.Z)){constructor(...e){super(...e),(0,o.Z)(this,"soraNetwork",void 0),(0,o.Z)(this,"blockNumber",void 0),(0,o.Z)(this,"isNodeConnecting",void 0),(0,o.Z)(this,"isNodeConnected",void 0),(0,o.Z)(this,"node",void 0),(0,o.Z)(this,"setSelectNodeDialogVisibility",void 0),(0,o.Z)(this,"setEnabled",void 0),(0,o.Z)(this,"setDisabled",void 0),(0,o.Z)(this,"setSpeedMb",void 0),(0,o.Z)(this,"isInternetConnectionEnabled",void 0),(0,o.Z)(this,"isInternetConnectionStable",void 0),(0,o.Z)(this,"internetConnectionSpeedMb",void 0),(0,o.Z)(this,"subqueryStatus",void 0),(0,o.Z)(this,"showStatisticsDialog",!1)}get blockExplorerLink(){const e=(0,r.$_)(this.soraNetwork);return e.length?e[0].value:null}get blockNumberFormatted(){return new i.FPNumber(this.blockNumber).toLocaleString()}get nodeConnectionStatusKey(){return this.isNodeConnected?"connected":this.isNodeConnecting?"loading":"disconnected"}get nodeConnectionClass(){return this.isNodeConnected?c.qb.SUCCESS:this.isNodeConnecting?c.qb.DEFAULT:c.qb.ERROR}get nodeConnectionText(){return this.t(`footer.node.title.${this.nodeConnectionStatusKey}`)}get formattedNodeLocation(){return this.node?.location?(0,p.T)(this.node.location):null}openNodeSelectionDialog(){this.setSelectNodeDialogVisibility(!0)}get internetStatusKey(){return this.isInternetConnectionEnabled?this.isInternetConnectionStable?"stable":"unstable":"disabled"}get internetConnectionClass(){return this.isInternetConnectionEnabled?this.isInternetConnectionStable?c.qb.SUCCESS:c.qb.WARNING:c.qb.ERROR}get internetConnectionText(){return this.t(`footer.internet.title.${this.internetStatusKey}`)}get internetConnectionDesc(){return this.t(`footer.internet.desc.${this.internetStatusKey}`)}get internetConnectionSpeedMbText(){if(!this.internetConnectionSpeedMb)return"";return`${10===this.internetConnectionSpeedMb?"≥ ":""}${this.internetConnectionSpeedMb} ${this.TranslationConsts.mbps}`}refreshPage(){window.location.reload()}get statisticsConnectionClass(){switch(this.subqueryStatus){case r.uQ.ConnectionStatus.Unavailable:return c.qb.ERROR;case r.uQ.ConnectionStatus.Loading:return c.qb.DEFAULT;case r.uQ.ConnectionStatus.Available:return c.qb.SUCCESS;default:return c.qb.DEFAULT}}get statisticsStatusKey(){switch(this.subqueryStatus){case r.uQ.ConnectionStatus.Unavailable:return"unavailable";case r.uQ.ConnectionStatus.Loading:return"loading";case r.uQ.ConnectionStatus.Available:return"available";default:return"loading"}}get statisticsConnectionText(){return this.t(`footer.statistics.title.${this.statisticsStatusKey}`)}get statisticsConnectionDesc(){return this.t(`footer.statistics.desc.${this.statisticsStatusKey}`)}openStatisticsDialog(){this.showStatisticsDialog=!0}created(){window.addEventListener("offline",this.setDisabled),window.addEventListener("online",this.setEnabled),navigator?.connection?.addEventListener("change",this.setSpeedMb)}beforeDestroy(){window.removeEventListener("offline",this.setDisabled),window.removeEventListener("online",this.setEnabled),navigator?.connection?.removeEventListener("change",this.setSpeedMb)}};(0,n.__decorate)([m.SB.wallet.settings.soraNetwork],f.prototype,"soraNetwork",void 0),(0,n.__decorate)([m.SB.settings.blockNumber],f.prototype,"blockNumber",void 0),(0,n.__decorate)([m.Yn.settings.nodeIsConnecting],f.prototype,"isNodeConnecting",void 0),(0,n.__decorate)([m.Yn.settings.nodeIsConnected],f.prototype,"isNodeConnected",void 0),(0,n.__decorate)([m.SB.settings.node],f.prototype,"node",void 0),(0,n.__decorate)([m.QF.settings.setSelectNodeDialogVisibility],f.prototype,"setSelectNodeDialogVisibility",void 0),(0,n.__decorate)([m.QF.settings.setInternetConnectionEnabled],f.prototype,"setEnabled",void 0),(0,n.__decorate)([m.QF.settings.setInternetConnectionDisabled],f.prototype,"setDisabled",void 0),(0,n.__decorate)([m.QF.settings.setInternetConnectionSpeed],f.prototype,"setSpeedMb",void 0),(0,n.__decorate)([m.Yn.settings.isInternetConnectionEnabled],f.prototype,"isInternetConnectionEnabled",void 0),(0,n.__decorate)([m.Yn.settings.isInternetConnectionStable],f.prototype,"isInternetConnectionStable",void 0),(0,n.__decorate)([m.Yn.settings.internetConnectionSpeedMb],f.prototype,"internetConnectionSpeedMb",void 0),(0,n.__decorate)([m.SB.wallet.settings.subqueryStatus],f.prototype,"subqueryStatus",void 0),f=(0,n.__decorate)([(0,a.wA)({components:{FooterPopper:l.default,NoInternetDialog:u.default,StatisticsDialog:(0,h.kF)(g.z8.StatisticsDialog),SelectNodeDialog:(0,h.kF)(g.z8.SelectNodeDialog)}})],f);var y=f,b=(0,s(1001).Z)(y,(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("div",{staticClass:"app-status s-flex"},[e.blockNumber?s("a",{staticClass:"block-number s-flex",attrs:{href:e.blockExplorerLink,target:"_blank",rel:"nofollow noopener"}},[s("span",{staticClass:"block-number-icon"}),s("span",[e._v(e._s(e.blockNumberFormatted))])]):e._e(),s("footer-popper",{attrs:{icon:"globe-16","panel-class":"node","panel-text":e.nodeConnectionText,status:e.nodeConnectionClass,"action-text":e.t("selectNodeText")},on:{action:e.openNodeSelectionDialog},scopedSlots:e._u([{key:"label",fn:function(){return[s("span",[e._v(e._s(e.t("selectNodeConnected")))]),s("span",[e._v(e._s(e.node.chain))])]},proxy:!0}])},[[s("span",[e._v(e._s(e.node.address))]),e.formattedNodeLocation?s("span",[e._v(" "+e._s(e.formattedNodeLocation.name)+" "),s("span",{staticClass:"flag-emodji"},[e._v(e._s(e.formattedNodeLocation.flag))])]):e._e()]],2),s("footer-popper",{attrs:{icon:"wi-fi-16","panel-class":"internet","panel-text":e.internetConnectionText,status:e.internetConnectionClass,"action-text":"refresh adar"},on:{action:e.refreshPage},scopedSlots:e._u([{key:"label",fn:function(){return[s("span",[e._v(e._s(e.t("footer.internet.label")))]),s("span",[e._v(e._s(e.internetConnectionSpeedMbText))])]},proxy:!0}])},[[s("span",[e._v(e._s(e.internetConnectionDesc))])]],2),s("select-node-dialog"),s("no-internet-dialog"),s("statistics-dialog",{attrs:{visible:e.showStatisticsDialog},on:{"update:visible":function(t){e.showStatisticsDialog=t}}})],1)}),[],!1,null,"95be8614",null).exports},74238:function(e,t,s){"use strict";s.r(t),s.d(t,{default:function(){return p}});var o=s(60760),n=s(70655),a=s(53545),r=s(48243),i=s(85530);const c="app-status__tooltip";let d=class extends a.w3{constructor(...e){super(...e),(0,o.Z)(this,"status",void 0),(0,o.Z)(this,"icon",void 0),(0,o.Z)(this,"panelClass",void 0),(0,o.Z)(this,"actionText",void 0),(0,o.Z)(this,"panelText",void 0),(0,o.Z)(this,"popover",void 0)}async handleShow(){await(0,i.gw)(100);const e=this.popover?.popperElm?.style?.getPropertyValue("left");e&&e.includes("-")&&this.popover?.popperElm.style.setProperty("left","0")}get computedPopperClass(){return[c,this.status].filter((e=>!!e)).join(" ")}get computedClass(){return[this.panelClass,this.status].filter((e=>!!e)).join(" ")}get loading(){return this.status===r.qb.DEFAULT}get tabindex(){return this.loading?-1:0}handleActionClick(){this.$emit("action")}handleEnterClick(){this.popover?.doToggle()}handleBlur(e){const t=this.popover.popperElm,s=e.relatedTarget;t&&s&&(t===s||t.contains(s)||this.popover?.doClose())}};(0,n.__decorate)([(0,a.fI)({required:!0,type:String})],d.prototype,"status",void 0),(0,n.__decorate)([(0,a.fI)({required:!0,type:String})],d.prototype,"icon",void 0),(0,n.__decorate)([(0,a.fI)({type:String,default:""})],d.prototype,"panelClass",void 0),(0,n.__decorate)([(0,a.fI)({type:String,default:""})],d.prototype,"actionText",void 0),(0,n.__decorate)([(0,a.fI)({required:!0,type:String})],d.prototype,"panelText",void 0),(0,n.__decorate)([(0,a.Rl)("popover")],d.prototype,"popover",void 0),d=(0,n.__decorate)([a.wA],d);var l=d,u=(0,s(1001).Z)(l,(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("el-popover",{ref:"popover",attrs:{placement:"top",trigger:"click","popper-class":e.computedPopperClass,disabled:e.loading,tabindex:e.tabindex},on:{show:e.handleShow}},[s("div",{staticClass:"app-status__item s-flex",class:e.computedClass,attrs:{slot:"reference"},on:{keypress:function(t){return!t.type.indexOf("key")&&e._k(t.keyCode,"enter",13,t.key,"Enter")?null:e.handleEnterClick.apply(null,arguments)},blur:e.handleBlur},slot:"reference"},[e.loading?s("span",{staticClass:"app-status__loading"}):s("s-icon",{attrs:{name:e.icon,size:"16"}}),s("span",{staticClass:"app-status__text"},[e._v(e._s(e.panelText))])],1),s("div",{staticClass:"item s-flex"},[s("div",{staticClass:"item__title s-flex"},[s("div",{staticClass:"item__label s-flex"},[e._t("label")],2),e.actionText?s("s-button",{staticClass:"item__action",attrs:{size:"small",type:"secondary"},on:{click:e.handleActionClick}},[e._v(" "+e._s(e.actionText)+" ")]):e._e()],1),s("div",{staticClass:"item__desc s-flex"},[e._t("default")],2)])])}),[],!1,null,"2bdc5357",null),p=u.exports},84281:function(e,t,s){"use strict";s.r(t),s.d(t,{default:function(){return l}});var o=s(60760),n=s(70655),a=s(53545),r=s(32806),i=s(74614);let c=class extends((0,a.Wr)(r.Z)){constructor(...e){super(...e),(0,o.Z)(this,"isInternetConnectionEnabled",void 0)}refreshPage(){window.location.reload()}};(0,n.__decorate)([i.Yn.settings.isInternetConnectionEnabled],c.prototype,"isInternetConnectionEnabled",void 0),c=(0,n.__decorate)([a.wA],c);var d=c,l=(0,s(1001).Z)(d,(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("s-dialog",{staticClass:"no-internet",attrs:{width:"466px",visible:!e.isInternetConnectionEnabled,"show-close":!1,"close-on-click-modal":!1,"close-on-esc":!1}},[s("div",{staticClass:"no-internet__content s-flex"},[s("div",{staticClass:"no-internet__icon s-flex"},[s("s-icon",{attrs:{name:"wi-fi-16",size:"32"}})],1),s("span",{staticClass:"no-internet__title"},[e._v(e._s(e.t("footer.internet.dialogTitle")))]),s("span",{staticClass:"no-internet__desc"},[e._v(e._s(e.t("footer.internet.dialogDesc")))])]),s("s-button",{staticClass:"no-internet__action",attrs:{slot:"footer"},on:{click:e.refreshPage},slot:"footer"},[e._v(e._s(e.t("footer.internet.action")))])],1)}),[],!1,null,"0f1dd8bb",null).exports},59889:function(e,t,s){"use strict";s.r(t),s.d(t,{default:function(){return p}});var o=s(60760),n=s(70655),a=s(53545),r=s(8755),i=s(32806),c=s(85530),d=s(74614);let l=class extends((0,a.Wr)(i.Z)){constructor(...e){super(...e),(0,o.Z)(this,"account",void 0),(0,o.Z)(this,"isLoggedIn",void 0)}get accountTooltip(){return this.isLoggedIn?this.t("connectedAccount"):this.t("connectWalletTextTooltip")}get accountInfo(){return this.isLoggedIn?this.account.name||(0,c.Tg)(this.account.address,8):this.t("connectWalletText")}};(0,n.__decorate)([d.Yn.wallet.account.account],l.prototype,"account",void 0),(0,n.__decorate)([d.Yn.wallet.account.isLoggedIn],l.prototype,"isLoggedIn",void 0),l=(0,n.__decorate)([(0,a.wA)({components:{WalletAvatar:r.wx.WalletAvatar}})],l);var u=l,p=(0,s(1001).Z)(u,(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("s-button",e._g(e._b({class:["account-control",{"s-pressed":e.isLoggedIn}],attrs:{type:"tertiary",size:"medium",tooltip:e.accountTooltip}},"s-button",e.$attrs,!1),e.$listeners),[s("div",{staticClass:"account-control-icon"},[e.isLoggedIn?s("WalletAvatar",{attrs:{address:e.account.address}}):s("s-icon",{attrs:{name:"finance-wallet-24",size:"28"}})],1),s("div",{class:["account-control-title",{name:e.isLoggedIn}]},[e._v(e._s(e.accountInfo))])])}),[],!1,null,null,null).exports},30273:function(e,t,s){"use strict";s.r(t),s.d(t,{default:function(){return v}});var o=s(60760),n=s(70655),a=s(53545),r=s(82753),i=s(8755),c=s(72305),d=s(10909),l=s(59889),u=s(49713),p=s(69051),m=s(80710),h=s(16546),g=s(50592),f=s(67748),y=s(74614);let b=class extends((0,a.Wr)(d.Z)){constructor(...e){super(...e),(0,o.Z)(this,"PageNames",h.sn),(0,o.Z)(this,"loading",void 0),(0,o.Z)(this,"libraryTheme",void 0),(0,o.Z)(this,"isLoggedIn",void 0),(0,o.Z)(this,"moonpayEnabled",void 0),(0,o.Z)(this,"setMoonpayVisibility",void 0),(0,o.Z)(this,"goTo",m.WF)}get nodeLogo(){return{size:i.it.LogoSize.MEDIUM,tokenSymbol:r.XOR.symbol}}get themeIsDark(){return this.libraryTheme===c.Z.DARK}get showRouteAssetsNavigation(){return this.$route.path.includes("route-assets")}get areMoonpayButtonsVisible(){return this.moonpayEnabled&&this.isLoggedIn}async openMoonpayDialog(){if(!this.isSoraAccountConnected)return this.connectInternalWallet();await this.checkConnectionToExternalAccount((async()=>{this.setMoonpayVisibility(!0)}))}toggleMenu(){this.$emit("toggle-menu")}};(0,n.__decorate)([(0,a.fI)({type:Boolean,default:!1})],b.prototype,"loading",void 0),(0,n.__decorate)([y.Yn.libraryTheme],b.prototype,"libraryTheme",void 0),(0,n.__decorate)([y.Yn.wallet.account.isLoggedIn],b.prototype,"isLoggedIn",void 0),(0,n.__decorate)([y.Yn.settings.moonpayEnabled],b.prototype,"moonpayEnabled",void 0),(0,n.__decorate)([y.QF.moonpay.setDialogVisibility],b.prototype,"setMoonpayVisibility",void 0),b=(0,n.__decorate)([(0,a.wA)({components:{AppAccountButton:l.default,AppHeaderMenu:u.default,AppLogoButton:p.default,SelectLanguageDialog:(0,m.kF)(h.z8.SelectLanguageDialog),Moonpay:(0,m.kF)(h.z8.Moonpay),MoonpayNotification:(0,m.kF)(h.z8.MoonpayNotification),MoonpayHistoryButton:(0,m.kF)(h.z8.MoonpayHistoryButton),MoonpayConfirmation:(0,m.kF)(h.z8.MoonpayConfirmation),RouteAssetsNavigation:(0,f.y)(g.EC.RouteAssetsNavigation),TokenLogo:i.wx.TokenLogo,WalletAvatar:i.wx.WalletAvatar}})],b);var w=b,v=(0,s(1001).Z)(w,(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("header",{staticClass:"header"},[s("s-button",{staticClass:"app-menu-button",attrs:{type:"action",primary:"",icon:"basic-more-horizontal-24"},on:{click:e.toggleMenu}}),s("app-logo-button",{staticClass:"app-logo--header",attrs:{responsive:"",theme:e.libraryTheme},on:{click:function(t){return e.goTo(e.PageNames.Swap)}}}),e.showRouteAssetsNavigation?s("route-assets-navigation",{staticClass:"app-controls s-flex"}):e._e(),s("div",{staticClass:"app-controls app-controls--settings-panel s-flex",class:{"app-controls--settings-panel--dark":e.themeIsDark}},[s("app-account-button",{attrs:{disabled:e.loading},on:{click:function(t){return e.goTo(e.PageNames.Wallet)}}}),s("app-header-menu")],1),s("select-language-dialog"),e.moonpayEnabled?[s("moonpay"),s("moonpay-notification"),s("moonpay-confirmation")]:e._e()],2)}),[],!1,null,"6acabdf2",null).exports},49713:function(e,t,s){"use strict";s.r(t),s.d(t,{default:function(){return g}});var o,n=s(60760),a=s(70655),r=s(53545),i=s(72305),c=s(59832),d=s(44539),l=s.n(d),u=s(32806),p=s(74614);!function(e){e.HideBalances="hide-balances",e.Theme="theme",e.Language="language",e.Notification="notification",e.Disclaimer="disclaimer"}(o||(o={}));let m=class extends((0,r.Wr)(u.Z)){constructor(...e){super(...e),(0,n.Z)(this,"iconSize",28),(0,n.Z)(this,"HeaderMenuType",o),(0,n.Z)(this,"disclaimerVisibility",void 0),(0,n.Z)(this,"userDisclaimerApprove",void 0),(0,n.Z)(this,"shouldBalanceBeHidden",void 0),(0,n.Z)(this,"isBrowserNotificationApiAvailable",void 0),(0,n.Z)(this,"libraryTheme",void 0),(0,n.Z)(this,"notificationActivated",void 0),(0,n.Z)(this,"toggleHideBalance",void 0),(0,n.Z)(this,"setBrowserNotifsPopupEnabled",void 0),(0,n.Z)(this,"setBrowserNotifsPopupBlocked",void 0),(0,n.Z)(this,"setLanguageDialogVisibility",void 0),(0,n.Z)(this,"toggleDisclaimerDialogVisibility",void 0),(0,n.Z)(this,"isLargeDesktop",window.innerWidth>=1440)}updateLargeDesktopFlag(e){this.isLargeDesktop=e.matches}get mediaQueryList(){return window.matchMedia("(min-width: 1440px)")}get isNotificationOptionShown(){return!this.notificationActivated&&this.isBrowserNotificationApiAvailable}getThemeIcon(e=!1){return e?this.libraryTheme===i.Z.LIGHT?"various-moon-24":"various-brightness-low-24":this.libraryTheme===i.Z.LIGHT?"various-brightness-low-24":"various-moon-24"}get themeTitle(){return this.libraryTheme===i.Z.LIGHT?i.Z.DARK:i.Z.LIGHT}get themeText(){const e=this.t(this.themeTitle);return this.t("headerMenu.switchTheme",{theme:e})}get disclaimerText(){return this.disclaimerVisibility?this.t("headerMenu.hideDisclaimer"):this.t("headerMenu.showDisclaimer")}getHideBalancesIcon(e=!1){return e?this.shouldBalanceBeHidden?"basic-eye-no-24":"basic-filterlist-24":this.shouldBalanceBeHidden?"basic-filterlist-24":"basic-eye-no-24"}get hideBalancesText(){return this.t("headerMenu."+(this.shouldBalanceBeHidden?"showBalances":"hideBalances"))}getHeaderMenuItems(e=!1){return[{value:o.HideBalances,icon:this.getHideBalancesIcon(e),text:this.hideBalancesText},{value:o.Theme,icon:this.getThemeIcon(e),text:this.themeText},{value:o.Language,icon:"basic-globe-24",text:this.t("headerMenu.switchLanguage")}]}get headerMenuItems(){return this.getHeaderMenuItems()}get dropdownHeaderMenuItems(){return this.getHeaderMenuItems(!0)}get discalimerDisabled(){return this.disclaimerVisibility&&!this.userDisclaimerApprove}mounted(){this.mediaQueryList.addEventListener("change",this.updateLargeDesktopFlag)}beforeDestroy(){this.mediaQueryList.removeEventListener("change",this.updateLargeDesktopFlag)}openNotificationDialog(){this.isBrowserNotificationApiAvailable&&("denied"===Notification.permission?this.setBrowserNotifsPopupBlocked(!0):"default"===Notification.permission&&this.setBrowserNotifsPopupEnabled(!0))}handleClickHeaderMenu(){const e=this.$refs.headerMenu.dropdown;e.visible?e.hide():e.show()}handleSelectHeaderMenu(e){switch(e){case o.HideBalances:this.toggleHideBalance();break;case o.Theme:(0,c.tj)();break;case o.Language:this.setLanguageDialogVisibility(!0);break;case o.Disclaimer:if(this.discalimerDisabled)return;this.toggleDisclaimerDialogVisibility()}}};(0,a.__decorate)([p.SB.settings.disclaimerVisibility],m.prototype,"disclaimerVisibility",void 0),(0,a.__decorate)([p.SB.settings.userDisclaimerApprove],m.prototype,"userDisclaimerApprove",void 0),(0,a.__decorate)([p.SB.wallet.settings.shouldBalanceBeHidden],m.prototype,"shouldBalanceBeHidden",void 0),(0,a.__decorate)([p.SB.settings.isBrowserNotificationApiAvailable],m.prototype,"isBrowserNotificationApiAvailable",void 0),(0,a.__decorate)([p.Yn.libraryTheme],m.prototype,"libraryTheme",void 0),(0,a.__decorate)([p.Yn.settings.notificationActivated],m.prototype,"notificationActivated",void 0),(0,a.__decorate)([p.QF.wallet.settings.toggleHideBalance],m.prototype,"toggleHideBalance",void 0),(0,a.__decorate)([p.QF.settings.setBrowserNotifsPopupEnabled],m.prototype,"setBrowserNotifsPopupEnabled",void 0),(0,a.__decorate)([p.QF.settings.setBrowserNotifsPopupBlocked],m.prototype,"setBrowserNotifsPopupBlocked",void 0),(0,a.__decorate)([p.QF.settings.setSelectLanguageDialogVisibility],m.prototype,"setLanguageDialogVisibility",void 0),(0,a.__decorate)([p.QF.settings.toggleDisclaimerDialogVisibility],m.prototype,"toggleDisclaimerDialogVisibility",void 0),m=(0,a.__decorate)([(0,r.wA)({components:{BellIcon:l()}})],m);var h=m,g=(0,s(1001).Z)(h,(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("div",{staticClass:"app-header-menu"},[e.isLargeDesktop?s("div",{staticClass:"app-header-menu_panel"},e._l(e.headerMenuItems,(function(t){var o=t.value,n=t.icon,a=t.text,r=t.disabled;return s("s-button",{key:o,staticClass:"s-pressed app-header-menu__button",attrs:{type:"action",tooltip:a,disabled:r},on:{click:function(t){return e.handleSelectHeaderMenu(o)}}},[s("s-icon",{attrs:{name:n,size:e.iconSize}})],1)})),1):s("s-button",{staticClass:"settings-control s-pressed",attrs:{type:"action",tooltip:e.t("headerMenu.settings")},on:{click:e.handleClickHeaderMenu}},[s("s-dropdown",{ref:"headerMenu",staticClass:"header-menu__button",attrs:{"popper-class":"header-menu",icon:"grid-block-align-left-24",type:"ellipsis",placement:"bottom-start"},on:{select:e.handleSelectHeaderMenu},scopedSlots:e._u([{key:"menu",fn:function(){return e._l(e.dropdownHeaderMenuItems,(function(t){var o=t.value,n=t.icon,a=t.text,r=t.disabled;return s("s-dropdown-item",{key:o,staticClass:"header-menu__item",attrs:{icon:n,value:o,disabled:r}},[e._v(" "+e._s(a)+" ")])}))},proxy:!0}],null,!1,2056575366)})],1)],1)}),[],!1,null,"21dd2ae6",null).exports},69051:function(e,t,s){"use strict";s.r(t),s.d(t,{default:function(){return l}});var o=s(60760),n=s(70655),a=s(53545),r=s(72305),i=s(18477);let c=class extends a.w3{constructor(...e){super(...e),(0,o.Z)(this,"theme",void 0),(0,o.Z)(this,"responsive",void 0)}get dark(){return this.theme===r.Z.DARK}};(0,n.__decorate)([(0,a.fI)({default:r.Z.LIGHT,type:String})],c.prototype,"theme",void 0),(0,n.__decorate)([(0,a.fI)({default:!1,type:Boolean})],c.prototype,"responsive",void 0),c=(0,n.__decorate)([(0,a.wA)({components:{AdarLogo:i.default}})],c);var d=c,l=(0,s(1001).Z)(d,(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("s-button",e._g({class:["app-logo",{responsive:e.responsive},{dark:e.dark}],attrs:{type:"link",size:"large"}},e.$listeners),[s("adar-logo",{staticClass:"app-logo__image",attrs:{theme:e.theme}})],1)}),[],!1,null,"c4ef533c",null).exports},73379:function(e,t,s){"use strict";s.r(t),s.d(t,{default:function(){return u}});var o=s(60760),n=s(70655),a=s(53545),r=s(8755),i=s(32806),c=s(16546);let d=class extends((0,a.Wr)(i.Z,r.tA.LoadingMixin)){constructor(...e){super(...e),(0,o.Z)(this,"SocialNetworkLinks",[]),(0,o.Z)(this,"app",c.l2),(0,o.Z)(this,"specVersion",null)}created(){this.withApi((()=>{this.specVersion=r.hi.system.specVersion}))}get textLinks(){return[{title:this.t("releaseNotesText"),href:c.yX.releaseNotes}]}get sortedTextLinks(){return this.textLinks.sort(((e,t)=>{const s=e.title.toUpperCase(),o=t.title.toUpperCase();return s<o?-1:s>o?1:0}))}};d=(0,n.__decorate)([a.wA],d);var l=d,u=(0,s(1001).Z)(l,(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("el-popover",{attrs:{"visible-arrow":!1,placement:"top-start","popper-class":"app-info-popper",trigger:"click"},scopedSlots:e._u([{key:"reference",fn:function(){return[e._t("default")]},proxy:!0}],null,!0)},[s("div",{staticClass:"app-info"},[s("div",e._l(e.SocialNetworkLinks,(function(t){return s("a",{key:t.title,staticClass:"app-info-link app-info-link--social",attrs:{target:"_blank",rel:"nofollow noopener",href:t.href}},[s("s-icon",{attrs:{name:t.icon,size:"20"}}),s("span",[e._v(e._s(e.t("social."+t.title)))])],1)})),0),s("s-divider"),s("div",e._l(e.sortedTextLinks,(function(t,o){return s("a",{key:o,staticClass:"app-info-link app-info-link--text",attrs:{target:"_blank",rel:"nofollow noopener",href:t.href}},[s("span",[e._v(e._s(t.title))])])})),0),s("div",{staticClass:"app-info__versions"},[s("div",[e._v(e._s(e.app.name)+" v"+e._s(e.app.version))]),e.specVersion?s("div",[e._v(e._s(e.TranslationConsts.Sora)+" v"+e._s(e.specVersion))]):e._e()])],1)])}),[],!1,null,"336704d9",null).exports},4587:function(e,t,s){"use strict";s.r(t),s.d(t,{default:function(){return y}});var o=s(60760),n=s(70655),a=s(53545),r=s(72305),i=s(32806),c=s(1985),d=s(73379),l=s(16546),u=s(74614),p=s(50592),m=s(52859);let h=class extends((0,a.Wr)(i.Z)){constructor(...e){super(...e),(0,o.Z)(this,"visible",void 0),(0,o.Z)(this,"isAboutPageOpened",void 0),(0,o.Z)(this,"onSelect",void 0),(0,o.Z)(this,"faucetUrl",void 0),(0,o.Z)(this,"pageLoading",void 0),(0,o.Z)(this,"soraCardEnabled",void 0),(0,o.Z)(this,"libraryTheme",void 0),(0,o.Z)(this,"SidebarMenuGroups",l.by),(0,o.Z)(this,"FaucetLink",l.XQ)}get mainMenuActiveColor(){return this.libraryTheme===r.Z.LIGHT?"var(--s-color-theme-accent)":"var(--s-color-theme-accent-focused)"}get sidebarMenuItems(){return this.soraCardEnabled?l.by:l.by.filter((e=>e.title!==l.sn.SoraCard))}get currentPath(){const e=this.$route.name;return l.id.includes(e)?l.sn.Pool:l.ju.includes(e)?l.sn.Bridge:l.Bq.includes(e)?l.sn.Rewards:l.CX.includes(e)?m.p.Staking:l.cj.includes(e)?l.sn.ExploreFarming:e}openSoraDownloadDialog(){this.$emit("open-download-dialog")}get isRouteAssetsPage(){return this.$route.name===p.bO.RouteAssets}preventAnchorNavigation(e){e?.preventDefault()}};(0,n.__decorate)([(0,a.fI)({default:!1,type:Boolean})],h.prototype,"visible",void 0),(0,n.__decorate)([(0,a.fI)({default:!1,type:Boolean})],h.prototype,"isAboutPageOpened",void 0),(0,n.__decorate)([(0,a.fI)({default:()=>{},type:Function})],h.prototype,"onSelect",void 0),(0,n.__decorate)([u.SB.settings.faucetUrl],h.prototype,"faucetUrl",void 0),(0,n.__decorate)([u.SB.router.loading],h.prototype,"pageLoading",void 0),(0,n.__decorate)([u.Yn.settings.soraCardEnabled],h.prototype,"soraCardEnabled",void 0),(0,n.__decorate)([u.Yn.libraryTheme],h.prototype,"libraryTheme",void 0),h=(0,n.__decorate)([(0,a.wA)({components:{AppInfoPopper:d.default,AppSidebarItemContent:c.default}})],h);var g=h,f=(0,s(1001).Z)(g,(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("s-scrollbar",{staticClass:"app-menu app-sidebar-scrollbar",class:{visible:e.visible,"app-menu__about":e.isAboutPageOpened,"app-menu__loading":e.pageLoading,"app-menu__route-assets":e.isRouteAssetsPage}},[s("aside",{staticClass:"app-sidebar"},[e._t("head"),s("div",{staticClass:"app-sidebar-menu"},[s("s-menu",{staticClass:"menu",attrs:{mode:"vertical","background-color":"transparent","box-shadow":"none","text-color":"var(--s-color-base-content-primary)","active-text-color":e.mainMenuActiveColor,"active-hover-color":"transparent","default-active":e.currentPath},on:{select:e.onSelect}},e._l(e.sidebarMenuItems,(function(t,o){return s("s-menu-item-group",{key:o},[s("s-menu-item",{directives:[{name:"button",rawName:"v-button"}],key:t.title,staticClass:"menu-item",attrs:{index:t.index||t.title,disabled:t.disabled,tabindex:"0"}},[s("app-sidebar-item-content",{attrs:{tag:"a",rel:"nofollow noopener",tabindex:"-1",href:t.href,icon:t.icon,title:e.t("mainMenu."+t.title)},nativeOn:{click:function(t){return e.preventAnchorNavigation.apply(null,arguments)}}})],1)],1)})),1),s("s-menu",{staticClass:"menu",attrs:{mode:"vertical","background-color":"transparent","box-shadow":"none","text-color":"var(--s-color-base-content-tertiary)","active-text-color":"var(--s-color-base-content-tertiary)","active-hover-color":"transparent"}},[s("app-info-popper",[s("app-sidebar-item-content",{directives:[{name:"button",rawName:"v-button"}],staticClass:"el-menu-item menu-item--small",attrs:{icon:"info-16",title:e.t("footerMenu.info"),tabindex:"0"}})],1),e.faucetUrl?s("app-sidebar-item-content",{staticClass:"el-menu-item menu-item--small",attrs:{icon:e.FaucetLink.icon,title:e.t("footerMenu."+e.FaucetLink.title),href:e.faucetUrl,tag:"a",target:"_blank",rel:"nofollow noopener"}}):e._e()],1)],1)],2)])}),[],!1,null,"48561e9c",null),y=f.exports},1985:function(e,t,s){"use strict";s.r(t),s.d(t,{default:function(){return u}});var o=s(60760),n=s(70655),a=s(53545),r=s(32806),i=s(45605),c=s.n(i);let d=class extends((0,a.Wr)(r.Z)){constructor(...e){super(...e),(0,o.Z)(this,"icon",void 0),(0,o.Z)(this,"title",void 0),(0,o.Z)(this,"tag",void 0),(0,o.Z)(this,"tabindex",void 0)}get classes(){const e="sidebar-item-content",t=[e];return"a"===this.tag&&t.push(`${e}--link`),t}};(0,n.__decorate)([(0,a.fI)({default:"",type:String})],d.prototype,"icon",void 0),(0,n.__decorate)([(0,a.fI)({default:"",type:String})],d.prototype,"title",void 0),(0,n.__decorate)([(0,a.fI)({default:"div",type:String})],d.prototype,"tag",void 0),(0,n.__decorate)([(0,a.fI)()],d.prototype,"tabindex",void 0),d=(0,n.__decorate)([(0,a.wA)({components:{SideMenuCard:c()}})],d);var l=d,u=(0,s(1001).Z)(l,(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s(e.tag,{tag:"component",class:e.classes,attrs:{tabindex:e.tabindex}},["sora-card"===e.icon?s("div",{staticClass:"icon-container"},[s("side-menu-card",{staticClass:"sora-card-sidebar-icon"})],1):e.icon?s("div",{staticClass:"icon-container"},[s("s-icon",{attrs:{name:e.icon,size:"28"}})],1):e._e(),s("span",[e._v(e._s(e.title))])])}),[],!1,null,"4cec47d6",null).exports},18477:function(e,t,s){"use strict";s.r(t),s.d(t,{default:function(){return d}});var o=s(60760),n=s(70655),a=s(53545),r=s(72305);let i=class extends a.w3{constructor(...e){super(...e),(0,o.Z)(this,"theme",void 0)}get textColor(){return this.theme!==r.Z.DARK?"var(--s-color-theme-accent)":"var(--s-color-theme-accent--dark)"}get logoColor(){return this.theme!==r.Z.DARK?"#332222":"#EEEEE0"}};(0,n.__decorate)([(0,a.fI)({default:r.Z.LIGHT,type:String})],i.prototype,"theme",void 0),i=(0,n.__decorate)([a.wA],i);var c=i,d=(0,s(1001).Z)(c,(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("svg",{attrs:{xmlns:"http://www.w3.org/2000/svg",width:"172",height:"46",viewBox:"0 0 172 46",fill:"none"}},[s("path",{attrs:{d:"M60.168 9.49158L48.3619 36.3253L54.4485 36.4421L57.08 30.6458H69.0562L71.6878 36.4421L77.7744 36.3253L65.9413 9.49158H60.168ZM58.9597 25.7122L63.0681 16.4471L67.1766 25.7122H58.9686H58.9597ZM164.795 26.1975C168.804 24.9843 170.738 22.3423 170.738 18.3163C170.738 13.2479 167.265 9.53651 162.387 9.53651H150.312L145.076 14.7936V36.4421H150.948V26.2874H158.189L164.83 36.4421H172L164.803 26.1885L164.795 26.1975ZM161.169 21.183H150.903V14.7846H161.169C165.296 14.7846 165.394 21.183 161.169 21.183ZM99.3638 9.5455H81.7127V31.1401L86.7879 36.4511H99.3459C104.081 36.4511 107.509 32.9374 107.697 28.0847V17.876C107.527 13.0502 104.099 9.53651 99.3638 9.53651V9.5455ZM101.297 28.0847C101.252 29.6573 100.187 31.212 98.1555 31.212H87.8441V14.7757H98.1555C100.187 14.7757 101.243 16.3303 101.297 17.903V28.0847ZM123.513 9.49158L111.707 36.3253L117.794 36.4421L120.425 30.6458H132.401L135.033 36.4421L141.12 36.3253L129.287 9.49158H123.513ZM122.305 25.7122L126.413 16.4471L130.522 25.7122H122.314H122.305Z",fill:e.logoColor}}),s("path",{attrs:{opacity:"0.4",d:"M39.331 36.3601L22.806 45.8229C22.5525 45.9684 22.2337 45.7865 22.2337 45.4883V25.5008C22.2337 25.3481 22.3134 25.2026 22.451 25.1226L38.976 15.6598C39.2295 15.5143 39.5483 15.6962 39.5483 15.9944V35.9819C39.5483 36.1346 39.4686 36.2801 39.331 36.3601Z",fill:e.textColor}}),s("path",{attrs:{opacity:"0.4",d:"M0.224601 36.3601L16.7495 45.8229C17.0031 45.9684 17.3219 45.7865 17.3219 45.4883V25.5008C17.3219 25.3481 17.2422 25.2026 17.1045 25.1226L0.579587 15.6598C0.326026 15.5143 0.00726318 15.6962 0.00726318 15.9944V35.9819C0.00726318 36.1346 0.0869538 36.2801 0.224601 36.3601Z",fill:e.textColor}}),s("path",{attrs:{opacity:"0.4",d:"M37.7082 10.7065L20.6326 20.5112C20.2921 20.7075 19.8647 20.7075 19.5242 20.5112L2.47766 10.7429C2.16614 10.5611 2.16614 10.1101 2.47766 9.93553L19.5387 0.421832C19.8792 0.232721 20.2849 0.232721 20.6254 0.421832L37.7082 9.89917C38.0269 10.0737 38.0269 10.532 37.7082 10.7065Z",fill:e.textColor}}),s("path",{attrs:{d:"M22.2337 36.2437L30.833 41.2261L39.5411 36.2437V25.2535L30.594 20.4676V31.8578L22.2337 36.2437Z",fill:e.textColor}}),s("path",{attrs:{d:"M17.3146 36.2437L8.77321 41.2552L0 36.2437V25.2535L8.95433 20.4676V31.8578L17.3146 36.2437Z",fill:e.textColor}}),s("path",{attrs:{d:"M10.9756 15.6089L20.2994 10.6411L29.2465 15.6089V5.25872L20.111 0L10.9756 5.09143V15.6089Z",fill:e.textColor}})])}),[],!1,null,null,null).exports},75542:function(e,t,s){"use strict";s.r(t),s.d(t,{default:function(){return d}});var o=s(60760),n=s(70655),a=s(53545),r=s(72305);let i=class extends a.w3{constructor(...e){super(...e),(0,o.Z)(this,"theme",void 0)}get textColor(){return this.theme===r.Z.DARK?"var(--s-color-base-content-tertiary)":"#E3232C"}};(0,n.__decorate)([(0,a.fI)({default:r.Z.LIGHT,type:String})],i.prototype,"theme",void 0),i=(0,n.__decorate)([a.wA],i);var c=i,d=(0,s(1001).Z)(c,(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("svg",{attrs:{width:"174",height:"36",viewBox:"0 0 174 36",fill:"none",xmlns:"http://www.w3.org/2000/svg"}},[s("path",{attrs:{d:"M103.478 19.8651H105.913V18.7374H103.478V19.8651ZM151.13 24.0289L153.043 23.3349C152.348 21.6 151.565 19.9518 150.696 18.2169L148.87 18.9976C149.739 20.906 150.522 22.5542 151.13 24.0289ZM158.609 18.0434C158.522 19.6916 158.435 21.0795 158.087 22.2072C157.826 23.3349 157.304 24.2024 156.696 24.9831C156.087 25.7639 155.304 26.2843 154.348 26.7181C153.391 27.1518 152.174 27.412 150.696 27.5855L151.043 29.4072C153.304 29.147 155.13 28.5398 156.435 27.759C157.739 26.9783 158.783 25.7639 159.391 24.2024C160 22.641 160.435 20.6458 160.435 18.0434H158.609ZM162.348 23.6819H171.826C171.565 25.0699 170.783 26.1108 169.565 26.8048C168.348 27.4988 166.609 27.8458 164.522 28.0193L164.783 29.7542C167.913 29.5807 170.261 28.8867 171.739 27.6723C173.217 26.4578 174 24.6361 174 22.294V21.947H162.435L162.348 23.6819ZM173.043 19.8651V18.1301H163.391V19.8651H173.043ZM9.47826 33.8313C12 35.2193 14.9565 36 18.087 36C21.2174 36 24.087 35.2193 26.6957 33.8313L18.087 21.0795L9.47826 33.8313ZM7.04348 17.9566V15.0072H16.6087V11.9711H7.04348V9.02169H29.1304V11.9711H19.5652V15.0072H29.1304V17.9566H19.5652L29.1304 32.1831C33.3913 28.8867 36.087 23.7687 36.087 17.9566C36.087 8.06747 28 0 18.087 0C8.08696 0 0 8.06747 0 17.9566C0 23.7687 2.69565 28.8867 6.95652 32.1831L16.5217 17.9566H7.04348ZM54 30.3614C59.5652 30.3614 63.2174 27.412 63.2174 23.0747C63.2174 19.0843 60 16.8289 55.1304 16.3952L52.9565 16.2217C50.6087 16.0482 49.4783 14.747 49.4783 13.2723C49.4783 11.3639 50.8696 9.71566 53.8261 9.71566C56.7826 9.71566 58.1739 11.5373 58.1739 13.4458H62.1739C62.1739 9.02169 58.8696 6.15904 53.8261 6.15904C48.7826 6.15904 45.5652 8.93494 45.5652 13.2723C45.5652 17.0024 48.3478 19.5181 52.6087 19.8651L54.7826 20.0386C57.7391 20.2988 59.2174 21.4265 59.2174 23.0747C59.2174 25.1566 57.5652 26.8048 54 26.8048C50.087 26.8048 48.6957 24.8096 48.6957 22.9012H44.6957C44.6957 27.2386 48.087 30.3614 54 30.3614ZM78.9565 30.3614C87.2174 30.3614 91.0435 23.6819 91.0435 18.5639V17.8699C91.0435 12.3181 87.0435 6.15904 78.9565 6.15904C70.8696 6.15904 66.8696 12.3181 66.8696 17.8699V18.5639C66.8696 23.6819 70.6956 30.3614 78.9565 30.3614ZM78.9565 26.6313C74.0869 26.6313 70.9565 22.7277 70.9565 18.3036C70.9565 13.6193 74 9.9759 78.9565 9.9759C83.8261 9.9759 86.8696 13.6193 86.8696 18.3036C86.8696 22.7277 83.8261 26.6313 78.9565 26.6313ZM110.87 29.7542H115.652L109.391 21.253C112.174 20.212 113.826 18.0434 113.826 14.5735V14.053C113.826 9.02169 110.435 6.67952 105.043 6.67952H96.8696V29.7542H100.957V21.947H105.13H105.391L110.87 29.7542ZM100.783 10.1494H105.478C108.087 10.1494 109.739 11.8843 109.739 14.3133C109.739 16.8289 108.087 18.4771 105.478 18.4771H100.783V10.1494ZM136.174 29.7542H140.348L132.174 6.85301H125.478L117.478 29.7542H121.565L123.739 23.4217H134L136.174 29.7542ZM124.87 20.0386L128.174 10.3229H129.304L132.696 20.0386H124.87Z",fill:e.textColor}})])}),[],!1,null,null,null).exports},85994:function(e,t,s){var o={"./cs.js":[98507,4998],"./de.js":[80790,4998],"./en.js":[25054,4998],"./es.js":[67763,4998],"./fr.js":[96023,4998],"./hr.js":[96257,4998],"./hu.js":[68562,4998],"./hy-am.js":[38242,4998],"./id.js":[83783,4998],"./it.js":[15551,4998],"./nl.js":[99182,4998],"./pl.js":[81987,4998],"./ru.js":[70600,4998],"./sk.js":[4984,4998],"./sr.js":[50617,4998],"./sv.js":[91876,4998],"./vi.js":[37553,4998],"./yo.js":[14724,4998],"./zh-cn.js":[33852,4998]};function n(e){if(!s.o(o,e))return Promise.resolve().then((function(){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}));var t=o[e],n=t[0];return s.e(t[1]).then((function(){return s.t(n,23)}))}n.keys=function(){return Object.keys(o)},n.id=85994,e.exports=n},3457:function(e,t,s){var o={"./App/BrowserNotification/BrowserNotifsBlockedDialog.vue":[37243,7243],"./App/BrowserNotification/BrowserNotifsEnableDialog.vue":[44523,4523],"./App/Footer/AppFooter.vue":[37068],"./App/Footer/FooterPopper.vue":[74238],"./App/Footer/NoInternetDialog.vue":[84281],"./App/Footer/Node/NodeInfo.vue":[48060,3064,8060],"./App/Footer/Node/SelectNode.vue":[78857,8857],"./App/Footer/SelectNodeDialog.vue":[37443,4998,3064,7443],"./App/Footer/StatisticsDialog.vue":[66017,6017],"./App/Header/AppAccountButton.vue":[59889],"./App/Header/AppDisclaimer.vue":[45661,5661],"./App/Header/AppHeader.vue":[30273],"./App/Header/AppHeaderMenu.vue":[49713],"./App/Header/AppLogoButton.vue":[69051],"./App/Menu/AppInfoPopper.vue":[73379],"./App/Menu/AppMenu.vue":[4587],"./App/Menu/SidebarItemContent.vue":[1985],"./App/MobilePopup.vue":[91273,1273],"./App/Settings/Language/SelectLanguageDialog.vue":[10774,774],"./ConfirmSend.vue":[39102,9102],"./SoraCard/ConfirmationInfo.vue":[92208,2208],"./SoraCard/Paywings/PaywingsDialog.vue":[67437,7437],"./SoraCard/SoraCardIntroPage.vue":[40939,939],"./SoraCard/SoraCardKYC.vue":[21493,1493],"./SoraCard/steps/Email.vue":[69455,4998,9455],"./SoraCard/steps/KycView.vue":[57330,4998,7330],"./SoraCard/steps/Phone.vue":[88196,8196],"./SoraCard/steps/RoadMap.vue":[56710,6710],"./SoraCard/steps/TermsAndConditions.vue":[82814,2814],"./SoraCard/steps/ToSDialog.vue":[39387,9387],"./X1/X1Dialog.vue":[34714,4714],"./pages/AddLiquidity/Confirm.vue":[85245,3064,5245],"./pages/AddLiquidity/TransactionDetails.vue":[33383,3064,3149],"./pages/Bridge/SelectAsset.vue":[45665,3064,5665],"./pages/Bridge/SelectNetwork.vue":[57415,7415],"./pages/Bridge/TransactionDetails.vue":[21358,1358],"./pages/Bridge/TransferNotification.vue":[53178,3178],"./pages/Moonpay/Confirmation.vue":[75023,3064,5023],"./pages/Moonpay/HistoryButton.vue":[74067,3064,4067],"./pages/Moonpay/Moonpay.vue":[40220,3064,220],"./pages/Moonpay/Notification.vue":[90459,3064,459],"./pages/Referrals/ConfirmBonding.vue":[91932,1932],"./pages/Referrals/ConfirmInviteUser.vue":[58079,8079],"./pages/RemoveLiquidity/Confirm.vue":[72218,2218],"./pages/RemoveLiquidity/TransactionDetails.vue":[12455,2455],"./pages/Rewards/AmountHeader.vue":[92120,2120],"./pages/Rewards/AmountTable.vue":[79779,3064,6684],"./pages/Rewards/GradientBox.vue":[35627,5627],"./pages/Rewards/ItemTooltip.vue":[11400,3064,2307],"./pages/Stats/BarChart.vue":[80227,4998,3064],"./pages/Stats/NetworkStats.vue":[35545,3064,6415],"./pages/Stats/SupplyChart.vue":[19834,4998,3064],"./pages/Stats/TvlChart.vue":[68334,4998,3064],"./pages/Swap/Chart.vue":[68748,4998,3064,8748],"./pages/Swap/Confirm.vue":[2830,2830],"./pages/Swap/Settings/MarketAlgorithm/Header.vue":[75297,3064,1926],"./pages/Swap/Settings/MarketAlgorithm/MarketAlgorithm.vue":[97081,3064,7146],"./pages/Swap/Settings/Settings.vue":[53043,3064,1752],"./pages/Swap/StatusActionBadge.vue":[66860,1083],"./pages/Swap/TransactionDetails.vue":[70136,136],"./pages/Wallet/AboutNetworkDialog.vue":[63702,3702],"./shared/Button/SortButton.vue":[7174,7174],"./shared/Button/SvgIconButton/SvgIconButton.vue":[32624,3064,2624],"./shared/Chart/ChartSkeleton.vue":[81742,1742],"./shared/Dialog/ConfirmBridgeTransaction.vue":[44540,3064,4540],"./shared/Dialog/NetworkFeeWarning.vue":[36543,6543],"./shared/ExternalLink.vue":[90929,3751],"./shared/GenericPageHeader.vue":[52486,2486],"./shared/Input/TokenInput.vue":[91481,1481],"./shared/Input/TokenSelectButton.vue":[26781,6781],"./shared/Input/TokenSelectDropdown.vue":[21277,1277],"./shared/Logo/Adar.vue":[18477],"./shared/Logo/Moonpay.vue":[6187,3064],"./shared/Logo/Polkaswap.vue":[17495,7495],"./shared/Logo/Sora.vue":[75542],"./shared/Logo/Web3.vue":[10645,3064],"./shared/PairTokenLogo.vue":[69999,9999],"./shared/PoolInfo.vue":[40495,495],"./shared/PriceChange.vue":[64472,4472],"./shared/SelectAsset/List.vue":[42917,2917],"./shared/SelectAsset/SelectToken.vue":[8458,3064,8458],"./shared/Settings/SlippageTolerance.vue":[7208,7208],"./shared/Settings/Tabs.vue":[87782,7782],"./shared/Stats/StatsCard.vue":[22539,2539],"./shared/Stats/StatsFilter.vue":[69500,9500],"./shared/TokensRow.vue":[78371,8371],"./shared/TransactionDetails.vue":[77183,7183],"./shared/ValueStatusWrapper.vue":[6517,6517],"./shared/Widget.vue":[52379,2379]};function n(e){if(!s.o(o,e))return Promise.resolve().then((function(){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}));var t=o[e],n=t[0];return Promise.all(t.slice(1).map(s.e)).then((function(){return s(n)}))}n.keys=function(){return Object.keys(o)},n.id=3457,e.exports=n},13081:function(e,t,s){var o={"./cs.json":[6202,9648],"./de.json":[89627,5548],"./en.json":[18979],"./es.json":[71809,6673],"./fr.json":[12241,9093],"./hr.json":[2052,330],"./hu.json":[84038,2066],"./hy.json":[48644,9137],"./id.json":[58843,7457],"./it.json":[51849,3192],"./nl.json":[80173,9026],"./no.json":[93695,8285],"./pl.json":[90168,2649],"./ru.json":[68810,7940],"./sk.json":[4064,6650],"./sr.json":[63503,6156],"./sv.json":[23,676],"./vi.json":[14196,9288],"./yo.json":[92097,6185],"./zh_CN.json":[15660,1896]};function n(e){if(!s.o(o,e))return Promise.resolve().then((function(){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}));var t=o[e],n=t[0];return Promise.all(t.slice(1).map(s.e)).then((function(){return s.t(n,19)}))}n.keys=function(){return Object.keys(o)},n.id=13081,e.exports=n},32086:function(e,t,s){var o={"./card/cs.json":[6202,9648],"./card/de.json":[89627,5548],"./card/en.json":[18979],"./card/es.json":[71809,6673],"./card/fr.json":[12241,9093],"./card/hr.json":[2052,330],"./card/hu.json":[84038,2066],"./card/hy.json":[48644,9137],"./card/id.json":[58843,7457],"./card/it.json":[51849,3192],"./card/nl.json":[80173,9026],"./card/no.json":[93695,8285],"./card/pl.json":[90168,2649],"./card/ru.json":[68810,7940],"./card/sk.json":[4064,6650],"./card/sr.json":[63503,6156],"./card/sv.json":[23,676],"./card/vi.json":[14196,9288],"./card/yo.json":[92097,6185],"./card/zh_CN.json":[15660,1896],"./cs.json":[34454,661],"./de.json":[78471,1987],"./en.json":[82007],"./es.json":[36905,1309],"./fr.json":[46863,3273],"./hr.json":[81387,4598],"./hu.json":[83426,2182],"./hy.json":[74721,4034],"./id.json":[70998,2763],"./it.json":[35866,4468],"./nl.json":[58391,9347],"./no.json":[71950,5274],"./pl.json":[13194,4018],"./ru.json":[52182,8116],"./sk.json":[39549,9789],"./sr.json":[80569,4724],"./sv.json":[22524,6914],"./vi.json":[19090,8763],"./yo.json":[56460,4572],"./zh_CN.json":[22044,4208]};function n(e){if(!s.o(o,e))return Promise.resolve().then((function(){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}));var t=o[e],n=t[0];return Promise.all(t.slice(1).map(s.e)).then((function(){return s.t(n,19)}))}n.keys=function(){return Object.keys(o)},n.id=32086,e.exports=n},65493:function(e,t,s){var o={"./App/Header/RouteAssetsNavigation.vue":[45283,5283],"./RouteAssets/ConfirmFinishingRoutingDialog.vue":[34452,4452],"./RouteAssets/FailedTransactionsDialog.vue":[75726,5726],"./RouteAssets/FixIssuesDialog.vue":[69391,3064,7661],"./RouteAssets/SelectInputAssetDialog.vue":[93427,3427],"./RouteAssets/SelectReportFormatDialog.vue":[58088,8088],"./RouteAssets/Stages/Authorize.vue":[95721,5721],"./RouteAssets/Stages/Done.vue":[21771,4998,3064,8681],"./RouteAssets/Stages/ProcessTemplate.vue":[31780,1780],"./RouteAssets/Stages/ReviewDetails.vue":[36241,3064,9161],"./RouteAssets/Stages/Routing.vue":[28418,619],"./RouteAssets/Stages/TransactionOverview.vue":[21939,2719],"./RouteAssets/Stages/UploadTemplate.vue":[40550,550],"./RouteAssets/SwapDialog.vue":[28573,3064,6323],"./RouteAssets/WarningMessage.vue":[20923,3064,2240]};function n(e){if(!s.o(o,e))return Promise.resolve().then((function(){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}));var t=o[e],n=t[0];return Promise.all(t.slice(1).map(s.e)).then((function(){return s(n)}))}n.keys=function(){return Object.keys(o)},n.id=65493,e.exports=n},3181:function(e,t,s){var o={"./About.vue":[60667,667],"./RouteAssets.vue":[62517,2517]};function n(e){if(!s.o(o,e))return Promise.resolve().then((function(){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}));var t=o[e],n=t[0];return s.e(t[1]).then((function(){return s(n)}))}n.keys=function(){return Object.keys(o)},n.id=3181,e.exports=n},62513:function(e,t,s){var o={"./About.vue":[36083,3064,6083],"./AddLiquidity.vue":[6116,3064,6116],"./Bridge.vue":[25131,3064,5131],"./BridgeContainer.vue":[30930,930],"./BridgeTransaction.vue":[15397,3064,5397],"./BridgeTransactionsHistory.vue":[92811,3064,2811],"./Explore/Container.vue":[78083,8083],"./Explore/Demeter.vue":[38114,3064,8114],"./Explore/Pools.vue":[27760,3064,2605],"./Explore/Tokens.vue":[50978,3064,978],"./MoonpayHistory.vue":[4726,3064,4726],"./Pool.vue":[55110,3064,5110],"./PoolContainer.vue":[35707,3064,5707],"./ReferralBonding.vue":[14417,4417],"./ReferralProgram.vue":[92922,2922],"./RemoveLiquidity.vue":[23119,3064,3119],"./Rewards.vue":[78680,3064,8680],"./RewardsTabs.vue":[91721,1721],"./SoraCard.vue":[84917,3064,4917],"./StakingContainer.vue":[86435,6435],"./Stats.vue":[51426,4998,3064,4297],"./Swap.vue":[45824,3064,9837],"./Wallet.vue":[63197,3197]};function n(e){if(!s.o(o,e))return Promise.resolve().then((function(){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}));var t=o[e],n=t[0];return Promise.all(t.slice(1).map(s.e)).then((function(){return s(n)}))}n.keys=function(){return Object.keys(o)},n.id=62513,e.exports=n},88677:function(){},62808:function(){},69159:function(){},70573:function(){},36563:function(){},46601:function(){},89214:function(){},42480:function(){},52361:function(){},94616:function(){},55024:function(){},18979:function(e){"use strict";e.exports=JSON.parse('{"card":{"termsAndConditions":"Terms & Conditions","disclaimerCollectData":"The SORA community does not collect any personal data, to get the SORA Card and IBAN account you will need to complete a KYC process directly with the card issuer.","privacyPolicy":"Privacy Policy","acceptAndContinue":"Accept & Continue","emailPlaceholder":"Email","sendCodeBtn":"Send SMS code","firstNamePlaceholder":"First name","lastNamePlaceholder":"Last name","phonePlaceholder":"Phone Number","statusPendingTitle":"Verification in progress","sendEmailLinkBtn":"Send link","statusAcceptText":"Your KYC verification is successful and we are already preparing to send you the SORA card!","noFreeKycTitle":"No more free attempts","unsupportedCountries":"Unsupported Countries","getSoraCardTitle":"Get SORA Card","alreadyAppliedTip":"I already applied","getSoraCardBtn":"Get SORA Card for free","bridgeTokensBtn":"Bridge tokens","depositX1Btn":"Buy XOR","getSoraCardDesc":"Top up your SORA Card with fiat or crypto and pay online, in-store or withdraw from an ATM. Get a Euro IBAN account and a Mastercard Debit Card","reIssuanceFee":"€0 annual re-issuance fee","freeStartDesc":"{value} of XOR in your account for free start","completeKYC":"Complete KYC","phoneConfirmation":"Phone Confirmation","emailConfirmation":"Email Confirmation","roadmap":{"contactInfoTitle":"Verify contact info","contactInfoDesc":"Email and phone number","docsTitle":"Verify documents","docsDesc":"Selfie with a document","personalDataTitle":"Submit personal data","personalDataDesc":"Full name & proof of address"},"letsStartBtn":"let’s start","otpPlaceholder":"Verification code","confirmCodeBtn":"Confirm SMS code","enterCodeBtn":"Enter the verification code","phoneInputBeforeSendDesc":"We’ll send you an SMS code.","phoneInputAfterSendDesc":"We’ve sent you an SMS code. Check your messages!","infoMessageNoKYC":"KYC process has not been finished.","infoMessageWrongOtp":"Code incorrect. Please, try again.","emailInputBeforeSendDesc":"We’ll send you a verification email.","emailInputAfterSendDesc":"We’ve sent you the magic link. Check your email!","personalNameInputDesc":"Use your real name.","infoMessageTryAgain":"Something went wrong. Please, try again","blacklistedCountriesExcuse":"Unfortunately, at this moment we’re not able to support the following countries:","statusPendingText":"You have successfully completed your KYC application. The review is pending and you can expect a decision shortly.<br /><br />Usually the decision is made the same day and in some cases can take up to 3 days.","resendInBtn":"RESEND IN {value}","statusRejectTitle":"Application rejected","statusRejectText":"Your application has been rejected by internal audit, please check out our requirements and terms of service carefully before applying again","statusAcceptTitle":"Application approved","noFreeAttemptsDesc":"You have used your free attempt to pass the KYC process. We kindly ask you to wait until the next upgrade of the application to proceed with paid attempts.","retryKycBtn":"Try to complete KYC again","unsupportedCountriesLink":"See the list","unsupportedCountriesDisclaimer":"Residents from certain countries can not apply for SORA Card at this moment","statusRejectReason":"Rejection reason","userNotFound":"No mobile number found, please recheck it and try again.","code":"Code"}}')},82007:function(e){"use strict";e.exports=JSON.parse('{"closeText":"Close","backText":"Back","createWalletText":"Create wallet","nameText":"Name","nextText":"Next","importText":"Import","settingsText":"Settings","addAssetText":"Add asset","successText":"Success","warningText":"Warning","swapText":"Swap","searchText":"Search","cancelText":"Cancel","saveText":"Save","logoutText":"Log out","sendText":"Send","addressText":"Address","amountText":"Amount","errorText":"Error","insufficientBalanceText":"Insufficient {tokenSymbol} balance","unknownErrorText":"ERROR Something went wrong...","transactionSubmittedText":"Transaction was submitted","operations":{"Swap":"Swap","Transfer":"Transfer","AddLiquidity":"Add Liquidity","RemoveLiquidity":"Remove Liquidity","CreatePair":"Create Pair","RegisterAsset":"Register Asset","ClaimRewards":"Claim Rewards","andText":"and","finalized":{"Transfer":"{action} {amount} {symbol} {direction} {address}","Swap":"Swapped {amount} {symbol} for {amount2} {symbol2}","AddLiquidity":"Supplied {amount} {symbol} and {amount2} {symbol2}","RemoveLiquidity":"Removed {amount} {symbol} and {amount2} {symbol2}","CreatePair":"Supplied {amount} {symbol} and {amount2} {symbol2}","RegisterAsset":"Registered {symbol} asset","ClaimRewards":"Reward claimed successfully {rewards}","ReferralReserveXor":"Bonded XOR successfully","ReferralUnreserveXor":"Unbonded XOR successfully","ReferralSetInvitedUser":"{role} {address} is set successfully","SwapAndSend":"Swapped {amount} {symbol} for {amount2} {symbol2} and {action} {direction} {address}","DemeterFarmingDepositLiquidity":"Supplied {symbol} and {symbol2} {amount} LP tokens","DemeterFarmingWithdrawLiquidity":"Removed {symbol} and {symbol2} {amount} LP tokens","DemeterFarmingStakeToken":"Added {amount} {symbol}","DemeterFarmingUnstakeToken":"Removed {amount} {symbol}","DemeterFarmingGetRewards":"{amount} {symbol} claimed successfully","EthBridgeIncoming":"Transfered {amount} {symbol} from {Ethereum} to {Sora}","EthBridgeOutgoing":"Transfered {amount} {symbol} from {Sora} to {Ethereum}"},"error":{"Transfer":"Failed to {action} {amount} {symbol} {direction} {address}","Swap":"Failed to swap {amount} {symbol} for {amount2} {symbol2}","AddLiquidity":"Failed to supply {amount} {symbol} and {amount2} {symbol2}","RemoveLiquidity":"Failed to remove {amount} {symbol} and {amount2} {symbol2}","CreatePair":"Failed to supply {amount} {symbol} and {amount2} {symbol2}","RegisterAsset":"Failed to register {symbol} asset","ClaimRewards":"Failed to claim rewards {rewards}","ReferralReserveXor":"Failed to bond XOR","ReferralUnreserveXor":"Failed to unbond XOR","ReferralSetInvitedUser":"Failed to set {role} {address}","SwapAndSend":"Failed to swap {amount} {symbol} for {amount2} {symbol2} and {action} {direction} {address}","DemeterFarmingDepositLiquidity":"Failed to supply {amount} {symbol} and {symbol2} LP tokens","DemeterFarmingWithdrawLiquidity":"Failed to remove {amount} {symbol} and {symbol2} LP tokens","DemeterFarmingStakeToken":"Failed to add {amount} {symbol}","DemeterFarmingUnstakeToken":"Failed to remove {amount} {symbol}","DemeterFarmingGetRewards":"Failed to claim {symbol}","EthBridgeIncoming":"Failed to transfer {amount} {symbol} from {Ethereum} to {Sora}","EthBridgeOutgoing":"Failed to transfer {amount} {symbol} from {Sora} to {Ethereum}"},"ReferralReserveXor":"Bond XOR","ReferralUnreserveXor":"Unbond XOR","ReferralSetInvitedUser":"Set {role}","SwapAndSend":"Swap and Send","DemeterFarmingDepositLiquidity":"Stake Liquidity","DemeterFarmingWithdrawLiquidity":"Unstake Liquidity","DemeterFarmingStakeToken":"Stake Token","DemeterFarmingUnstakeToken":"Unstake Token","DemeterFarmingGetRewards":"Claim Rewards","EthBridgeIncoming":"@:hashiBridgeText","EthBridgeOutgoing":"@:hashiBridgeText"},"polkadotjs":{"noExtensions":"No {PolkadotJs} extension was found. Please install it and reload this page\\nhttps://polkadot.js.org/extension/","noAccounts":"There seems to be no accounts in your {extension} extension. Please add an account and try again.","noAccount":"{extension} account error. Please check your account in the {extension} extension","noExtension":"No {extension} extension was found. Please install it and reload this page","noSigner":"Access denied. Go to {extension} extension settings and open \\"Manage Website Access\\" to allow."},"connection":{"title":"{Sora} Network account","text":"Connect or create your {Sora} Network account with {extensions} extensions. These extensions allow you to securely sign transactions and manage assets in {Sora} Network.","noAccounts":"No account found in your {extension} browser extension. Please add an account and try again.","selectAccount":"Select account to work with","action":{"install":"Install extension","learnMore":"Learn more","connect":"Connect account","refresh":"Refresh"},"selectWallet":"Select a wallet to work with","wallet":{"install":"Install","connected":"Connected","notConnected":"Not connected"}},"wallet":{"title":"{Sora} Network account","WalletAssets":"Assets","WalletActivity":"Activity","createToken":"@:createTokenText"},"walletSend":{"title":"Send","address":"@:addressText","amount":"@:amountText","balance":"Balance","max":"MAX","fee":"@:networkFeeText","enterAddress":"Enter address","badAddress":"Incorrect address","enterAmount":"Enter amount","badAmount":"@:insufficientBalanceText","confirmTitle":"Confirm transaction","errorAddress":"Invalid address. Please check it and try again.","feeTooltip":"@:networkFeeTooltipText","tooltip":"Send tokens between {Sora} network accounts","addressWarning":"Tokens will be sent to the {Sora} address below. Make sure the recipient can access the {Sora} chain to use the tokens:","addressError":"You cannot send tokens to the same account that you are currently connected to.","confirm":"@:confirmText"},"account":{"successCopy":"Wallet address is copied to the clipboard","copy":"Copy address","switch":"Switch account","walletAddress":"Wallet address","delete":"Delete account","rename":"Rename account","export":"Export .json"},"history":{"clearHistory":"Clear history","filterPlaceholder":"Filter by Address, Symbol, Type or Block ID","empty":"Your transactions will appear here","emptySearch":"No transactions found","firstText":"First","lastText":"Last","prevText":"Previous","nextText":"Next"},"assets":{"empty":"There are no assets","swap":"@:swapText","send":"@:sendText","receive":"@:account.copy","liquidity":"Add liquidity","bridge":"Bridge","copy":"Copy Asset ID","successCopy":"{symbol} Asset ID is copied to the clipboard","copied":"Copied!","balance":{"transferable":"Transferable","frozen":"Frozen","locked":"- Locked","reserved":"- Reserved","total":"Total","bonded":"- Bonded"},"totalAssetsValue":"Total assets value:","details":"Details","assetId":"Asset ID"},"asset":{"remove":"Remove asset","select":"Select an asset","receive":"Receive {symbol}"},"addAsset":{"success":"Asset {symbol} was added successfully!","empty":"No tokens found","alreadyAttached":"Token was already attached","understand":"I understand","warningTitle":"Trade at your own risk!","warningMessage":"Anyone can create a token, including creating fake versions of existing tokens that claim to represent projects.\\nIf you purchase this token, you may not be able to sell it back.","approved":"Asset approved by community","unknown":"Unknown source","scam":"SCAM","next":"Next","AddAssetToken":{"title":"Currencies","switchBtn":"Verified assets only"},"searchInputText":"Search by Asset ID, Name or Ticker Symbol"},"createToken":{"desc":"Create and deploy custom asset on {Sora}","enterSymbol":"Enter token symbol","enterName":"Enter token name","enterSupply":"Enter token supply","success":{"title":"Transaction submitted","desc":"Create {symbol} token"},"tooltipValue":"@:networkFeeTooltipText","fee":"@:networkFeeText","insufficientBalance":"@:insufficientBalanceText","feeError":"Failed to get a fee for a transaction","error":"Failed to create {symbol} token","tokenSymbol":{"placeholder":"Token symbol","desc":"This is an identifier for the token. You can use from 1 to 7 characters for the selection."},"tokenName":{"placeholder":"Token name","desc":"This is a name for the token. You can use from 1 to 33 characters for the selection."},"tokenSupply":{"placeholder":"Token supply","desc":"You will receive these tokens upon creation."},"extensibleSupply":{"placeholder":"Extensible supply","desc":"Ability to mint more tokens."},"provideContent":"Provide content","selectLocalFile":"Select local file","CreateSimpleToken":"Token","nft":{"source":{"label":"Source","value":"Local files","limit":"Choose another file"},"link":{"placeholder":"IPFS link","copyLink":"Copy link","tooltip":"IPFS is a distributed system for storing and accessing files, making it possible to access files from many locations that aren\'t managed by one organization."},"image":{"placeholderNoImage":"Upload the file by either entering a link or choosing from local storage","placeholderBadSource":"The file failed to be processed","placeholderBadSourceAddition":"or it’s not uploaded to IPFS yet","placeholderFileLimit":"The file size exceeds the limit of {value}mb"},"supply":{"placeholder":"Token supply","desc":"Amount of NFTs you’re going to get.","quantity":"Quantity"},"description":{"placeholder":"Description"}},"enterTokenDescription":"Enter description","divisible":{"placeholder":"Divisible","desc":"Ability of NFT to divide into fractional parts. Liquidity provisioning only works with divisible assets"},"title":"@:createTokenText","action":"@:createTokenText","confirm":"@:confirmText","titleCommon":"Create","confirmTokenTitleCommon":"Create Token","confirmTokenTitleNFT":"Create NFT","actionNFT":"@:createTokenTextNFT"},"transaction":{"title":"Transaction details","blockId":"Block Id","status":"Status","statuses":{"pending":"Pending...","failed":"Transaction failed","complete":"Complete"},"errorMessage":"Error","startTime":"Date","amount":"@:amountText","amount2":"@:amountText 2","fee":"Transaction Fee","total":"Total","from":"From","to":"To","successCopy":"{value} is copied to the clipboard","copy":"Copy {value}","history":{"created":"Transaction for {amount} {symbol} has been created.","submitted":"Transaction submitted with fee of {fee} {symbol}","confirmed":"Transaction confirmed"},"txId":"Transaction Id","viewIn":"View in {explorer}","referrer":"Referrer","referral":"Referral"},"appName":"{AppName}","changeNetworkText":"Change network in {Metamask}","transactionText":"transaction | transactions","connectWalletText":"Connect account","changeAccountText":"Change account","connectedText":"Connected","connectWalletTextTooltip":"Connect to {Sora} Network with {PolkadotJs}","selectNodeText":"Select Network Node","bridgeText":"Bridge","disclaimer":"{disclaimerPrefix} This website is maintained by the {Sora} community. Before continuing to use this website, please review the {polkaswapFaqLink} and documentation, which includes a detailed explanation on how {AppName} works, as well as the {memorandumLink}, and {privacyLink}. These documents are crucial to a secure and positive user experience. By using {AppName}, you acknowledge that you have read and understand these documents. You also acknowledge the following: 1) your sole responsibility for compliance with all laws that may apply to your particular use of {AppName} in your legal jurisdiction; 2) your understanding that the current version of {AppName} is an alpha version: it has not been fully tested, and some functions may not perform as designed; and 3) your understanding and voluntary acceptance of the risks involved in using {AppName}, including, but not limited to, the risk of losing tokens. Please do not continue without reading the {polkaswapFaqLink}, {memorandumLink}, {privacyLink}!","poweredBy":"Powered by","confirmTransactionText":"Confirm transaction in {direction}","retryText":"Retry","networkFeeText":"Network Fee","networkFeeTooltipText":"Network fee is used to ensure {Sora} system\'s growth and stable performance.","ethNetworkFeeTooltipText":"Please note that the {Ethereum} network fees displayed on {AppName} are only rough estimations, you can see the correct fee amount in your connected {Ethereum} wallet prior to confirming the transaction.","marketText":"Market","marketAlgorithmText":"Market algorithm","firstPerSecond":"{first} per {second}","pairIsNotCreated":"Token pair isn\'t created","pageTitle":{"Swap":"Swap","Pool":"Pool","Bridge":"@:bridgeText","About":"About","Stats":"Statistics","Wallet":"Wallet","CreatePair":"Create Pair","AddLiquidity":"Add Liquidity","AddLiquidityId":"Add Liquidity","RemoveLiquidity":"Remove Liquidity","Rewards":"Rewards","Explore/Tokens":"Tokens","Explore/Pools":"Pools","Explore/Staking":"Staking","Explore/Farming":"Farming","Staking":"Staking"},"mainMenu":{"Swap":"Swap","Pool":"Pool","Bridge":"@:bridgeText","Farming":"Farming","Wallet":"Account","Rewards":"Rewards","About":"About","Stats":"Stats","Support":"Support","CreatePair":"Create Pair","Tokens":"Tokens","Send":"Send","RouteAssets":"Route Assets","StakingContainer":"Staking","Explore/Container":"Explore","SoraCard":"{Sora} Card"},"social":{"twitter":"Twitter","telegram":"Telegram","medium":"Medium","reddit":"Reddit","github":"GitHub","wiki":"{Sora} Wiki"},"footerMenu":{"faucet":"Faucet","github":"GitHub","sorawiki":"{Sora} Wiki","memorandum":"{AppName} Memorandum and Terms of Services","privacy":"Privacy Policy","info":"Info & Community"},"helpDialog":{"title":"Help","termsOfService":"Terms of Service","privacyPolicy":"Privacy Policy","appVersion":"{AppName} version","contactUs":"Contact us"},"aboutNetworkDialog":{"title":"About","learnMore":"@:learnMoreText","network":{"title":"What is {Sora}?","description":"{AppName} is built on top of the {Sora} Network, and the {Sora} token (XOR) is used for gas/fees and liquidity provision on {AppName}. {Sora} Network allows for reduced fees, faster transactions and simpler consensus finalization and is focused on delivering interoperability across other blockchain ecosystems like {Ethereum}."},"polkadot":{"title":"What is {PolkadotJs}?","description":"{PolkadotJs} extension is a browser extension available for Firefox and Chrome dedicated to managing accounts for Substrate-based chains, including {Sora}, {Polkadot} and {Kusama}. You can add, import, and export accounts and sign transactions or extrinsics that you have initiated from websites you have authorized."}},"node":{"errors":{"connection":"An error occurred while connecting to the node\\n{address}\\n","network":"The node\\n{address}\\n is from the another network\\n","existing":"This node is already added: {title}\\n"},"messages":{"connected":"Connection established with node\\n{address}\\n","selectNode":"Please select node to connect from the node list"},"warnings":{"disconnect":"Connection to the node has been lost. Reconnecting..."}},"selectNodeDialog":{"title":"{Sora} Network node selection","addNode":"Add custom node","customNode":"Custom node","howToSetupOwnNode":"How to setup your own {Sora} node","select":"Select","connected":"Connected","selectNodeForEnvironment":"Select a node for {environment} environment:","nodeTitle":"{chain} hosted by {name}","messages":{"emptyName":"Please input the name of the node","emptyAddress":"Please input the address of the node","incorrectProtocol":"Address should starts from ws:// or wss://","incorrectAddress":"Incorrect address"},"updateNode":"Update node"},"buttons":{"max":"MAX","chooseToken":"Choose token","chooseAToken":"Choose a token","chooseTokens":"Choose tokens","enterAmount":"Enter amount"},"transfers":{"from":"From","to":"To"},"metamask":"{Metamask}","providers":{"metamask":"{Metamask}"},"about":{"title":"The DEX for the Interoperable Future.","description":"Cross-chain exchange of assets, simple creation and listing of new assets, and the easiest swaps ever. The interoperable future of {Polkadot} is here and we are at the forefront!","trading":{"title":"Faster Trading","first":"{AppName} is a non-custodial, cross-chain AMM DEX protocol for swapping tokens based on {Polkadot} and {Kusama} relay chains, {Polkadot} and {Kusama} parachains, and blockchains directly connected via bridges.","second":"{AppName} removes trusted intermediaries and provides the opportunity for faster trading","third":"{AppName} is a community project and devs collaborate on the open source code using the"},"liquidity":{"title":"Boundless Liquidity","first":"{AppName} combines multiple liquidity sources under a common liquidity aggregation algorithm, operating completely on-chain, in a trustless and decentralized way.","second":"When traders call the swap function, the liquidity aggregation algorithm will fill orders using the best offers across all liquidity sources. Liquidity sources can be other DEXs, order books, or other API-driven sources.","third":"Because {AppName} is an open-source project, anyone can add more liquidity sources by making contributions to the {AppName} codebase."},"swap":{"title":"Swap Any Token","first":"Go beyond the limits of current DEXs by adding tokens from the {Polkadot} ecosystem as well as other blockchains.","second":"Create, list and trade your own tokens on the {Sora} network.","third":"Our core infrastructure uses Parity Substrate, which is more scalable than {Ethereum}, and does not use expensive mining for consensus."},"pswap":{"title":"PSWAP Tokens","first":"PSWAP was created by community governance by voting on its release. It is a utility and governance token used to reward liquidity providers on {AppName}. Unlike most other reward tokens, PSWAP is burned with transactions and decreases in supply over time.","second":"The {percent}% fee for every swap on the {AppName} DEX is used to buy back PSWAP tokens, which are then burned. At first, 90% of burned PSWAP tokens are reminted to allocate to liquidity providers, but with time this percentage will decrease to 35% after 4 years."},"links":{"first":{"title":"Become a {Sora} Validator","desc":"Secure the future of the {Sora} network and decentralized apps like {AppName}, and earn rewards along the way by becoming a {Sora} validator."},"second":{"title":"Connect a Chain to {Sora}","desc":"Grow the decentralized world economy by connecting more chains to {Sora} and {AppName} using the {Hashi} bridge protocol."}},"network":"{AppName} is built on the {Sora} Network, focusing on interoperability to connect the rest of the crypto ecosystem to {Polkadot}."},"exchange":{"Swap":"Swap","Pool":"Pool","balance":"Balance","insufficientBalance":"@:insufficientBalanceText","price":"Price","transactionSubmitted":"Transaction submitted","transactionMessage":"{firstToken} and {secondToken}","ok":"OK","confirm":"Confirm"},"swap":{"connectWallet":"@:connectWalletText","estimated":"estimated","slippageTolerance":"Slippage Tolerance","minReceived":"Minimum Received","maxSold":"Maximum Sold","minReceivedTooltip":"Your transaction will revert if there is a large, unfavorable price movement before it is confirmed.","priceImpact":"Price Impact","priceImpactTooltip":"The difference between the market price and estimated price due to trade size.","liquidityProviderFee":"Liquidity Provider Fee","liquidityProviderFeeTooltip":"A portion of each trade ({liquidityProviderFee}%) goes to liquidity providers as a protocol incentive.","networkFee":"@:networkFeeText","pairIsNotCreated":"@:pairIsNotCreated","firstPerSecond":"@:firstPerSecond","insufficientAmount":"Insufficient {tokenSymbol} amount","insufficientLiquidity":"Insufficient liquidity","confirmSwap":"Confirm swap","swapOutputMessage":"Output is estimated. You will receive at least {transactionValue} or the transaction will revert.","rewardsForSwap":"PSWAP Strategic Rewards","swapInputMessage":"Input is estimated. You will sell maximum {transactionValue} or the transaction will revert.","route":"Route","errorFetching":"Error fetching the data"},"pool":{"connectWallet":"@:connectWalletText","connectToWallet":"Connect an account to view your liquidity.","liquidityNotFound":"No liquidity found.","addLiquidity":"Add liquidity","removeLiquidity":"Remove liquidity","createPair":"Create a pair","pooledToken":"{tokenSymbol} Pooled","pairTokens":"{pair} Pool Tokens","poolShare":"Your pool share","unknownAsset":"@:unknownAssetText","description":"When you add liquidity, you are given pool tokens representing your position. These tokens automatically earn fees proportional to your share of the pool, and can be redeemed at any time.","strategicBonusApy":"Strategic Bonus APY"},"bridge":{"title":"{Hashi} Bridge","info":"Convert tokens between the {Sora} and {Ethereum} networks.","balance":"Balance","connectWallet":"@:connectWalletText","connected":"@:connectedText","changeAccount":"@:changeAccountText","changeNetwork":"@:changeNetworkText","next":"Next","connectWallets":"Connect wallets to view respective transaction history.","soraNetworkFee":"{Sora} Network Fee","ethereumNetworkFee":"{Ethereum} Network Fee","total":"Total","viewHistory":"View transactions history","transactionSubmitted":"Transaction submitted","transactionMessage":"{assetA} for {assetB}","notRegisteredAsset":"Asset {assetSymbol} is not registered","selectNetwork":"Select network","networkInfo":"Bridge {Sora} Network with:","copy":"Copy network address","soraAddress":"{Sora} address","ethereumAddress":"{Ethereum} address","tooltipValue":"@:comingSoonText"},"selectRegisteredAsset":{"title":"Select a token","search":{"title":"Tokens","placeholder":"Filter by Asset ID, Name or Ticker Symbol","networkLabelSora":"{Sora} network tokens","networkLabelEthereum":"{Ethereum} network mirror tokens","emptyListMessage":"No results"},"customAsset":{"title":"Custom","customInfo":"Important! Custom tokens must be registered in {Sora}.","registerToken":"Register token","addressPlaceholder":"Asset ID","symbolPlaceholder":"Token symbol","empty":"No tokens found","alreadyAttached":"Token was already attached"}},"confirmBridgeTransactionDialog":{"confirmTransaction":"Confirm transaction","insufficientBalance":"@:insufficientBalanceText","changeNetwork":"@:changeNetworkText","confirm":"@:confirmTransactionText","buttonConfirm":"@:confirmText"},"bridgeTransaction":{"details":"{from} for {to}","for":" for ","steps":{"step":"{step} of 2","step1":"1st","step2":"2nd"},"status":{"pending":"{step} transactions pending...","failed":"{step} transactions failed. @:(retryText).","confirm":"Confirm 2nd of 2 transactions...","complete":"Complete","convertionComplete":"Conversion complete"},"statuses":{"waiting":"Waiting","ready":"Ready","pending":"Pending","frozen":"Frozen","failed":"Transaction failed","done":"Complete","waitingForConfirmation":"Waiting for confirmation..."},"networkTitle":"{network} transaction","transactionHash":"Transaction hash","networkInfo":{"status":"Status","date":"Date","amount":"Amount","transactionFee":"Transaction Fee","total":"Total"},"successCopy":"Transaction hash is copied to the clipboard","ethereum":"{Ethereum}","sora":"{Sora}","pending":"{network} transaction pending...","retry":"@:retryText","metamask":"{Metamask}","confirm":"@:confirmTransactionText","newTransaction":"Create new transaction","changeNetwork":"@:changeNetworkText","connectWallet":"@:connectWalletText","changeAccount":"@:changeAccountText in {Metamask}","expectedAddress":"Expected address in {Metamask}","title":"Bridge Transaction","expectedMetaMaskAddress":"Expected address in {Metamask}:","allowToken":"Allow {AppName} to use your {tokenSymbol}","approveToken":"Please note that it is only needed to approve the token once. If your extension has multiple token approval requests, make sure to only confirm the last one while rejecting the rest.","blocksLeft":"{count} blocks left..."},"bridgeHistory":{"title":"History","showHistory":"Show history","clearHistory":"Clear history","empty":"Your transactions will appear here.","filterPlaceholder":"Filter by Asset ID or Ticker Symbol","restoreHistory":"Restore history","statusAction":"Action Needed"},"selectToken":{"title":"Select a token","searchPlaceholder":"Filter by Asset ID, Name or Ticker Symbol","emptyListMessage":"No results","copy":"Copy Asset ID","successCopy":"{symbol} Asset ID is copied to the clipboard","assets":{"title":"Assets"},"custom":{"title":"Custom","search":"Input Asset ID","text":"CUSTOM TOKENS","alreadyAttached":"This token was already attached","notFound":"Token not found"}},"createPair":{"title":"Create a pair","deposit":"Deposit","balance":"Balance","pricePool":"Prices and fees","shareOfPool":"Share of pool","firstPerSecond":"@:firstPerSecond","firstSecondPoolTokens":"{first}-{second} Pool","connect":"Connect wallet","supply":"Supply","yourPosition":"Your position","yourPositionEstimated":"Your position (estimated)","youWillReceive":"You will receive","remove":"remove","add":"ADD","ok":"OK","networkFee":"@:networkFeeText","alreadyCreated":"Token pair is already created","firstLiquidityProvider":"You are the first liquidity provider","firstLiquidityProviderInfo":"The ratio of tokens you add will set the price of this pool.<br/>Once you are happy with the rate click supply to review."},"confirmSupply":{"title":"Your pool share will be","outputDescription":"Output is estimated. If the price changes more than {slippageTolerance}% your transaction will revert.","poolTokensBurned":"{first}-{second} Pool Tokens Burned","price":"Price"},"addLiquidity":{"title":"Add liquidity","pairIsNotCreated":"@:pairIsNotCreated","firstPerSecond":"@:firstPerSecond"},"removeLiquidity":{"title":"Remove liquidity","liquidity":"liquidity","balance":"Balance","amount":"Amount","input":"Input","output":"Output","price":"Price","remove":"Remove","description":"Removing pool tokens converts your position back into underlying tokens at the current rate, proportional to your share of the pool. Accrued fees are included in the amounts you receive.","outputMessage":"Output is estimated. If the price changes more than {slippageTolerance}% your transaction will revert.","confirmTitle":"You will receive","shareOfPool":"Share of pool after transaction","locked":"{percent} of your pool is in {lock}"},"dexSettings":{"title":"Settings","marketAlgorithm":"@.upper:marketAlgorithmText","marketAlgorithmTooltip":{"main":" - option to choose between Primary Market (TBC), Secondary Market (XYK) or a combined smart algorithm for guaranteed best price for any given transaction."},"slippageTolerance":"SLIPPAGE TOLERANCE","slippageToleranceHint":"Your transaction will revert if the price changes unfavorably by more than this percentage.","slippageToleranceValidation":{"warning":"Your transaction may fail","frontrun":"Your transaction may be frontrun","error":"Enter a valid slippage percentage"},"custom":"CUSTOM","transactionDeadline":"TRANSACTION DEADLINE","transactionDeadlineHint":"Transaction will be cancelled if it is pending for more than this long.","nodeAddress":"NODE ADDRESS","ip":"IP","port":"PORT","min":"MIN","marketAlgorithms":{"SMART":"{smartAlgorithm} liquidity routing ensures the best price for any transaction by combining only the best price options from all available markets. When available, Token Bonding Curve ({tbcAlgorithm}) will be used for liquidity as long as the asset price is more affordable than from other sources, upon which the {xycAlgorithm} pool is utilized.","TBC":"{tbcAlgorithm} — buying only from the Token Bonding Curve (Primary Market). There is a possibility that the price can become unfavorable compared to the {xycAlgorithm} pool (Secondary Market), but the value received from the vested rewards might turn out to be much more favorable over time.","XYK":"{xycAlgorithm} — buying only from the XYK Pool (Secondary Market). Traditional XYK pool swap."},"charts":"Charts","сhartsDescription":"View charts for token prices"},"resultDialog":{"title":"Transaction submitted","ok":"OK"},"rewards":{"title":"Claim Rewards","changeAccount":"@:changeAccountText","connected":"@:connectedText","networkFee":"@:networkFeeText","andText":"and","claiming":{"pending":"Claiming...","success":"Claimed successfully"},"transactions":{"confimation":"Confirm {order} of {total} transactions...","success":"You will receive your rewards shortly","failed":"{order} of {total} transactions failed. @:retryText"},"signing":{"extension":"{PolkadotJs} browser extension","accounts":"your {Sora} and {Ethereum} accounts respectively"},"hint":{"connectExternalAccount":"Connect an {Ethereum} account to check for available PSWAP and VAL rewards.","connectAccounts":"To claim your PSWAP and VAL rewards you need to connect both your {Sora} and {Ethereum} accounts.","connectAnotherAccount":"Connect another {Ethereum} account to check for available PSWAP and VAL rewards.","howToClaimRewards":"To claim your {symbols} rewards you need to sign {count} {transactions} in {destination}. Rewards will be deposited to your {Sora} account."},"action":{"connectWallet":"@:connectWalletText","connectExternalWallet":"Connect {Ethereum} account","signAndClaim":"Sign and claim","pendingInternal":"{Sora} transaction pending...","pendingExternal":"{Ethereum} transaction pending...","retry":"@:retryText","checkRewards":"Check","insufficientBalance":"@:insufficientBalanceText"},"notification":{"empty":"No available claims for this account"},"events":{"XorErc20":"XOR ERC-20","SoraFarmHarvest":"{Sora}.farm harvest","NtfAirdrop":"NFT Airdrop","LiquidityProvision":"Fees gained from liquidity provision","BuyOnBondingCurve":"buying from the TBC","MarketMakerVolume":"Market Making","LiquidityProvisionFarming":"Farming"},"vested":"vested","forText":"for","totalVested":"Total rewards","claimableAmountDoneVesting":"Claimable rewards","groups":{"strategic":"Strategic Rewards","external":"Rewards for the connected {Ethereum} account","crowdloan":"Crowdloan rewards"},"Rewards":"Rewards","ReferralProgram":"@:referralProgram.title"},"provider":{"default":"{Ethereum} provider","metamask":"{Metamask}","messages":{"checkExtension":"{name} extension is busy, please check it","extensionLogin":"Please login to your {name} extension","installExtension":"{name} extension is not found. Please install it!\\n\\nAlready installed extension? Please reload the page","reloadPage":"Reload page"}},"selectLanguageDialog":{"title":"Language"},"tokens":{"symbol":"Symbol","assetId":"Asset ID"},"memorandum":"{AppName} Memorandum and Terms of Services","FAQ":"{AppName} FAQ","connectedAccount":"Connected account","selectNodeConnected":"Connected to: {chain}","moonpayText":"MoonPay","forText":"for","moonpay":{"notifications":{"success":{"title":"Tokens purchased","text":"Token purchase is finished. The {Hashi} bridge transaction will start automatically as soon as the tokens have been received in the connected {Ethereum} account. It is safe to close this window and continue using {AppName}. There will be a notification about the bridge transaction when ready."},"supportError":{"title":"Token not supported","text":"Unfortunately the token purchased via @:moonpayText is not yet supported by the {Hashi} bridge in {AppName}. Normally only the supported tokens should be available for purchase via MoonPay in {AppName}, hence something must have gone wrong somewhere. Please don’t hesitate to let the community know about this case in the <a class=\\"link\\" href=\\"https://t.me/polkaswap\\" target=\\"_blank\\" rel=\\"nofollow noopener\\" title=\\"{AppName}\\">{AppName} Telegram group</a>."},"feeError":{"title":"Not enough ETH for the bridge tx","text":"Unfortunately the {Hashi} bridge transaction has failed due to there not being enough ETH to pay for the {Ethereum} network transation fees. Please add more ETH and try again."},"transactionError":{"title":"Transaction has failed","text":"Unfortunately it appears that the @:moonpayText transaction has failed. Please try again. For @:moonpayText support go to <a class=\\"link\\" href=\\"https://support.moonpay.com\\" target=\\"_blank\\" rel=\\"nofollow noopener\\" title=\\"@:moonpayText\\">https://support.moonpay.com</a>"},"amountError":{"title":"Insufficient balance","text":"Unfortunately the {Hashi} bridge transaction has failed due to there not being enough tokens for transaction. Please check your {Ethereum} account balance and try again."},"accountAddressError":{"title":"Wrong {Ethereum} account","text":"Unfortunately, the {Hashi} bridge transaction failed due to the recipient address of the tokens in the @:moonpayText order does not match your current {Ethereum} account address. Please switch {Ethereum} account in extension and try again."}},"buttons":{"buy":"Buy Tokens","history":"Purchase History","transfer":"Start bridge","view":"View bridge transaction"},"history":{"title":"Purchase history","empty":"@:noDataText"},"confirmations":{"txReady":"Transaction Ready For Bridge"},"tooltips":{"transfer":"Tokens successfully purchased!\\nClick to start the bridge transaction"}},"light":"Light","dark":"Dark","headerMenu":{"showBalances":"Show Balances","hideBalances":"Hide Balances","settings":"Settings","switchTheme":"Switch to {theme} Mode","switchLanguage":"Choose Language","selectNode":"@:selectNodeText","showDisclaimer":"Show Disclaimer","hideDisclaimer":"Hide Disclaimer"},"sentText":"Sent","learnMoreText":"Learn more","marketMakerCountdown":{"title":"Market Maker Countdown","blocks":"blocks","daysLeft":"days left","txs":"TXs","volume":"MM TX volume","description":"20 million PSWAP / month will be distributed to market makers with at least 500 tx / month valued over 1 XOR."},"confirmNextTxFailure":{"header":"Attention","info":"Your XOR balance will be less than {fee} XOR after this transaction. You won’t be able to pay for the network fee for another transaction.","payoff":"You would have to use the Bridge to get XOR from other networks, get sent XOR from another {Sora} account, or swap any other token already in your account into XOR.","button":"Yes, I understand the risk"},"blockNumberText":"Block number","referralProgram":{"title":"Referral Program","connectAccount":"To invite users you need to connect your {Sora} account.","bondedXOR":"XOR Bonded","referralsNumber":"{number} referrals","startInviting":"Bond XOR to refer others","preview":"Invite new users and get 10% from their transaction fees.<br/>To start, bond any amount of XOR. <a href=\\"#\\" target=\\"_blank\\" rel=\\"nofollow noopener\\" class=\\"link\\">Learn more</a>","deposit":"Deposit","balance":"Balance","networkFee":"@:networkFeeText","insufficientBalance":"@:insufficientBalanceText","insufficientBondedBalance":"Insufficient bonded balance","action":{"connectWallet":"@:connectWalletText","empty":"Enter amount of {tokenSymbol}","startInviting":"Bond {tokenSymbol} to start inviting","bondMore":"Bond More","bond":"Bond","unbond":"Unbond","copyLink":"Copy link"},"transactionDetails":"Transaction Details","receivedRewards":"Received rewards","invitationLink":"Invitation link","successCopy":"Referral link is copied to the clipboard","bondTitle":"Bond XOR","unbondTitle":"Unbond XOR","confirm":{"bond":"Confirm bond","unbond":"Confirm unbond","inviteTitle":"You have been invited to {AppName}","inviteDescription":"For every transaction, 10% of the fee will go to your referrer, without any extra cost to you.","signInvitation":"Approve","freeOfCharge":"This action is free of charge","hasReferrerTitle":"You’ve already set your referrer","hasReferrerDescription":"Unfortunately, you can only set one","ok":"OK","text":"Confirm"},"referrer":{"title":"Add your referrer","titleReferrer":"Your referrer","placeholder":"Enter invitation link or code","label":"Invitation link or code","approve":"Approve","approved":"Approved","description":"You can get referred to {AppName},<br/>type in the link or code of the referrer","referredBy":"You’ve been referred by {referrer}","info":"When you’ll pay a fee for transaction,<br/>10% will go to your referrer","referredLablel":"Referred address"},"insufficientBondedAmount":"To invite more referrals, bond at least {inviteUserFee} XOR"},"transactionDetailsText":"Transaction Details","adar":{"send":{"Swap":"Exchange","Send":"Send","Pool":"Pool","balance":"Balance","insufficientBalance":"@:insufficientBalanceText","price":"Price","transactionSubmitted":"Transaction submitted","transactionMessage":"{firstToken} and {secondToken}","confirm":"Confirm","ok":"OK","exchange":"Exchange","exchangeAndSend":"Exchange & Send","confirmSwapAndSend":"Confirm"},"kyc":{"title":"KYC Data","form":{"name":"Name","surname":"Surname","country":"Citizenship","address":"Residential Address","dob":"Date of Birth","id":"ID Number"},"notification":{"saved":"KYC Data successfully saved","reset":"KYC Data cleared"},"save":"Save","reset":"Reset"},"routeAssets":{"uploadCSV":{"title":"Advanced Digital Asset Routing","description":"ADAR is an Advanced Digital Asset Routing solution for businesses to seamlessy transmit digital assets to payeers around the world, in multiple currencies, at a fraction of today’s prevailing transaction costs, without excessive paperwork and settlement times.","nextButton":"Process routing template","downloadButton":"Download routing template","uploadDialog":{"title":"Upload","body":"Upload .CSV file to initiate assets routing ","browseButton":"Browse files"}},"routingTemplate":{"submitButton":"Route Assets","downloadOverviewButton":"download transaction overview","backButton":"Back to Upload","summary":{"title":"Routing Template Summary","asset":"Input Asset","usdCount":"Total usd to be routed","usdRouted":"Total usd routed","usdAuthorized":"Total usd authorized","estimatedTokes":"Total estimated {token} required (+5%)","available":"Total {token} available","tokenRouted":"Total {token} routed","add":"add","detailsToggle":"Summary details","table":{"asset":"output Asset","usd":"usd equivalent","usdRouted":"total USD routed","total":"total estimated","totalRouted":"Total {token} routed","required":"estimated {token} required","transactions":"total transaction success"}},"overview":{"title":"Transaction Overview","name":"name","wallet":"WALLET","usd":"USD Equivalent","asset":"Asset","amount":"estimated Amount ","status":"Status"},"authorizeDialog":{"title":"Authorize Routing Template","asset":"Input Asset","total":"Total","termsAndConditions":"Terms and Conditions","agreement":"By clicking Submit Routing i accept the ADAR","submit":"route assets"},"messages":{"routeAssetsCompleted":"All transactions completed"}},"continue":"Continue","cancelProcessing":"Cancel processing","stagesNames":{"authorize":"Authorize","done":"Done","processTemplate":"Process template","reviewDetails":"Review Details","routing":"Routing","transactionOverview":"Transaction overview","uploadTemplate":"Upload tempolte"},"stages":{"uploadTemplate":{"title":"Upload Routing Template for processing","description":"Upload your Process Routing Template as a .CSV file","instruction":"Drop your completed process routing template or click to upload","typesInfo":"Supported file types: CSV","uploadButtonTitle":"upload","templateHelp":"Dont have a template?","download":"Download"},"processTemplate":{"recipients":"Recipients","assets":"Assets","usd":"usd","wallets":"wallets","amount":"ESTIMATED AMOUNTS","calculated":"calculated","issues":"issues found","payeers":"payeers","processing":"processing","waiting":"waiting","title":"Process routing template","description":"Our system is processing your uploaded Routing Template","fixButton":"fix issues"}},"dialogs":{"fixIssuesDialog":{"title":"Fix or remove issues","recipient":"recipient","wallets":"wallets","fieldStatusCorrect":"{field} correct","fieldStatusIncorrect":"{field} incorrect","usd":"usd","assets":"Assets","amount":"estimated amount","fixButton":"fix issue","deleteButton":"delete recipient"}},"messages":{}}},"code":{"download":"Download QR Code","upload":"Scan QR","invalid":"Invalid QR Code","import":"Import an image","scan":"Scan with camera","allowanceError":"Check your camera availability and browser permissions to use it","receive":"Receive","camera":"Camera","allowanceRequest":"Press “Allow” to access camera"},"bridgeTransferNotification":{"addToken":"Add {symbol} to {Metamask}","title":"Bridge transaction successful"},"mobilePopup":{"sideMenu":"Get {Sora} Wallet","header":"Download {Sora} Wallet with {polkaswapHighlight} features","info":"Swap tokens from different networks - {Sora}, {Ethereum}, {Polkadot}, {Kusama}. Provide liquidity pool and earn % from exchange fees."},"releaseNotesText":"Release notes","copiedText":"Copied!","copyWithValue":"Copy {value}","copiedWithValue":"{value} is copied!","signAndClaimText":"Sign and claim","balanceText":"Balance","unknownAssetText":"Unknown asset","demeterFarming":{"staking":{"active":"Staking active","inactive":"Stake to earn additional rewards","stopped":"Staking stopped"},"info":{"earned":"{symbol} earned","fee":"Fee","feeTooltip":"Deposit fee is applied to your amount to stake","owned":"{symbol} @:balanceText","poolShare":"Your pool share staked","poolShareWillBe":"Your pool share staked will be","rewardToken":"Reward token","stake":"Your {symbol} staked","stakeWillBe":"Your {symbol} stake will be","totalLiquidityLocked":"Total liquidity locked"},"actions":{"add":"Stake more","claim":"Claim rewards","remove":"Remove stake","start":"Start staking"},"amountAdd":"Amount to stake","amountRemove":"Amount to remove","poweredBy":"Powered by Demeter Farming","calculator":"Calculator","results":"Results","rewards":"{symbol} rewards"},"staking":{"title":"Staking"},"historyErrorMessages":{"generalError":"Something went wrong","balances":{"liquidityrestrictions":"Account liquidity restrictions prevent withdrawal"},"poolxyk":{"sourcebalanceisnotlargeenough":"Source balance is not large enough","targetbalanceisnotlargeenough":"Destination balance is not large enough","impossibletodecidevalidpairvaluesfromrangeforthispool":"Provided amounts are too diverse","calculatedvalueisnotmeetsrequiredboundaries":"Amounts are out of required bounds","unabletodepositxorlessthanminimum":"XOR lower than the minimum value (0.007)","zerovalueinamountparameter":"Amount parameter has zero value"},"xstpool":{"poolalreadyinitializedforpair":"Pool pair already exists","slippagelimitexceeded":"Slippage tolerance has not met proper limits"},"referrals":{"alreadyhasreferrer":"Account already has a referrer","referrerinsufficientbalance":"Referrer does not have enough of reserved balance"},"vestedrewards":{"rewardssupplyshortage":"Rewards program has already finished","cantcalculatereward":"Failed to perform reward calculation","norewardsforasset":"There are no rewards for this asset"},"liquidityproxy":{"forbiddenfilter":"Selected liquidity source is not allowed"},"demeterfarmingplatform":{"insufficientfunds":"Insufficient funds","insufficientlptokens":"Insufficient liquidity provision tokens","pooldoesnothaverewards":"Pool does not have rewards"},"multicollateralbondingcurvepool":{"pricecalculationfailed":"An error occurred while calculating the price"}},"receivedText":"Received","browserNotificationDialog":{"title":"Enable browser notifications","info":"We will send you only relevant updates about your wallet, for example: asset balance changes","button":"Enable notifications","agree":"Yes, I understand","notificationBlocked":"To receive the notifications about {AppName}, please, allow the notifications in your browser\'s native settings","pointer":"Press “Allow” to turn notifications on"},"assetDeposit":"Asset balance has been deposited","noDataText":"No data","ofText":"{first} of {second}","filter":{"all":"All","token":"Currencies","verifiedOnly":"Show verified assets only","zeroBalance":"Hide 0 balance assets","showAssets":"Show assets","show":"Show"},"desktop":{"welcome":{"header":"Welcome to {AppName}!","headline":"Let’s set up your account","text":"Create your {Sora} Network account or log into the old ones using mnemonic phrase or .json import. This allows you to securely sign transactions and manage assets in {Sora} Network.","createAccount":"Create an account","importAccount":"Import Account"},"heading":{"seedPhraseTitle":"Seed phrase","confirmSeedTitle":"Confirm seed phrase","accountDetailsTitle":"Account Details","importTitle":"Import account"},"button":{"next":"Next step","skip":"Skip","createAccount":"Create Account","importAccount":"Import account"},"accountName":{"placeholder":"Wallet name","desc":"This is the public name of your wallet which will be visible to everyone"},"password":{"placeholder":"Password","desc":"Ensure you are using a strong password for proper protection"},"confirmPassword":{"placeholder":"Confirm password"},"accountMnemonic":{"placeholder":"Mnemonic phrase"},"seedAdviceText":"This is a secret seed of your account. Make sure to store it on a non-digital carrier, for example - paper","confirmSeedText":"Confirm the seed phrase by clicking words in the correct order","errorMnemonicText":"Incorrect seed phrase order","exportOptionText":"Export .json account file","exportJsonText":"You will always be able to access your account by importing that .json file. Do not share it with anyone!","addAccount":"Add an account","dialog":{"confirmTitle":"Confirm with password","confirmButton":"Sign Transaction","savePasswordText":"Remember my password for next 15 minutes","extendPasswordText":"Extend period without password by 15 minutes"},"errorMessages":{"password":"Password did not match","passwords":"Passwords did not match","mnemonic":"Invalid bip39 mnemonic specified","mnemonicLength":"Mnemonic should contain {number} words","jsonFields":"JSON file does not have required fields"},"assetsAtRiskText":"Assets at risk!","deleteAccountText":"Account can’t be recovered without a seed phrase, .json file or if it’s stored in some extension. You will be logged out."},"hashiBridgeText":"{Hashi} bridge","disclaimerTitle":"Disclaimer:","explore":{"showOnlyMyPositions":"Show only my positions"},"tooltips":{"roi":"{ROI} stands for Return on Investment. It is calculated by dividing the profit earned on an investment by the cost of that investment in a percentage equivalent.","tvl":"{TVL} stands for Total Value Locked. It represents tokens locked in the pools in the dollar equivalent.","volume":"Volume refers to the total amount of assets that have been traded or exchanged on the network over a specific period of time. The volume is an important metric for measuring the liquidity and overall activity of the network.","fees":"Fees on the {Sora} blockchain refer to the charges that are incurred for executing transactions on the network. These fees are paid in XOR, the native cryptocurrency of the {Sora} Network. The fee amount is determined by the complexity and size of the transaction being executed","supply":"Token supply refers to the total number of tokens that have been created and are in circulation on the network. The token supply can fluctuate based on the amount of tokens being staked, burned, or transferred on the network.","transactions":"Transactions refer to the process of sending or receiving digital assets on the network, including liquidity operations, as well as swaps.","accounts":"Accounts are digital addresses that hold user\'s assets on the network. Each account is associated with a unique public address and a private key that allows the user to access and manage their assets.","bridgeTransactions":"{from} to {to} bridge refers to the process of transferring assets between the {from} and {to} networks using a bridge. The bridge allows for the interoperability of the two networks, enabling users to seamlessly move assets between them.","velocity":"Token velocity is the number of times token changes accounts during period (month) on average. It indicates the level of trading activity and liquidity."},"createTokenText":"Create","comingSoonText":"Coming Soon","confirmText":"Confirm","createTokenTextNFT":"Create NFT","doNotShowText":"Don’t show me this again","accountText":"account | accounts","networkStatisticsText":"Network statistics","footer":{"node":{"title":{"connected":"Node connected","loading":"Node re-connecting","disconnected":"Node disconnected"}},"internet":{"title":{"disabled":"Internet disabled","unstable":"Internet unstable","stable":"Internet stable"},"label":"Your internet speed","desc":{"disabled":"Disconnected","unstable":"Slow connection","stable":"Optimal speed"},"action":"Refresh {Polkaswap}","dialogTitle":"Connect to internet source","dialogDesc":"{Polkaswap} requires internet connection for stable experience"},"statistics":{"title":{"unavailable":"Statistics unavailable","loading":"Statistics loading","available":"Statistics available"},"label":"Statistics services","desc":{"unavailable":"All services are disconnected","loading":"All services are loading","available":"All services are stable"},"action":"Select services","dialog":{"title":"{Sora} Network service selection","fiat":"Fiat values","chartsAndActivity":"Charts & Activity"}}},"locationText":"Location","acceptText":"Accept & Hide","newAccountsText":"New accounts"}')}},c={};function d(e){var t=c[e];if(void 0!==t)return t.exports;var s=c[e]={id:e,loaded:!1,exports:{}};return i[e].call(s.exports,s,s.exports,d),s.loaded=!0,s.exports}d.m=i,d.amdO={},e=[],d.O=function(t,s,o,n){if(!s){var a=1/0;for(l=0;l<e.length;l++){s=e[l][0],o=e[l][1],n=e[l][2];for(var r=!0,i=0;i<s.length;i++)(!1&n||a>=n)&&Object.keys(d.O).every((function(e){return d.O[e](s[i])}))?s.splice(i--,1):(r=!1,n<a&&(a=n));if(r){e.splice(l--,1);var c=o();void 0!==c&&(t=c)}}return t}n=n||0;for(var l=e.length;l>0&&e[l-1][2]>n;l--)e[l]=e[l-1];e[l]=[s,o,n]},d.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return d.d(t,{a:t}),t},s=Object.getPrototypeOf?function(e){return Object.getPrototypeOf(e)}:function(e){return e.__proto__},d.t=function(e,o){if(1&o&&(e=this(e)),8&o)return e;if("object"==typeof e&&e){if(4&o&&e.__esModule)return e;if(16&o&&"function"==typeof e.then)return e}var n=Object.create(null);d.r(n);var a={};t=t||[null,s({}),s([]),s(s)];for(var r=2&o&&e;"object"==typeof r&&!~t.indexOf(r);r=s(r))Object.getOwnPropertyNames(r).forEach((function(t){a[t]=function(){return e[t]}}));return a.default=function(){return e},d.d(n,a),n},d.d=function(e,t){for(var s in t)d.o(t,s)&&!d.o(e,s)&&Object.defineProperty(e,s,{enumerable:!0,get:t[s]})},d.f={},d.e=function(e){return Promise.all(Object.keys(d.f).reduce((function(t,s){return d.f[s](e,t),t}),[]))},d.u=function(e){return"js/"+({330:"lang-card-hr-json",661:"lang-cs-json",676:"lang-card-sv-json",1309:"lang-es-json",1896:"lang-card-zh_CN-json",1987:"lang-de-json",2066:"lang-card-hu-json",2182:"lang-hu-json",2649:"lang-card-pl-json",2763:"lang-id-json",3064:"chunk-common",3192:"lang-card-it-json",3273:"lang-fr-json",4018:"lang-pl-json",4034:"lang-hy-json",4208:"lang-zh_CN-json",4468:"lang-it-json",4572:"lang-yo-json",4598:"lang-hr-json",4724:"lang-sr-json",5274:"lang-no-json",5548:"lang-card-de-json",6156:"lang-card-sr-json",6185:"lang-card-yo-json",6650:"lang-card-sk-json",6673:"lang-card-es-json",6914:"lang-sv-json",7457:"lang-card-id-json",7940:"lang-card-ru-json",8116:"lang-ru-json",8285:"lang-card-no-json",8763:"lang-vi-json",9026:"lang-card-nl-json",9093:"lang-card-fr-json",9137:"lang-card-hy-json",9288:"lang-card-vi-json",9347:"lang-nl-json",9648:"lang-card-cs-json",9789:"lang-sk-json"}[e]||e)+"."+{131:"a87d6464",136:"439cb28a",220:"78de3690",330:"a542cce2",459:"9d62bf60",495:"bbece988",550:"6db342fd",619:"b7467029",661:"348d2e61",667:"37002c5f",676:"c7d9690e",774:"7e508a8f",834:"9ebe8267",929:"06a866f0",930:"872350c7",939:"66b99cbe",978:"0ef89a9d",1083:"5bbecdad",1197:"0a668a62",1273:"6250819f",1277:"62dd6ccb",1309:"f218d479",1358:"cf9e2e32",1372:"39c4e9a0",1481:"bb0d2a44",1493:"323d4b45",1721:"a1603d63",1742:"86eb4ebb",1752:"b48e05b2",1780:"1cd20856",1782:"ec8777f4",1896:"1bcf3750",1926:"de49e5ce",1932:"28bbcc1b",1987:"e8bbef17",2066:"4516ab65",2120:"9bd55ec2",2182:"2ad2955f",2208:"563c99ce",2218:"397c8f7c",2240:"106623e5",2307:"852a6941",2379:"290bd0ab",2455:"8bc7ba47",2483:"140a0689",2486:"564a31b0",2517:"1c3135e3",2539:"704a6fcc",2605:"e2ad2047",2624:"ccccee88",2649:"01384633",2719:"98fddcbf",2763:"961be2e8",2811:"85c904a5",2814:"6c3945b0",2830:"19260761",2917:"ed2d9edc",2922:"97346b98",3064:"dcd32118",3119:"a8a83d5c",3149:"829f5f64",3178:"7b17dc27",3192:"01ee77d2",3197:"b1a0baef",3273:"365e3c30",3427:"bcb25934",3702:"98c86af6",3751:"411be1b9",4018:"e3953bf5",4034:"71feb8b2",4067:"2d0a69dc",4208:"2b2af857",4297:"f3a82009",4417:"c731e9af",4452:"89f54d5c",4468:"7878fd96",4472:"80750943",4523:"78b27d9b",4540:"5dd2d5dd",4572:"1fedf3b1",4598:"9c710c54",4714:"e31d51f9",4724:"788130c6",4726:"914c98a9",4917:"68dcd614",5023:"613953e9",5110:"d677687e",5131:"ac2b985b",5245:"67a67eb8",5274:"e6cf8d4d",5283:"c7bb8749",5397:"daa8ede9",5548:"37a133f9",5627:"5e2aae60",5661:"1ca60428",5665:"44fb6c78",5707:"6a2aed29",5721:"ea380f87",5726:"d4b09179",6017:"3c5c530a",6083:"d47ad6e5",6116:"faa56377",6156:"0f81f3bd",6185:"936c38fd",6323:"3a6d0b27",6393:"15d1a82c",6415:"4ae4b2ad",6435:"712e006b",6517:"4b1f96ef",6543:"6a2204cf",6650:"21c65bb2",6666:"6318e13a",6673:"1d0b2868",6684:"282aae0f",6710:"0fe9fb27",6781:"d906de94",6914:"94aadef3",7146:"72c4364e",7174:"5cb47e07",7183:"b74036a8",7208:"2a4ff12a",7243:"dc84e15c",7330:"2067f039",7415:"57160821",7437:"abb9ba34",7443:"dd6ecfcc",7457:"3b6ce352",7495:"405aaeaa",7661:"687124aa",7768:"cb1ea521",7782:"d6f199ed",7821:"e83773e1",7940:"bedba841",7952:"23148d8a",8060:"63f35123",8079:"76822ba6",8083:"ea5b9fcb",8088:"e9f337de",8114:"74a91a03",8116:"5b7b581c",8196:"681447c1",8285:"fdb09670",8371:"285205a6",8458:"b4ecd9e3",8680:"86fc23d0",8681:"dc3c63cc",8748:"5a7159c3",8763:"c00dd572",8857:"e0cfca20",9026:"f2d6b51b",9093:"a37041da",9102:"92619a39",9137:"502cde4c",9161:"dda1a990",9288:"89808ced",9347:"61ec66ea",9387:"a68e6a81",9455:"b662edeb",9500:"9d9d52e4",9648:"660de063",9789:"b04a4988",9837:"507ad31d",9999:"89e417ef"}[e]+".1687197056600.js"},d.miniCssF=function(e){return"css/"+(2143===e?"app":e)+"."+{131:"2a6121d8",136:"0d5710c3",220:"74280e13",495:"b0c1812d",550:"466c76ca",619:"3ff88e61",667:"2eb5a652",774:"afbcf132",834:"8154764e",929:"1c9d5774",939:"3289558a",978:"4e56a4c5",1083:"d1e8102f",1197:"0e44b492",1273:"6a0339df",1277:"2e30ad6d",1372:"78039afc",1481:"205b5922",1493:"7aea333b",1721:"5446f1ff",1742:"6d34a368",1752:"8d1eb946",1780:"d0beca8f",1926:"47d8a3a8",1932:"6389780d",2120:"022b5183",2143:"f35d6062",2208:"b90b25de",2218:"eee868a3",2240:"2a324395",2307:"dd30faf2",2379:"a941694e",2483:"d24669ff",2486:"86ff12f1",2517:"842fa0ca",2539:"54f3ffe7",2605:"4e56a4c5",2624:"f3f2cf29",2719:"41d6c5ff",2811:"bb78d5aa",2814:"f2dd03e2",2830:"a2ff117c",2917:"11e1c6dc",2922:"1fe76909",3119:"f9dccf7f",3178:"bd6d9a03",3197:"0f5dd45f",3427:"c6be1562",3702:"b9b89896",3751:"30051259",4067:"d87b0973",4297:"966d214e",4417:"bc416fcc",4452:"721f4e90",4472:"461dce0d",4523:"4cfb332a",4540:"31e35265",4714:"96025a15",4726:"ccf78e5d",4917:"0d350eb7",5023:"6429e792",5110:"1f8c948b",5131:"1f5c8231",5245:"de88f210",5283:"b1a984cb",5397:"ed4cafe7",5627:"01298400",5661:"25e1006b",5665:"17b7772b",5721:"3eff79bb",5726:"f5565149",6017:"e87a0cdd",6083:"25918348",6116:"42eecd52",6323:"840ce6e0",6415:"625b70ec",6517:"57c0ae89",6543:"2229d2ec",6684:"b135f077",6710:"bc8a400c",6781:"88fd7aa8",7146:"9cc9fc70",7174:"624454d5",7183:"9386000d",7208:"1b992cb0",7243:"b10b05ad",7330:"89a78712",7415:"a2cae443",7437:"00a3956f",7443:"59fde0f9",7661:"785aad17",7768:"309570a1",7782:"6d3d1758",7821:"08453692",7952:"20d93ba1",8060:"2844e7f9",8079:"beddc3e6",8083:"80b78539",8088:"9bc1d319",8114:"4e56a4c5",8196:"ce21c50d",8371:"10d84964",8458:"df8c08c2",8680:"8d3890cb",8681:"b4d47bbb",8748:"e242eba9",8857:"8b902a32",9102:"de0951db",9161:"f70ad2cf",9387:"3143e01c",9455:"e6e8d8a5",9500:"c7df788f",9837:"310e62bf",9999:"ad63ac74"}[e]+".css"},d.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),d.hmd=function(e){return(e=Object.create(e)).children||(e.children=[]),Object.defineProperty(e,"exports",{enumerable:!0,set:function(){throw new Error("ES Modules may not assign module.exports or exports.*, Use ESM export syntax, instead: "+e.id)}}),e},d.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},o={},n="adar:",d.l=function(e,t,s,a){if(o[e])o[e].push(t);else{var r,i;if(void 0!==s)for(var c=document.getElementsByTagName("script"),l=0;l<c.length;l++){var u=c[l];if(u.getAttribute("src")==e||u.getAttribute("data-webpack")==n+s){r=u;break}}r||(i=!0,(r=document.createElement("script")).charset="utf-8",r.timeout=120,d.nc&&r.setAttribute("nonce",d.nc),r.setAttribute("data-webpack",n+s),r.src=e),o[e]=[t];var p=function(t,s){r.onerror=r.onload=null,clearTimeout(m);var n=o[e];if(delete o[e],r.parentNode&&r.parentNode.removeChild(r),n&&n.forEach((function(e){return e(s)})),t)return t(s)},m=setTimeout(p.bind(null,void 0,{type:"timeout",target:r}),12e4);r.onerror=p.bind(null,r.onerror),r.onload=p.bind(null,r.onload),i&&document.head.appendChild(r)}},d.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},d.nmd=function(e){return e.paths=[],e.children||(e.children=[]),e},d.p="",a=function(e){return new Promise((function(t,s){var o=d.miniCssF(e),n=d.p+o;if(function(e,t){for(var s=document.getElementsByTagName("link"),o=0;o<s.length;o++){var n=(r=s[o]).getAttribute("data-href")||r.getAttribute("href");if("stylesheet"===r.rel&&(n===e||n===t))return r}var a=document.getElementsByTagName("style");for(o=0;o<a.length;o++){var r;if((n=(r=a[o]).getAttribute("data-href"))===e||n===t)return r}}(o,n))return t();!function(e,t,s,o){var n=document.createElement("link");n.rel="stylesheet",n.type="text/css",n.onerror=n.onload=function(a){if(n.onerror=n.onload=null,"load"===a.type)s();else{var r=a&&("load"===a.type?"missing":a.type),i=a&&a.target&&a.target.href||t,c=new Error("Loading CSS chunk "+e+" failed.\n("+i+")");c.code="CSS_CHUNK_LOAD_FAILED",c.type=r,c.request=i,n.parentNode.removeChild(n),o(c)}},n.href=t,document.head.appendChild(n)}(e,n,t,s)}))},r={2143:0},d.f.miniCss=function(e,t){r[e]?t.push(r[e]):0!==r[e]&&{131:1,136:1,220:1,495:1,550:1,619:1,667:1,774:1,834:1,929:1,939:1,978:1,1083:1,1197:1,1273:1,1277:1,1372:1,1481:1,1493:1,1721:1,1742:1,1752:1,1780:1,1926:1,1932:1,2120:1,2208:1,2218:1,2240:1,2307:1,2379:1,2483:1,2486:1,2517:1,2539:1,2605:1,2624:1,2719:1,2811:1,2814:1,2830:1,2917:1,2922:1,3119:1,3178:1,3197:1,3427:1,3702:1,3751:1,4067:1,4297:1,4417:1,4452:1,4472:1,4523:1,4540:1,4714:1,4726:1,4917:1,5023:1,5110:1,5131:1,5245:1,5283:1,5397:1,5627:1,5661:1,5665:1,5721:1,5726:1,6017:1,6083:1,6116:1,6323:1,6415:1,6517:1,6543:1,6684:1,6710:1,6781:1,7146:1,7174:1,7183:1,7208:1,7243:1,7330:1,7415:1,7437:1,7443:1,7661:1,7768:1,7782:1,7821:1,7952:1,8060:1,8079:1,8083:1,8088:1,8114:1,8196:1,8371:1,8458:1,8680:1,8681:1,8748:1,8857:1,9102:1,9161:1,9387:1,9455:1,9500:1,9837:1,9999:1}[e]&&t.push(r[e]=a(e).then((function(){r[e]=0}),(function(t){throw delete r[e],t})))},function(){var e={2143:0};d.f.j=function(t,s){var o=d.o(e,t)?e[t]:void 0;if(0!==o)if(o)s.push(o[2]);else if(/^(1926|2240|2307|6415|7146|9837)$/.test(t))e[t]=0;else{var n=new Promise((function(s,n){o=e[t]=[s,n]}));s.push(o[2]=n);var a=d.p+d.u(t),r=new Error;d.l(a,(function(s){if(d.o(e,t)&&(0!==(o=e[t])&&(e[t]=void 0),o)){var n=s&&("load"===s.type?"missing":s.type),a=s&&s.target&&s.target.src;r.message="Loading chunk "+t+" failed.\n("+n+": "+a+")",r.name="ChunkLoadError",r.type=n,r.request=a,o[1](r)}}),"chunk-"+t,t)}},d.O.j=function(t){return 0===e[t]};var t=function(t,s){var o,n,a=s[0],r=s[1],i=s[2],c=0;if(a.some((function(t){return 0!==e[t]}))){for(o in r)d.o(r,o)&&(d.m[o]=r[o]);if(i)var l=i(d)}for(t&&t(s);c<a.length;c++)n=a[c],d.o(e,n)&&e[n]&&e[n][0](),e[n]=0;return d.O(l)},s=self.webpackChunkadar=self.webpackChunkadar||[];s.forEach(t.bind(null,0)),s.push=t.bind(null,s.push.bind(s))}();var l=d.O(void 0,[4998],(function(){return d(24051)}));l=d.O(l)}();