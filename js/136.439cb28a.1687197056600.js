"use strict";(self.webpackChunkadar=self.webpackChunkadar||[]).push([[136],{70136:function(e,t,o){o.r(t),o.d(t,{default:function(){return h}});var i=o(60760),r=o(70655),a=o(53545),s=o(8755),n=o(36930),d=o(82753),l=o(32806),p=o(80710),c=o(16546),u=o(74614);let m=class extends((0,a.Wr)(s.tA.FormattedAmountMixin,l.Z)){constructor(...e){super(...e),(0,i.Z)(this,"networkFees",void 0),(0,i.Z)(this,"liquidityProviderFee",void 0),(0,i.Z)(this,"rewards",void 0),(0,i.Z)(this,"route",void 0),(0,i.Z)(this,"isExchangeB",void 0),(0,i.Z)(this,"selectedDexId",void 0),(0,i.Z)(this,"price",void 0),(0,i.Z)(this,"priceReversed",void 0),(0,i.Z)(this,"isLoggedIn",void 0),(0,i.Z)(this,"tokenFrom",void 0),(0,i.Z)(this,"tokenTo",void 0),(0,i.Z)(this,"minMaxReceived",void 0),(0,i.Z)(this,"priceImpact",void 0),(0,i.Z)(this,"getAsset",void 0),(0,i.Z)(this,"infoOnly",void 0)}get liquidityProviderFeeTooltipText(){return this.t("swap.liquidityProviderFeeTooltip",{liquidityProviderFee:this.liquidityProviderFeeValue})}get swapRoute(){return this.route.map((e=>this.getAsset(e)?.symbol??"?"))}get priceValues(){const e=this.tokenFrom?.symbol??"",t=this.tokenTo?.symbol??"";return[{id:"from",label:this.t("swap.firstPerSecond",{first:e,second:t}),value:this.formatStringValue(this.price)},{id:"to",label:this.t("swap.firstPerSecond",{first:t,second:e}),value:this.formatStringValue(this.priceReversed)}]}get priceImpactFormatted(){return this.formatStringValue(this.priceImpact)}get rewardsValues(){return this.rewards.map(((e,t)=>{const o=d.KnownAssets.get(e.currency),i=this.formatCodecNumber(e.amount);return{value:i,fiatValue:this.getFiatAmountByString(i,o),assetSymbol:o?.symbol??"",label:0===t?this.t("swap.rewardsForSwap"):""}}))}get networkFee(){return this.networkFees[n.Operation.Swap]}get formattedNetworkFee(){return this.formatCodecNumber(this.networkFee)}get liquidityProviderFeeValue(){return this.formatStringValue("0.3")}get formattedLiquidityProviderFee(){return this.formatCodecNumber(this.liquidityProviderFee)}get formattedMinMaxReceived(){const e=(this.isExchangeB?this.tokenFrom:this.tokenTo)?.decimals;return this.formatCodecNumber(this.minMaxReceived,e)}get xorSymbol(){return" "+d.XOR.symbol}get getAssetSymbolText(){return(this.isExchangeB?this.tokenFrom:this.tokenTo)?.symbol??""}};(0,r.__decorate)([u.SB.wallet.settings.networkFees],m.prototype,"networkFees",void 0),(0,r.__decorate)([u.SB.swap.liquidityProviderFee],m.prototype,"liquidityProviderFee",void 0),(0,r.__decorate)([u.SB.swap.rewards],m.prototype,"rewards",void 0),(0,r.__decorate)([u.SB.swap.route],m.prototype,"route",void 0),(0,r.__decorate)([u.SB.swap.isExchangeB],m.prototype,"isExchangeB",void 0),(0,r.__decorate)([u.SB.swap.selectedDexId],m.prototype,"selectedDexId",void 0),(0,r.__decorate)([u.Yn.swap.price],m.prototype,"price",void 0),(0,r.__decorate)([u.Yn.swap.priceReversed],m.prototype,"priceReversed",void 0),(0,r.__decorate)([u.Yn.wallet.account.isLoggedIn],m.prototype,"isLoggedIn",void 0),(0,r.__decorate)([u.Yn.swap.tokenFrom],m.prototype,"tokenFrom",void 0),(0,r.__decorate)([u.Yn.swap.tokenTo],m.prototype,"tokenTo",void 0),(0,r.__decorate)([u.Yn.swap.minMaxReceived],m.prototype,"minMaxReceived",void 0),(0,r.__decorate)([u.Yn.swap.priceImpact],m.prototype,"priceImpact",void 0),(0,r.__decorate)([u.Yn.assets.assetDataByAddress],m.prototype,"getAsset",void 0),(0,r.__decorate)([(0,a.fI)({default:!0,type:Boolean})],m.prototype,"infoOnly",void 0),m=(0,r.__decorate)([(0,a.wA)({components:{ValueStatusWrapper:(0,p.kF)(c.z8.ValueStatusWrapper),TransactionDetails:(0,p.kF)(c.z8.TransactionDetails),FormattedAmount:s.wx.FormattedAmount,InfoLine:s.wx.InfoLine}})],m);var v=m,h=(0,o(1001).Z)(v,(function(){var e=this,t=e.$createElement,o=e._self._c||t;return o("transaction-details",{attrs:{"info-only":e.infoOnly}},[o("div",{staticClass:"swap-info-container"},[e._l(e.priceValues,(function(e){var t=e.id,i=e.label,r=e.value;return o("info-line",{key:t,attrs:{label:i,value:r}})})),o("info-line",{attrs:{label:e.t("swap."+(e.isExchangeB?"maxSold":"minReceived")),"label-tooltip":e.t("swap.minReceivedTooltip"),value:e.formattedMinMaxReceived,"asset-symbol":e.getAssetSymbolText,"fiat-value":e.getFiatAmountByCodecString(e.minMaxReceived,e.isExchangeB?e.tokenFrom:e.tokenTo),"is-formatted":""}}),e._l(e.rewardsValues,(function(t,i){return o("info-line",e._b({key:i},"info-line",t,!1))})),o("info-line",{attrs:{label:e.t("swap.priceImpact"),"label-tooltip":e.t("swap.priceImpactTooltip")}},[o("value-status-wrapper",{attrs:{value:e.priceImpact}},[o("formatted-amount",{staticClass:"swap-value",attrs:{value:e.priceImpactFormatted}},[e._v("%")])],1)],1),o("info-line",{attrs:{label:e.t("swap.route")}},e._l(e.swapRoute,(function(t){return o("div",{key:t,staticClass:"liquidity-route swap-value"},[o("span",[e._v(e._s(t))]),o("s-icon",{attrs:{name:"el-icon el-icon-arrow-right route-icon"}})],1)})),0),o("info-line",{attrs:{label:e.t("swap.liquidityProviderFee"),"label-tooltip":e.liquidityProviderFeeTooltipText,value:e.formattedLiquidityProviderFee,"asset-symbol":e.xorSymbol,"is-formatted":""}}),e.isLoggedIn?o("info-line",{attrs:{label:e.t("swap.networkFee"),"label-tooltip":e.t("networkFeeTooltipText"),value:e.formattedNetworkFee,"asset-symbol":e.xorSymbol,"fiat-value":e.getFiatAmountByCodecString(e.networkFee),"is-formatted":""}}):e._e()],2)])}),[],!1,null,null,null).exports}}]);